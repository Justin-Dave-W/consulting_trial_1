import { createRequire as _createRequire } from 'node:module';
const require = _createRequire(import.meta.url);
import {
  createPackageManager,
  getRepoType
} from "./chunk-TZ6REBY4.js";
import "./chunk-E2POOOG2.js";
import "./chunk-OJHDGJWP.js";
import {
  getProjectDependencies,
  saveWixLock
} from "./chunk-HGBMRF3C.js";
import {
  useVeloClient
} from "./chunk-E56WW2OA.js";
import "./chunk-SNWTG76C.js";
import "./chunk-6LI4WGAW.js";
import "./chunk-DDC4C6V6.js";
import "./chunk-BALHGZ6G.js";
import {
  useProjectModel
} from "./chunk-Q6F4OGQT.js";
import "./chunk-O25O35J2.js";
import "./chunk-7VND5WMC.js";
import "./chunk-WN3D6AOY.js";
import {
  Alert,
  Badge,
  Spinner,
  Text,
  Trans,
  require_react,
  useAsync
} from "./chunk-OH3G6JMX.js";
import "./chunk-W423UTD3.js";
import "./chunk-2K5KKUL3.js";
import "./chunk-YU54OBFT.js";
import "./chunk-XMTHMR2B.js";
import "./chunk-2CPXK3HU.js";
import "./chunk-F6DVF5WQ.js";
import "./chunk-GNB7T7J7.js";
import {
  require_lib
} from "./chunk-CVJG3VZM.js";
import {
  __toESM,
  init_esm_shims
} from "./chunk-PYIAC2GK.js";

// ../cli-site/src/components/InstallCommand/InstallCommand.tsx
init_esm_shims();
var import_react = __toESM(require_react(), 1);
var import_variant = __toESM(require_lib(), 1);

// ../cli-site/src/services/dependencies.ts
init_esm_shims();
async function createDependenciesService(projectFolder, veloClient) {
  return {
    install: async (packageName) => {
      const repoType = await getRepoType(projectFolder);
      const packageManager = await createPackageManager(repoType);
      if (packageName) {
        await packageManager.runInstallPackage(projectFolder, packageName);
      } else {
        await packageManager.runInstall(projectFolder);
      }
      const dependencies = await getProjectDependencies(projectFolder);
      const wixLockContent = await veloClient.generateWixLockFile(dependencies);
      await saveWixLock(projectFolder, wixLockContent);
    }
  };
}

// ../cli-site/src/components/InstallCommand/InstallCommand.tsx
var InstallCommand = ({ packageName }) => {
  const { model } = useProjectModel();
  const veloClient = useVeloClient();
  const { status } = useAsync(async () => {
    const { projectFolder } = model;
    const service = await createDependenciesService(projectFolder, veloClient);
    await service.install(packageName);
  }, []);
  return (0, import_variant.match)(status, {
    Loading: () => /* @__PURE__ */ import_react.default.createElement(
      Spinner,
      {
        text: packageName ? /* @__PURE__ */ import_react.default.createElement(
          Trans,
          {
            i18nKey: "install_command.package.loading",
            values: { packageName },
            components: [/* @__PURE__ */ import_react.default.createElement(Text, { bold: true })]
          }
        ) : /* @__PURE__ */ import_react.default.createElement(Trans, { i18nKey: "install_command.all_packages.loading" })
      }
    ),
    Error: () => null,
    Success: () => /* @__PURE__ */ import_react.default.createElement(Alert, { type: "success" }, /* @__PURE__ */ import_react.default.createElement(Badge, { skin: "success" }, /* @__PURE__ */ import_react.default.createElement(Trans, { i18nKey: "general.success" })), " ", packageName ? /* @__PURE__ */ import_react.default.createElement(
      Trans,
      {
        i18nKey: "install_command.package.success",
        values: { packageName },
        components: [/* @__PURE__ */ import_react.default.createElement(Text, { bold: true })]
      }
    ) : /* @__PURE__ */ import_react.default.createElement(Trans, { i18nKey: "install_command.all_packages.success" }))
  });
};
export {
  InstallCommand
};
//# sourceMappingURL=InstallCommand-ZXVGHZMT.js.map