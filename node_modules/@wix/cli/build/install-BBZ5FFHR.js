import { createRequire as _createRequire } from 'node:module';
const require = _createRequire(import.meta.url);
import {
  migrateToAnyNpmIfNeeded,
  resolveNpmDependencies,
  resolvePackageManager
} from "./chunk-D4CWTPCC.js";
import "./chunk-IBISICD2.js";
import "./chunk-QKXNIB4D.js";
import {
  createLogger
} from "./chunk-RNE7RRCK.js";
import {
  createI18nT
} from "./chunk-2G7FRAIA.js";
import "./chunk-CNXKF7E3.js";
import {
  authenticate
} from "./chunk-PAPTRQZR.js";
import "./chunk-6XRFJZTQ.js";
import "./chunk-TZ6REBY4.js";
import "./chunk-E2POOOG2.js";
import "./chunk-OJHDGJWP.js";
import "./chunk-BALHGZ6G.js";
import "./chunk-KWG4MUE3.js";
import "./chunk-O25O35J2.js";
import "./chunk-7VND5WMC.js";
import "./chunk-WN3D6AOY.js";
import "./chunk-OH3G6JMX.js";
import "./chunk-W423UTD3.js";
import "./chunk-2K5KKUL3.js";
import "./chunk-YU54OBFT.js";
import "./chunk-XMTHMR2B.js";
import "./chunk-VSMZTFUW.js";
import "./chunk-2CPXK3HU.js";
import "./chunk-F6DVF5WQ.js";
import "./chunk-GNB7T7J7.js";
import "./chunk-CVJG3VZM.js";
import {
  init_esm_shims
} from "./chunk-PYIAC2GK.js";

// ../cli-site-old/src/install/index.ts
init_esm_shims();

// ../cli-site-old/src/install/install.ts
init_esm_shims();
async function install(model, { biLogger, errorReporter }, options, initialPackageName) {
  const authState = await authenticate({
    metaSiteId: model.metaSiteId,
    biLogger,
    errorReporter
  });
  const t = createI18nT();
  const logger = createLogger({ t });
  const packageName = initialPackageName?.trim() ?? null;
  await migrateToAnyNpmIfNeeded(model.projectFolder, logger);
  const logInstalled = packageName ? logger.logDependencyInstalling(packageName) : logger.logAllDependenciesInstalling();
  try {
    const packageManager = await resolvePackageManager(
      model.projectFolder,
      options
    );
    if (packageName) {
      await packageManager.runInstallPackage(model.projectFolder, packageName);
    } else {
      await packageManager.runInstall(model.projectFolder);
    }
    await resolveNpmDependencies(model.projectFolder, { authState });
    logInstalled.success();
  } catch (error) {
    logInstalled.fail();
    throw error;
  }
}
export {
  install
};
//# sourceMappingURL=install-BBZ5FFHR.js.map