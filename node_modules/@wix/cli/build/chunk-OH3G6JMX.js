import { createRequire as _createRequire } from 'node:module';
const require = _createRequire(import.meta.url);
import {
  __assign,
  __extends,
  __rest,
  __spreadArray,
  init_tslib_es6,
  require_has_flag,
  require_is_ci,
  require_supports_color
} from "./chunk-W423UTD3.js";
import {
  isUnicodeSupported,
  require_cli_spinners,
  source_default,
  stripAnsi
} from "./chunk-2K5KKUL3.js";
import {
  getTestOverrides
} from "./chunk-GNB7T7J7.js";
import {
  CliError,
  CliErrorCode,
  require_lib
} from "./chunk-CVJG3VZM.js";
import {
  __commonJS,
  __require,
  __toESM,
  init_esm_shims
} from "./chunk-PYIAC2GK.js";

// ../../node_modules/react/cjs/react.production.min.js
var require_react_production_min = __commonJS({
  "../../node_modules/react/cjs/react.production.min.js"(exports) {
    "use strict";
    init_esm_shims();
    var l = Symbol.for("react.element");
    var n2 = Symbol.for("react.portal");
    var p = Symbol.for("react.fragment");
    var q = Symbol.for("react.strict_mode");
    var r2 = Symbol.for("react.profiler");
    var t3 = Symbol.for("react.provider");
    var u = Symbol.for("react.context");
    var v = Symbol.for("react.forward_ref");
    var w = Symbol.for("react.suspense");
    var x = Symbol.for("react.memo");
    var y = Symbol.for("react.lazy");
    var z = Symbol.iterator;
    function A(a2) {
      if (null === a2 || "object" !== typeof a2) return null;
      a2 = z && a2[z] || a2["@@iterator"];
      return "function" === typeof a2 ? a2 : null;
    }
    var B = { isMounted: function() {
      return false;
    }, enqueueForceUpdate: function() {
    }, enqueueReplaceState: function() {
    }, enqueueSetState: function() {
    } };
    var C = Object.assign;
    var D = {};
    function E2(a2, b, e2) {
      this.props = a2;
      this.context = b;
      this.refs = D;
      this.updater = e2 || B;
    }
    E2.prototype.isReactComponent = {};
    E2.prototype.setState = function(a2, b) {
      if ("object" !== typeof a2 && "function" !== typeof a2 && null != a2) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
      this.updater.enqueueSetState(this, a2, b, "setState");
    };
    E2.prototype.forceUpdate = function(a2) {
      this.updater.enqueueForceUpdate(this, a2, "forceUpdate");
    };
    function F() {
    }
    F.prototype = E2.prototype;
    function G(a2, b, e2) {
      this.props = a2;
      this.context = b;
      this.refs = D;
      this.updater = e2 || B;
    }
    var H = G.prototype = new F();
    H.constructor = G;
    C(H, E2.prototype);
    H.isPureReactComponent = true;
    var I = Array.isArray;
    var J = Object.prototype.hasOwnProperty;
    var K = { current: null };
    var L = { key: true, ref: true, __self: true, __source: true };
    function M(a2, b, e2) {
      var d, c2 = {}, k = null, h = null;
      if (null != b) for (d in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), b) J.call(b, d) && !L.hasOwnProperty(d) && (c2[d] = b[d]);
      var g = arguments.length - 2;
      if (1 === g) c2.children = e2;
      else if (1 < g) {
        for (var f = Array(g), m = 0; m < g; m++) f[m] = arguments[m + 2];
        c2.children = f;
      }
      if (a2 && a2.defaultProps) for (d in g = a2.defaultProps, g) void 0 === c2[d] && (c2[d] = g[d]);
      return { $$typeof: l, type: a2, key: k, ref: h, props: c2, _owner: K.current };
    }
    function N(a2, b) {
      return { $$typeof: l, type: a2.type, key: b, ref: a2.ref, props: a2.props, _owner: a2._owner };
    }
    function O(a2) {
      return "object" === typeof a2 && null !== a2 && a2.$$typeof === l;
    }
    function escape3(a2) {
      var b = { "=": "=0", ":": "=2" };
      return "$" + a2.replace(/[=:]/g, function(a3) {
        return b[a3];
      });
    }
    var P = /\/+/g;
    function Q(a2, b) {
      return "object" === typeof a2 && null !== a2 && null != a2.key ? escape3("" + a2.key) : b.toString(36);
    }
    function R(a2, b, e2, d, c2) {
      var k = typeof a2;
      if ("undefined" === k || "boolean" === k) a2 = null;
      var h = false;
      if (null === a2) h = true;
      else switch (k) {
        case "string":
        case "number":
          h = true;
          break;
        case "object":
          switch (a2.$$typeof) {
            case l:
            case n2:
              h = true;
          }
      }
      if (h) return h = a2, c2 = c2(h), a2 = "" === d ? "." + Q(h, 0) : d, I(c2) ? (e2 = "", null != a2 && (e2 = a2.replace(P, "$&/") + "/"), R(c2, b, e2, "", function(a3) {
        return a3;
      })) : null != c2 && (O(c2) && (c2 = N(c2, e2 + (!c2.key || h && h.key === c2.key ? "" : ("" + c2.key).replace(P, "$&/") + "/") + a2)), b.push(c2)), 1;
      h = 0;
      d = "" === d ? "." : d + ":";
      if (I(a2)) for (var g = 0; g < a2.length; g++) {
        k = a2[g];
        var f = d + Q(k, g);
        h += R(k, b, e2, f, c2);
      }
      else if (f = A(a2), "function" === typeof f) for (a2 = f.call(a2), g = 0; !(k = a2.next()).done; ) k = k.value, f = d + Q(k, g++), h += R(k, b, e2, f, c2);
      else if ("object" === k) throw b = String(a2), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a2).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
      return h;
    }
    function S(a2, b, e2) {
      if (null == a2) return a2;
      var d = [], c2 = 0;
      R(a2, d, "", "", function(a3) {
        return b.call(e2, a3, c2++);
      });
      return d;
    }
    function T(a2) {
      if (-1 === a2._status) {
        var b = a2._result;
        b = b();
        b.then(function(b2) {
          if (0 === a2._status || -1 === a2._status) a2._status = 1, a2._result = b2;
        }, function(b2) {
          if (0 === a2._status || -1 === a2._status) a2._status = 2, a2._result = b2;
        });
        -1 === a2._status && (a2._status = 0, a2._result = b);
      }
      if (1 === a2._status) return a2._result.default;
      throw a2._result;
    }
    var U = { current: null };
    var V = { transition: null };
    var W = { ReactCurrentDispatcher: U, ReactCurrentBatchConfig: V, ReactCurrentOwner: K };
    function X() {
      throw Error("act(...) is not supported in production builds of React.");
    }
    exports.Children = { map: S, forEach: function(a2, b, e2) {
      S(a2, function() {
        b.apply(this, arguments);
      }, e2);
    }, count: function(a2) {
      var b = 0;
      S(a2, function() {
        b++;
      });
      return b;
    }, toArray: function(a2) {
      return S(a2, function(a3) {
        return a3;
      }) || [];
    }, only: function(a2) {
      if (!O(a2)) throw Error("React.Children.only expected to receive a single React element child.");
      return a2;
    } };
    exports.Component = E2;
    exports.Fragment = p;
    exports.Profiler = r2;
    exports.PureComponent = G;
    exports.StrictMode = q;
    exports.Suspense = w;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W;
    exports.act = X;
    exports.cloneElement = function(a2, b, e2) {
      if (null === a2 || void 0 === a2) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a2 + ".");
      var d = C({}, a2.props), c2 = a2.key, k = a2.ref, h = a2._owner;
      if (null != b) {
        void 0 !== b.ref && (k = b.ref, h = K.current);
        void 0 !== b.key && (c2 = "" + b.key);
        if (a2.type && a2.type.defaultProps) var g = a2.type.defaultProps;
        for (f in b) J.call(b, f) && !L.hasOwnProperty(f) && (d[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);
      }
      var f = arguments.length - 2;
      if (1 === f) d.children = e2;
      else if (1 < f) {
        g = Array(f);
        for (var m = 0; m < f; m++) g[m] = arguments[m + 2];
        d.children = g;
      }
      return { $$typeof: l, type: a2.type, key: c2, ref: k, props: d, _owner: h };
    };
    exports.createContext = function(a2) {
      a2 = { $$typeof: u, _currentValue: a2, _currentValue2: a2, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null };
      a2.Provider = { $$typeof: t3, _context: a2 };
      return a2.Consumer = a2;
    };
    exports.createElement = M;
    exports.createFactory = function(a2) {
      var b = M.bind(null, a2);
      b.type = a2;
      return b;
    };
    exports.createRef = function() {
      return { current: null };
    };
    exports.forwardRef = function(a2) {
      return { $$typeof: v, render: a2 };
    };
    exports.isValidElement = O;
    exports.lazy = function(a2) {
      return { $$typeof: y, _payload: { _status: -1, _result: a2 }, _init: T };
    };
    exports.memo = function(a2, b) {
      return { $$typeof: x, type: a2, compare: void 0 === b ? null : b };
    };
    exports.startTransition = function(a2) {
      var b = V.transition;
      V.transition = {};
      try {
        a2();
      } finally {
        V.transition = b;
      }
    };
    exports.unstable_act = X;
    exports.useCallback = function(a2, b) {
      return U.current.useCallback(a2, b);
    };
    exports.useContext = function(a2) {
      return U.current.useContext(a2);
    };
    exports.useDebugValue = function() {
    };
    exports.useDeferredValue = function(a2) {
      return U.current.useDeferredValue(a2);
    };
    exports.useEffect = function(a2, b) {
      return U.current.useEffect(a2, b);
    };
    exports.useId = function() {
      return U.current.useId();
    };
    exports.useImperativeHandle = function(a2, b, e2) {
      return U.current.useImperativeHandle(a2, b, e2);
    };
    exports.useInsertionEffect = function(a2, b) {
      return U.current.useInsertionEffect(a2, b);
    };
    exports.useLayoutEffect = function(a2, b) {
      return U.current.useLayoutEffect(a2, b);
    };
    exports.useMemo = function(a2, b) {
      return U.current.useMemo(a2, b);
    };
    exports.useReducer = function(a2, b, e2) {
      return U.current.useReducer(a2, b, e2);
    };
    exports.useRef = function(a2) {
      return U.current.useRef(a2);
    };
    exports.useState = function(a2) {
      return U.current.useState(a2);
    };
    exports.useSyncExternalStore = function(a2, b, e2) {
      return U.current.useSyncExternalStore(a2, b, e2);
    };
    exports.useTransition = function() {
      return U.current.useTransition();
    };
    exports.version = "18.3.1";
  }
});

// ../../node_modules/react/index.js
var require_react = __commonJS({
  "../../node_modules/react/index.js"(exports, module) {
    "use strict";
    init_esm_shims();
    if (true) {
      module.exports = require_react_production_min();
    } else {
      module.exports = null;
    }
  }
});

// ../../node_modules/lodash/isObject.js
var require_isObject = __commonJS({
  "../../node_modules/lodash/isObject.js"(exports, module) {
    "use strict";
    init_esm_shims();
    function isObject2(value2) {
      var type = typeof value2;
      return value2 != null && (type == "object" || type == "function");
    }
    module.exports = isObject2;
  }
});

// ../../node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "../../node_modules/lodash/_freeGlobal.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module.exports = freeGlobal;
  }
});

// ../../node_modules/lodash/_root.js
var require_root = __commonJS({
  "../../node_modules/lodash/_root.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module.exports = root;
  }
});

// ../../node_modules/lodash/now.js
var require_now = __commonJS({
  "../../node_modules/lodash/now.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var root = require_root();
    var now = function() {
      return root.Date.now();
    };
    module.exports = now;
  }
});

// ../../node_modules/lodash/_trimmedEndIndex.js
var require_trimmedEndIndex = __commonJS({
  "../../node_modules/lodash/_trimmedEndIndex.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var reWhitespace = /\s/;
    function trimmedEndIndex(string) {
      var index = string.length;
      while (index-- && reWhitespace.test(string.charAt(index))) {
      }
      return index;
    }
    module.exports = trimmedEndIndex;
  }
});

// ../../node_modules/lodash/_baseTrim.js
var require_baseTrim = __commonJS({
  "../../node_modules/lodash/_baseTrim.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var trimmedEndIndex = require_trimmedEndIndex();
    var reTrimStart = /^\s+/;
    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    module.exports = baseTrim;
  }
});

// ../../node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "../../node_modules/lodash/_Symbol.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var root = require_root();
    var Symbol2 = root.Symbol;
    module.exports = Symbol2;
  }
});

// ../../node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "../../node_modules/lodash/_getRawTag.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var Symbol2 = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function getRawTag(value2) {
      var isOwn = hasOwnProperty.call(value2, symToStringTag), tag = value2[symToStringTag];
      try {
        value2[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e2) {
      }
      var result = nativeObjectToString.call(value2);
      if (unmasked) {
        if (isOwn) {
          value2[symToStringTag] = tag;
        } else {
          delete value2[symToStringTag];
        }
      }
      return result;
    }
    module.exports = getRawTag;
  }
});

// ../../node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "../../node_modules/lodash/_objectToString.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value2) {
      return nativeObjectToString.call(value2);
    }
    module.exports = objectToString;
  }
});

// ../../node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "../../node_modules/lodash/_baseGetTag.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var Symbol2 = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function baseGetTag(value2) {
      if (value2 == null) {
        return value2 === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value2) ? getRawTag(value2) : objectToString(value2);
    }
    module.exports = baseGetTag;
  }
});

// ../../node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "../../node_modules/lodash/isObjectLike.js"(exports, module) {
    "use strict";
    init_esm_shims();
    function isObjectLike(value2) {
      return value2 != null && typeof value2 == "object";
    }
    module.exports = isObjectLike;
  }
});

// ../../node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "../../node_modules/lodash/isSymbol.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value2) {
      return typeof value2 == "symbol" || isObjectLike(value2) && baseGetTag(value2) == symbolTag;
    }
    module.exports = isSymbol;
  }
});

// ../../node_modules/lodash/toNumber.js
var require_toNumber = __commonJS({
  "../../node_modules/lodash/toNumber.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var baseTrim = require_baseTrim();
    var isObject2 = require_isObject();
    var isSymbol = require_isSymbol();
    var NAN = 0 / 0;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    function toNumber(value2) {
      if (typeof value2 == "number") {
        return value2;
      }
      if (isSymbol(value2)) {
        return NAN;
      }
      if (isObject2(value2)) {
        var other = typeof value2.valueOf == "function" ? value2.valueOf() : value2;
        value2 = isObject2(other) ? other + "" : other;
      }
      if (typeof value2 != "string") {
        return value2 === 0 ? value2 : +value2;
      }
      value2 = baseTrim(value2);
      var isBinary = reIsBinary.test(value2);
      return isBinary || reIsOctal.test(value2) ? freeParseInt(value2.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value2) ? NAN : +value2;
    }
    module.exports = toNumber;
  }
});

// ../../node_modules/lodash/debounce.js
var require_debounce = __commonJS({
  "../../node_modules/lodash/debounce.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var isObject2 = require_isObject();
    var now = require_now();
    var toNumber = require_toNumber();
    var FUNC_ERROR_TEXT = "Expected a function";
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    function debounce(func, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject2(options)) {
        leading = !!options.leading;
        maxing = "maxWait" in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
        return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    module.exports = debounce;
  }
});

// ../../node_modules/lodash/throttle.js
var require_throttle = __commonJS({
  "../../node_modules/lodash/throttle.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var debounce = require_debounce();
    var isObject2 = require_isObject();
    var FUNC_ERROR_TEXT = "Expected a function";
    function throttle2(func, wait, options) {
      var leading = true, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject2(options)) {
        leading = "leading" in options ? !!options.leading : leading;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        "leading": leading,
        "maxWait": wait,
        "trailing": trailing
      });
    }
    module.exports = throttle2;
  }
});

// ../../node_modules/signal-exit/signals.js
var require_signals = __commonJS({
  "../../node_modules/signal-exit/signals.js"(exports, module) {
    "use strict";
    init_esm_shims();
    module.exports = [
      "SIGABRT",
      "SIGALRM",
      "SIGHUP",
      "SIGINT",
      "SIGTERM"
    ];
    if (process.platform !== "win32") {
      module.exports.push(
        "SIGVTALRM",
        "SIGXCPU",
        "SIGXFSZ",
        "SIGUSR2",
        "SIGTRAP",
        "SIGSYS",
        "SIGQUIT",
        "SIGIOT"
        // should detect profiler and enable/disable accordingly.
        // see #21
        // 'SIGPROF'
      );
    }
    if (process.platform === "linux") {
      module.exports.push(
        "SIGIO",
        "SIGPOLL",
        "SIGPWR",
        "SIGSTKFLT",
        "SIGUNUSED"
      );
    }
  }
});

// ../../node_modules/signal-exit/index.js
var require_signal_exit = __commonJS({
  "../../node_modules/signal-exit/index.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var process12 = global.process;
    var processOk = function(process13) {
      return process13 && typeof process13 === "object" && typeof process13.removeListener === "function" && typeof process13.emit === "function" && typeof process13.reallyExit === "function" && typeof process13.listeners === "function" && typeof process13.kill === "function" && typeof process13.pid === "number" && typeof process13.on === "function";
    };
    if (!processOk(process12)) {
      module.exports = function() {
        return function() {
        };
      };
    } else {
      assert = __require("assert");
      signals = require_signals();
      isWin = /^win/i.test(process12.platform);
      EE = __require("events");
      if (typeof EE !== "function") {
        EE = EE.EventEmitter;
      }
      if (process12.__signal_exit_emitter__) {
        emitter = process12.__signal_exit_emitter__;
      } else {
        emitter = process12.__signal_exit_emitter__ = new EE();
        emitter.count = 0;
        emitter.emitted = {};
      }
      if (!emitter.infinite) {
        emitter.setMaxListeners(Infinity);
        emitter.infinite = true;
      }
      module.exports = function(cb, opts) {
        if (!processOk(global.process)) {
          return function() {
          };
        }
        assert.equal(typeof cb, "function", "a callback must be provided for exit handler");
        if (loaded === false) {
          load();
        }
        var ev = "exit";
        if (opts && opts.alwaysLast) {
          ev = "afterexit";
        }
        var remove = function() {
          emitter.removeListener(ev, cb);
          if (emitter.listeners("exit").length === 0 && emitter.listeners("afterexit").length === 0) {
            unload();
          }
        };
        emitter.on(ev, cb);
        return remove;
      };
      unload = function unload2() {
        if (!loaded || !processOk(global.process)) {
          return;
        }
        loaded = false;
        signals.forEach(function(sig) {
          try {
            process12.removeListener(sig, sigListeners[sig]);
          } catch (er) {
          }
        });
        process12.emit = originalProcessEmit;
        process12.reallyExit = originalProcessReallyExit;
        emitter.count -= 1;
      };
      module.exports.unload = unload;
      emit = function emit2(event, code, signal) {
        if (emitter.emitted[event]) {
          return;
        }
        emitter.emitted[event] = true;
        emitter.emit(event, code, signal);
      };
      sigListeners = {};
      signals.forEach(function(sig) {
        sigListeners[sig] = function listener() {
          if (!processOk(global.process)) {
            return;
          }
          var listeners = process12.listeners(sig);
          if (listeners.length === emitter.count) {
            unload();
            emit("exit", null, sig);
            emit("afterexit", null, sig);
            if (isWin && sig === "SIGHUP") {
              sig = "SIGINT";
            }
            process12.kill(process12.pid, sig);
          }
        };
      });
      module.exports.signals = function() {
        return signals;
      };
      loaded = false;
      load = function load2() {
        if (loaded || !processOk(global.process)) {
          return;
        }
        loaded = true;
        emitter.count += 1;
        signals = signals.filter(function(sig) {
          try {
            process12.on(sig, sigListeners[sig]);
            return true;
          } catch (er) {
            return false;
          }
        });
        process12.emit = processEmit;
        process12.reallyExit = processReallyExit;
      };
      module.exports.load = load;
      originalProcessReallyExit = process12.reallyExit;
      processReallyExit = function processReallyExit2(code) {
        if (!processOk(global.process)) {
          return;
        }
        process12.exitCode = code || /* istanbul ignore next */
        0;
        emit("exit", process12.exitCode, null);
        emit("afterexit", process12.exitCode, null);
        originalProcessReallyExit.call(process12, process12.exitCode);
      };
      originalProcessEmit = process12.emit;
      processEmit = function processEmit2(ev, arg) {
        if (ev === "exit" && processOk(global.process)) {
          if (arg !== void 0) {
            process12.exitCode = arg;
          }
          var ret = originalProcessEmit.apply(this, arguments);
          emit("exit", process12.exitCode, null);
          emit("afterexit", process12.exitCode, null);
          return ret;
        } else {
          return originalProcessEmit.apply(this, arguments);
        }
      };
    }
    var assert;
    var signals;
    var isWin;
    var EE;
    var emitter;
    var unload;
    var emit;
    var sigListeners;
    var loaded;
    var load;
    var originalProcessReallyExit;
    var processReallyExit;
    var originalProcessEmit;
    var processEmit;
  }
});

// ../../node_modules/scheduler/cjs/scheduler.production.min.js
var require_scheduler_production_min = __commonJS({
  "../../node_modules/scheduler/cjs/scheduler.production.min.js"(exports) {
    "use strict";
    init_esm_shims();
    function f(a2, b) {
      var c2 = a2.length;
      a2.push(b);
      a: for (; 0 < c2; ) {
        var d = c2 - 1 >>> 1, e2 = a2[d];
        if (0 < g(e2, b)) a2[d] = b, a2[c2] = e2, c2 = d;
        else break a;
      }
    }
    function h(a2) {
      return 0 === a2.length ? null : a2[0];
    }
    function k(a2) {
      if (0 === a2.length) return null;
      var b = a2[0], c2 = a2.pop();
      if (c2 !== b) {
        a2[0] = c2;
        a: for (var d = 0, e2 = a2.length, w = e2 >>> 1; d < w; ) {
          var m = 2 * (d + 1) - 1, C = a2[m], n2 = m + 1, x = a2[n2];
          if (0 > g(C, c2)) n2 < e2 && 0 > g(x, C) ? (a2[d] = x, a2[n2] = c2, d = n2) : (a2[d] = C, a2[m] = c2, d = m);
          else if (n2 < e2 && 0 > g(x, c2)) a2[d] = x, a2[n2] = c2, d = n2;
          else break a;
        }
      }
      return b;
    }
    function g(a2, b) {
      var c2 = a2.sortIndex - b.sortIndex;
      return 0 !== c2 ? c2 : a2.id - b.id;
    }
    if ("object" === typeof performance && "function" === typeof performance.now) {
      l = performance;
      exports.unstable_now = function() {
        return l.now();
      };
    } else {
      p = Date, q = p.now();
      exports.unstable_now = function() {
        return p.now() - q;
      };
    }
    var l;
    var p;
    var q;
    var r2 = [];
    var t3 = [];
    var u = 1;
    var v = null;
    var y = 3;
    var z = false;
    var A = false;
    var B = false;
    var D = "function" === typeof setTimeout ? setTimeout : null;
    var E2 = "function" === typeof clearTimeout ? clearTimeout : null;
    var F = "undefined" !== typeof setImmediate ? setImmediate : null;
    "undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function G(a2) {
      for (var b = h(t3); null !== b; ) {
        if (null === b.callback) k(t3);
        else if (b.startTime <= a2) k(t3), b.sortIndex = b.expirationTime, f(r2, b);
        else break;
        b = h(t3);
      }
    }
    function H(a2) {
      B = false;
      G(a2);
      if (!A) if (null !== h(r2)) A = true, I(J);
      else {
        var b = h(t3);
        null !== b && K(H, b.startTime - a2);
      }
    }
    function J(a2, b) {
      A = false;
      B && (B = false, E2(L), L = -1);
      z = true;
      var c2 = y;
      try {
        G(b);
        for (v = h(r2); null !== v && (!(v.expirationTime > b) || a2 && !M()); ) {
          var d = v.callback;
          if ("function" === typeof d) {
            v.callback = null;
            y = v.priorityLevel;
            var e2 = d(v.expirationTime <= b);
            b = exports.unstable_now();
            "function" === typeof e2 ? v.callback = e2 : v === h(r2) && k(r2);
            G(b);
          } else k(r2);
          v = h(r2);
        }
        if (null !== v) var w = true;
        else {
          var m = h(t3);
          null !== m && K(H, m.startTime - b);
          w = false;
        }
        return w;
      } finally {
        v = null, y = c2, z = false;
      }
    }
    var N = false;
    var O = null;
    var L = -1;
    var P = 5;
    var Q = -1;
    function M() {
      return exports.unstable_now() - Q < P ? false : true;
    }
    function R() {
      if (null !== O) {
        var a2 = exports.unstable_now();
        Q = a2;
        var b = true;
        try {
          b = O(true, a2);
        } finally {
          b ? S() : (N = false, O = null);
        }
      } else N = false;
    }
    var S;
    if ("function" === typeof F) S = function() {
      F(R);
    };
    else if ("undefined" !== typeof MessageChannel) {
      T = new MessageChannel(), U = T.port2;
      T.port1.onmessage = R;
      S = function() {
        U.postMessage(null);
      };
    } else S = function() {
      D(R, 0);
    };
    var T;
    var U;
    function I(a2) {
      O = a2;
      N || (N = true, S());
    }
    function K(a2, b) {
      L = D(function() {
        a2(exports.unstable_now());
      }, b);
    }
    exports.unstable_IdlePriority = 5;
    exports.unstable_ImmediatePriority = 1;
    exports.unstable_LowPriority = 4;
    exports.unstable_NormalPriority = 3;
    exports.unstable_Profiling = null;
    exports.unstable_UserBlockingPriority = 2;
    exports.unstable_cancelCallback = function(a2) {
      a2.callback = null;
    };
    exports.unstable_continueExecution = function() {
      A || z || (A = true, I(J));
    };
    exports.unstable_forceFrameRate = function(a2) {
      0 > a2 || 125 < a2 ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P = 0 < a2 ? Math.floor(1e3 / a2) : 5;
    };
    exports.unstable_getCurrentPriorityLevel = function() {
      return y;
    };
    exports.unstable_getFirstCallbackNode = function() {
      return h(r2);
    };
    exports.unstable_next = function(a2) {
      switch (y) {
        case 1:
        case 2:
        case 3:
          var b = 3;
          break;
        default:
          b = y;
      }
      var c2 = y;
      y = b;
      try {
        return a2();
      } finally {
        y = c2;
      }
    };
    exports.unstable_pauseExecution = function() {
    };
    exports.unstable_requestPaint = function() {
    };
    exports.unstable_runWithPriority = function(a2, b) {
      switch (a2) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          a2 = 3;
      }
      var c2 = y;
      y = a2;
      try {
        return b();
      } finally {
        y = c2;
      }
    };
    exports.unstable_scheduleCallback = function(a2, b, c2) {
      var d = exports.unstable_now();
      "object" === typeof c2 && null !== c2 ? (c2 = c2.delay, c2 = "number" === typeof c2 && 0 < c2 ? d + c2 : d) : c2 = d;
      switch (a2) {
        case 1:
          var e2 = -1;
          break;
        case 2:
          e2 = 250;
          break;
        case 5:
          e2 = 1073741823;
          break;
        case 4:
          e2 = 1e4;
          break;
        default:
          e2 = 5e3;
      }
      e2 = c2 + e2;
      a2 = { id: u++, callback: b, priorityLevel: a2, startTime: c2, expirationTime: e2, sortIndex: -1 };
      c2 > d ? (a2.sortIndex = c2, f(t3, a2), null === h(r2) && a2 === h(t3) && (B ? (E2(L), L = -1) : B = true, K(H, c2 - d))) : (a2.sortIndex = e2, f(r2, a2), A || z || (A = true, I(J)));
      return a2;
    };
    exports.unstable_shouldYield = M;
    exports.unstable_wrapCallback = function(a2) {
      var b = y;
      return function() {
        var c2 = y;
        y = b;
        try {
          return a2.apply(this, arguments);
        } finally {
          y = c2;
        }
      };
    };
  }
});

// ../../node_modules/scheduler/index.js
var require_scheduler = __commonJS({
  "../../node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    init_esm_shims();
    if (true) {
      module.exports = require_scheduler_production_min();
    } else {
      module.exports = null;
    }
  }
});

// ../../node_modules/react-reconciler/cjs/react-reconciler.production.min.js
var require_react_reconciler_production_min = __commonJS({
  "../../node_modules/react-reconciler/cjs/react-reconciler.production.min.js"(exports, module) {
    "use strict";
    init_esm_shims();
    module.exports = function $$$reconciler($$$hostConfig) {
      var exports2 = {};
      "use strict";
      var aa = require_react(), ba = require_scheduler(), ca = Object.assign;
      function m(a2) {
        for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a2, c2 = 1; c2 < arguments.length; c2++) b += "&args[]=" + encodeURIComponent(arguments[c2]);
        return "Minified React error #" + a2 + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
      }
      var da = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, ea = Symbol.for("react.element"), fa = Symbol.for("react.portal"), ha = Symbol.for("react.fragment"), ia = Symbol.for("react.strict_mode"), ja = Symbol.for("react.profiler"), ka = Symbol.for("react.provider"), la = Symbol.for("react.context"), ma = Symbol.for("react.forward_ref"), na = Symbol.for("react.suspense"), oa = Symbol.for("react.suspense_list"), pa = Symbol.for("react.memo"), qa = Symbol.for("react.lazy");
      Symbol.for("react.scope");
      Symbol.for("react.debug_trace_mode");
      var ra = Symbol.for("react.offscreen");
      Symbol.for("react.legacy_hidden");
      Symbol.for("react.cache");
      Symbol.for("react.tracing_marker");
      var sa = Symbol.iterator;
      function ta(a2) {
        if (null === a2 || "object" !== typeof a2) return null;
        a2 = sa && a2[sa] || a2["@@iterator"];
        return "function" === typeof a2 ? a2 : null;
      }
      function ua(a2) {
        if (null == a2) return null;
        if ("function" === typeof a2) return a2.displayName || a2.name || null;
        if ("string" === typeof a2) return a2;
        switch (a2) {
          case ha:
            return "Fragment";
          case fa:
            return "Portal";
          case ja:
            return "Profiler";
          case ia:
            return "StrictMode";
          case na:
            return "Suspense";
          case oa:
            return "SuspenseList";
        }
        if ("object" === typeof a2) switch (a2.$$typeof) {
          case la:
            return (a2.displayName || "Context") + ".Consumer";
          case ka:
            return (a2._context.displayName || "Context") + ".Provider";
          case ma:
            var b = a2.render;
            a2 = a2.displayName;
            a2 || (a2 = b.displayName || b.name || "", a2 = "" !== a2 ? "ForwardRef(" + a2 + ")" : "ForwardRef");
            return a2;
          case pa:
            return b = a2.displayName || null, null !== b ? b : ua(a2.type) || "Memo";
          case qa:
            b = a2._payload;
            a2 = a2._init;
            try {
              return ua(a2(b));
            } catch (c2) {
            }
        }
        return null;
      }
      function va(a2) {
        var b = a2.type;
        switch (a2.tag) {
          case 24:
            return "Cache";
          case 9:
            return (b.displayName || "Context") + ".Consumer";
          case 10:
            return (b._context.displayName || "Context") + ".Provider";
          case 18:
            return "DehydratedFragment";
          case 11:
            return a2 = b.render, a2 = a2.displayName || a2.name || "", b.displayName || ("" !== a2 ? "ForwardRef(" + a2 + ")" : "ForwardRef");
          case 7:
            return "Fragment";
          case 5:
            return b;
          case 4:
            return "Portal";
          case 3:
            return "Root";
          case 6:
            return "Text";
          case 16:
            return ua(b);
          case 8:
            return b === ia ? "StrictMode" : "Mode";
          case 22:
            return "Offscreen";
          case 12:
            return "Profiler";
          case 21:
            return "Scope";
          case 13:
            return "Suspense";
          case 19:
            return "SuspenseList";
          case 25:
            return "TracingMarker";
          case 1:
          case 0:
          case 17:
          case 2:
          case 14:
          case 15:
            if ("function" === typeof b) return b.displayName || b.name || null;
            if ("string" === typeof b) return b;
        }
        return null;
      }
      function wa(a2) {
        var b = a2, c2 = a2;
        if (a2.alternate) for (; b.return; ) b = b.return;
        else {
          a2 = b;
          do
            b = a2, 0 !== (b.flags & 4098) && (c2 = b.return), a2 = b.return;
          while (a2);
        }
        return 3 === b.tag ? c2 : null;
      }
      function xa(a2) {
        if (wa(a2) !== a2) throw Error(m(188));
      }
      function ya(a2) {
        var b = a2.alternate;
        if (!b) {
          b = wa(a2);
          if (null === b) throw Error(m(188));
          return b !== a2 ? null : a2;
        }
        for (var c2 = a2, d = b; ; ) {
          var e2 = c2.return;
          if (null === e2) break;
          var f = e2.alternate;
          if (null === f) {
            d = e2.return;
            if (null !== d) {
              c2 = d;
              continue;
            }
            break;
          }
          if (e2.child === f.child) {
            for (f = e2.child; f; ) {
              if (f === c2) return xa(e2), a2;
              if (f === d) return xa(e2), b;
              f = f.sibling;
            }
            throw Error(m(188));
          }
          if (c2.return !== d.return) c2 = e2, d = f;
          else {
            for (var g = false, h = e2.child; h; ) {
              if (h === c2) {
                g = true;
                c2 = e2;
                d = f;
                break;
              }
              if (h === d) {
                g = true;
                d = e2;
                c2 = f;
                break;
              }
              h = h.sibling;
            }
            if (!g) {
              for (h = f.child; h; ) {
                if (h === c2) {
                  g = true;
                  c2 = f;
                  d = e2;
                  break;
                }
                if (h === d) {
                  g = true;
                  d = f;
                  c2 = e2;
                  break;
                }
                h = h.sibling;
              }
              if (!g) throw Error(m(189));
            }
          }
          if (c2.alternate !== d) throw Error(m(190));
        }
        if (3 !== c2.tag) throw Error(m(188));
        return c2.stateNode.current === c2 ? a2 : b;
      }
      function Aa(a2) {
        a2 = ya(a2);
        return null !== a2 ? Ba(a2) : null;
      }
      function Ba(a2) {
        if (5 === a2.tag || 6 === a2.tag) return a2;
        for (a2 = a2.child; null !== a2; ) {
          var b = Ba(a2);
          if (null !== b) return b;
          a2 = a2.sibling;
        }
        return null;
      }
      function Ca(a2) {
        if (5 === a2.tag || 6 === a2.tag) return a2;
        for (a2 = a2.child; null !== a2; ) {
          if (4 !== a2.tag) {
            var b = Ca(a2);
            if (null !== b) return b;
          }
          a2 = a2.sibling;
        }
        return null;
      }
      var Da = Array.isArray, Ea = $$$hostConfig.getPublicInstance, Fa = $$$hostConfig.getRootHostContext, Ga = $$$hostConfig.getChildHostContext, Ha = $$$hostConfig.prepareForCommit, Ia = $$$hostConfig.resetAfterCommit, Ja = $$$hostConfig.createInstance, Ka = $$$hostConfig.appendInitialChild, La = $$$hostConfig.finalizeInitialChildren, Ma = $$$hostConfig.prepareUpdate, Na = $$$hostConfig.shouldSetTextContent, Oa = $$$hostConfig.createTextInstance, Pa = $$$hostConfig.scheduleTimeout, Qa = $$$hostConfig.cancelTimeout, Ra = $$$hostConfig.noTimeout, Sa = $$$hostConfig.isPrimaryRenderer, Ta = $$$hostConfig.supportsMutation, Ua = $$$hostConfig.supportsPersistence, Va = $$$hostConfig.supportsHydration, Wa = $$$hostConfig.getInstanceFromNode, Xa = $$$hostConfig.preparePortalMount, Ya = $$$hostConfig.getCurrentEventPriority, Za = $$$hostConfig.detachDeletedInstance, $a = $$$hostConfig.supportsMicrotasks, ab = $$$hostConfig.scheduleMicrotask, bb = $$$hostConfig.supportsTestSelectors, cb = $$$hostConfig.findFiberRoot, db = $$$hostConfig.getBoundingRect, eb = $$$hostConfig.getTextContent, fb = $$$hostConfig.isHiddenSubtree, gb = $$$hostConfig.matchAccessibilityRole, hb = $$$hostConfig.setFocusIfFocusable, ib = $$$hostConfig.setupIntersectionObserver, jb = $$$hostConfig.appendChild, kb = $$$hostConfig.appendChildToContainer, lb = $$$hostConfig.commitTextUpdate, mb = $$$hostConfig.commitMount, nb = $$$hostConfig.commitUpdate, ob = $$$hostConfig.insertBefore, pb = $$$hostConfig.insertInContainerBefore, qb = $$$hostConfig.removeChild, rb = $$$hostConfig.removeChildFromContainer, sb = $$$hostConfig.resetTextContent, tb = $$$hostConfig.hideInstance, ub = $$$hostConfig.hideTextInstance, vb = $$$hostConfig.unhideInstance, wb = $$$hostConfig.unhideTextInstance, xb = $$$hostConfig.clearContainer, yb = $$$hostConfig.cloneInstance, zb = $$$hostConfig.createContainerChildSet, Ab = $$$hostConfig.appendChildToContainerChildSet, Bb = $$$hostConfig.finalizeContainerChildren, Cb = $$$hostConfig.replaceContainerChildren, Eb = $$$hostConfig.cloneHiddenInstance, Fb = $$$hostConfig.cloneHiddenTextInstance, Gb = $$$hostConfig.canHydrateInstance, Hb = $$$hostConfig.canHydrateTextInstance, Ib = $$$hostConfig.canHydrateSuspenseInstance, Jb = $$$hostConfig.isSuspenseInstancePending, Kb = $$$hostConfig.isSuspenseInstanceFallback, Lb = $$$hostConfig.getSuspenseInstanceFallbackErrorDetails, Mb = $$$hostConfig.registerSuspenseInstanceRetry, Nb = $$$hostConfig.getNextHydratableSibling, Ob = $$$hostConfig.getFirstHydratableChild, Pb = $$$hostConfig.getFirstHydratableChildWithinContainer, Qb = $$$hostConfig.getFirstHydratableChildWithinSuspenseInstance, Rb = $$$hostConfig.hydrateInstance, Sb = $$$hostConfig.hydrateTextInstance, Tb = $$$hostConfig.hydrateSuspenseInstance, Ub = $$$hostConfig.getNextHydratableInstanceAfterSuspenseInstance, Vb = $$$hostConfig.commitHydratedContainer, Wb = $$$hostConfig.commitHydratedSuspenseInstance, Xb = $$$hostConfig.clearSuspenseBoundary, Yb = $$$hostConfig.clearSuspenseBoundaryFromContainer, Zb = $$$hostConfig.shouldDeleteUnhydratedTailInstances, $b = $$$hostConfig.didNotMatchHydratedContainerTextInstance, ac = $$$hostConfig.didNotMatchHydratedTextInstance, bc;
      function cc(a2) {
        if (void 0 === bc) try {
          throw Error();
        } catch (c2) {
          var b = c2.stack.trim().match(/\n( *(at )?)/);
          bc = b && b[1] || "";
        }
        return "\n" + bc + a2;
      }
      var dc = false;
      function ec(a2, b) {
        if (!a2 || dc) return "";
        dc = true;
        var c2 = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        try {
          if (b) if (b = function() {
            throw Error();
          }, Object.defineProperty(b.prototype, "props", { set: function() {
            throw Error();
          } }), "object" === typeof Reflect && Reflect.construct) {
            try {
              Reflect.construct(b, []);
            } catch (l) {
              var d = l;
            }
            Reflect.construct(a2, [], b);
          } else {
            try {
              b.call();
            } catch (l) {
              d = l;
            }
            a2.call(b.prototype);
          }
          else {
            try {
              throw Error();
            } catch (l) {
              d = l;
            }
            a2();
          }
        } catch (l) {
          if (l && d && "string" === typeof l.stack) {
            for (var e2 = l.stack.split("\n"), f = d.stack.split("\n"), g = e2.length - 1, h = f.length - 1; 1 <= g && 0 <= h && e2[g] !== f[h]; ) h--;
            for (; 1 <= g && 0 <= h; g--, h--) if (e2[g] !== f[h]) {
              if (1 !== g || 1 !== h) {
                do
                  if (g--, h--, 0 > h || e2[g] !== f[h]) {
                    var k = "\n" + e2[g].replace(" at new ", " at ");
                    a2.displayName && k.includes("<anonymous>") && (k = k.replace("<anonymous>", a2.displayName));
                    return k;
                  }
                while (1 <= g && 0 <= h);
              }
              break;
            }
          }
        } finally {
          dc = false, Error.prepareStackTrace = c2;
        }
        return (a2 = a2 ? a2.displayName || a2.name : "") ? cc(a2) : "";
      }
      var fc = Object.prototype.hasOwnProperty, gc = [], hc = -1;
      function ic(a2) {
        return { current: a2 };
      }
      function q(a2) {
        0 > hc || (a2.current = gc[hc], gc[hc] = null, hc--);
      }
      function v(a2, b) {
        hc++;
        gc[hc] = a2.current;
        a2.current = b;
      }
      var jc = {}, x = ic(jc), z = ic(false), kc = jc;
      function lc(a2, b) {
        var c2 = a2.type.contextTypes;
        if (!c2) return jc;
        var d = a2.stateNode;
        if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
        var e2 = {}, f;
        for (f in c2) e2[f] = b[f];
        d && (a2 = a2.stateNode, a2.__reactInternalMemoizedUnmaskedChildContext = b, a2.__reactInternalMemoizedMaskedChildContext = e2);
        return e2;
      }
      function A(a2) {
        a2 = a2.childContextTypes;
        return null !== a2 && void 0 !== a2;
      }
      function mc() {
        q(z);
        q(x);
      }
      function nc(a2, b, c2) {
        if (x.current !== jc) throw Error(m(168));
        v(x, b);
        v(z, c2);
      }
      function oc(a2, b, c2) {
        var d = a2.stateNode;
        b = b.childContextTypes;
        if ("function" !== typeof d.getChildContext) return c2;
        d = d.getChildContext();
        for (var e2 in d) if (!(e2 in b)) throw Error(m(108, va(a2) || "Unknown", e2));
        return ca({}, c2, d);
      }
      function pc(a2) {
        a2 = (a2 = a2.stateNode) && a2.__reactInternalMemoizedMergedChildContext || jc;
        kc = x.current;
        v(x, a2);
        v(z, z.current);
        return true;
      }
      function rc(a2, b, c2) {
        var d = a2.stateNode;
        if (!d) throw Error(m(169));
        c2 ? (a2 = oc(a2, b, kc), d.__reactInternalMemoizedMergedChildContext = a2, q(z), q(x), v(x, a2)) : q(z);
        v(z, c2);
      }
      var tc = Math.clz32 ? Math.clz32 : sc, uc = Math.log, vc = Math.LN2;
      function sc(a2) {
        a2 >>>= 0;
        return 0 === a2 ? 32 : 31 - (uc(a2) / vc | 0) | 0;
      }
      var wc = 64, xc = 4194304;
      function yc(a2) {
        switch (a2 & -a2) {
          case 1:
            return 1;
          case 2:
            return 2;
          case 4:
            return 4;
          case 8:
            return 8;
          case 16:
            return 16;
          case 32:
            return 32;
          case 64:
          case 128:
          case 256:
          case 512:
          case 1024:
          case 2048:
          case 4096:
          case 8192:
          case 16384:
          case 32768:
          case 65536:
          case 131072:
          case 262144:
          case 524288:
          case 1048576:
          case 2097152:
            return a2 & 4194240;
          case 4194304:
          case 8388608:
          case 16777216:
          case 33554432:
          case 67108864:
            return a2 & 130023424;
          case 134217728:
            return 134217728;
          case 268435456:
            return 268435456;
          case 536870912:
            return 536870912;
          case 1073741824:
            return 1073741824;
          default:
            return a2;
        }
      }
      function zc(a2, b) {
        var c2 = a2.pendingLanes;
        if (0 === c2) return 0;
        var d = 0, e2 = a2.suspendedLanes, f = a2.pingedLanes, g = c2 & 268435455;
        if (0 !== g) {
          var h = g & ~e2;
          0 !== h ? d = yc(h) : (f &= g, 0 !== f && (d = yc(f)));
        } else g = c2 & ~e2, 0 !== g ? d = yc(g) : 0 !== f && (d = yc(f));
        if (0 === d) return 0;
        if (0 !== b && b !== d && 0 === (b & e2) && (e2 = d & -d, f = b & -b, e2 >= f || 16 === e2 && 0 !== (f & 4194240))) return b;
        0 !== (d & 4) && (d |= c2 & 16);
        b = a2.entangledLanes;
        if (0 !== b) for (a2 = a2.entanglements, b &= d; 0 < b; ) c2 = 31 - tc(b), e2 = 1 << c2, d |= a2[c2], b &= ~e2;
        return d;
      }
      function Ac(a2, b) {
        switch (a2) {
          case 1:
          case 2:
          case 4:
            return b + 250;
          case 8:
          case 16:
          case 32:
          case 64:
          case 128:
          case 256:
          case 512:
          case 1024:
          case 2048:
          case 4096:
          case 8192:
          case 16384:
          case 32768:
          case 65536:
          case 131072:
          case 262144:
          case 524288:
          case 1048576:
          case 2097152:
            return b + 5e3;
          case 4194304:
          case 8388608:
          case 16777216:
          case 33554432:
          case 67108864:
            return -1;
          case 134217728:
          case 268435456:
          case 536870912:
          case 1073741824:
            return -1;
          default:
            return -1;
        }
      }
      function Bc(a2, b) {
        for (var c2 = a2.suspendedLanes, d = a2.pingedLanes, e2 = a2.expirationTimes, f = a2.pendingLanes; 0 < f; ) {
          var g = 31 - tc(f), h = 1 << g, k = e2[g];
          if (-1 === k) {
            if (0 === (h & c2) || 0 !== (h & d)) e2[g] = Ac(h, b);
          } else k <= b && (a2.expiredLanes |= h);
          f &= ~h;
        }
      }
      function Cc(a2) {
        a2 = a2.pendingLanes & -1073741825;
        return 0 !== a2 ? a2 : a2 & 1073741824 ? 1073741824 : 0;
      }
      function Dc() {
        var a2 = wc;
        wc <<= 1;
        0 === (wc & 4194240) && (wc = 64);
        return a2;
      }
      function Ec(a2) {
        for (var b = [], c2 = 0; 31 > c2; c2++) b.push(a2);
        return b;
      }
      function Fc(a2, b, c2) {
        a2.pendingLanes |= b;
        536870912 !== b && (a2.suspendedLanes = 0, a2.pingedLanes = 0);
        a2 = a2.eventTimes;
        b = 31 - tc(b);
        a2[b] = c2;
      }
      function Gc(a2, b) {
        var c2 = a2.pendingLanes & ~b;
        a2.pendingLanes = b;
        a2.suspendedLanes = 0;
        a2.pingedLanes = 0;
        a2.expiredLanes &= b;
        a2.mutableReadLanes &= b;
        a2.entangledLanes &= b;
        b = a2.entanglements;
        var d = a2.eventTimes;
        for (a2 = a2.expirationTimes; 0 < c2; ) {
          var e2 = 31 - tc(c2), f = 1 << e2;
          b[e2] = 0;
          d[e2] = -1;
          a2[e2] = -1;
          c2 &= ~f;
        }
      }
      function Hc(a2, b) {
        var c2 = a2.entangledLanes |= b;
        for (a2 = a2.entanglements; c2; ) {
          var d = 31 - tc(c2), e2 = 1 << d;
          e2 & b | a2[d] & b && (a2[d] |= b);
          c2 &= ~e2;
        }
      }
      var C = 0;
      function Ic(a2) {
        a2 &= -a2;
        return 1 < a2 ? 4 < a2 ? 0 !== (a2 & 268435455) ? 16 : 536870912 : 4 : 1;
      }
      var Jc = ba.unstable_scheduleCallback, Kc = ba.unstable_cancelCallback, Lc = ba.unstable_shouldYield, Mc = ba.unstable_requestPaint, D = ba.unstable_now, Nc = ba.unstable_ImmediatePriority, Oc = ba.unstable_UserBlockingPriority, Pc = ba.unstable_NormalPriority, Qc = ba.unstable_IdlePriority, Rc = null, Sc = null;
      function Tc(a2) {
        if (Sc && "function" === typeof Sc.onCommitFiberRoot) try {
          Sc.onCommitFiberRoot(Rc, a2, void 0, 128 === (a2.current.flags & 128));
        } catch (b) {
        }
      }
      function Uc(a2, b) {
        return a2 === b && (0 !== a2 || 1 / a2 === 1 / b) || a2 !== a2 && b !== b;
      }
      var Vc = "function" === typeof Object.is ? Object.is : Uc, Wc = null, Xc = false, Yc = false;
      function Zc(a2) {
        null === Wc ? Wc = [a2] : Wc.push(a2);
      }
      function $c(a2) {
        Xc = true;
        Zc(a2);
      }
      function ad() {
        if (!Yc && null !== Wc) {
          Yc = true;
          var a2 = 0, b = C;
          try {
            var c2 = Wc;
            for (C = 1; a2 < c2.length; a2++) {
              var d = c2[a2];
              do
                d = d(true);
              while (null !== d);
            }
            Wc = null;
            Xc = false;
          } catch (e2) {
            throw null !== Wc && (Wc = Wc.slice(a2 + 1)), Jc(Nc, ad), e2;
          } finally {
            C = b, Yc = false;
          }
        }
        return null;
      }
      var bd = [], cd = 0, dd = null, ed = 0, fd = [], gd = 0, hd = null, id = 1, jd = "";
      function kd(a2, b) {
        bd[cd++] = ed;
        bd[cd++] = dd;
        dd = a2;
        ed = b;
      }
      function ld(a2, b, c2) {
        fd[gd++] = id;
        fd[gd++] = jd;
        fd[gd++] = hd;
        hd = a2;
        var d = id;
        a2 = jd;
        var e2 = 32 - tc(d) - 1;
        d &= ~(1 << e2);
        c2 += 1;
        var f = 32 - tc(b) + e2;
        if (30 < f) {
          var g = e2 - e2 % 5;
          f = (d & (1 << g) - 1).toString(32);
          d >>= g;
          e2 -= g;
          id = 1 << 32 - tc(b) + e2 | c2 << e2 | d;
          jd = f + a2;
        } else id = 1 << f | c2 << e2 | d, jd = a2;
      }
      function md(a2) {
        null !== a2.return && (kd(a2, 1), ld(a2, 1, 0));
      }
      function nd(a2) {
        for (; a2 === dd; ) dd = bd[--cd], bd[cd] = null, ed = bd[--cd], bd[cd] = null;
        for (; a2 === hd; ) hd = fd[--gd], fd[gd] = null, jd = fd[--gd], fd[gd] = null, id = fd[--gd], fd[gd] = null;
      }
      var od = null, pd = null, F = false, qd = false, rd = null;
      function sd(a2, b) {
        var c2 = td(5, null, null, 0);
        c2.elementType = "DELETED";
        c2.stateNode = b;
        c2.return = a2;
        b = a2.deletions;
        null === b ? (a2.deletions = [c2], a2.flags |= 16) : b.push(c2);
      }
      function ud(a2, b) {
        switch (a2.tag) {
          case 5:
            return b = Gb(b, a2.type, a2.pendingProps), null !== b ? (a2.stateNode = b, od = a2, pd = Ob(b), true) : false;
          case 6:
            return b = Hb(b, a2.pendingProps), null !== b ? (a2.stateNode = b, od = a2, pd = null, true) : false;
          case 13:
            b = Ib(b);
            if (null !== b) {
              var c2 = null !== hd ? { id, overflow: jd } : null;
              a2.memoizedState = { dehydrated: b, treeContext: c2, retryLane: 1073741824 };
              c2 = td(18, null, null, 0);
              c2.stateNode = b;
              c2.return = a2;
              a2.child = c2;
              od = a2;
              pd = null;
              return true;
            }
            return false;
          default:
            return false;
        }
      }
      function vd(a2) {
        return 0 !== (a2.mode & 1) && 0 === (a2.flags & 128);
      }
      function wd(a2) {
        if (F) {
          var b = pd;
          if (b) {
            var c2 = b;
            if (!ud(a2, b)) {
              if (vd(a2)) throw Error(m(418));
              b = Nb(c2);
              var d = od;
              b && ud(a2, b) ? sd(d, c2) : (a2.flags = a2.flags & -4097 | 2, F = false, od = a2);
            }
          } else {
            if (vd(a2)) throw Error(m(418));
            a2.flags = a2.flags & -4097 | 2;
            F = false;
            od = a2;
          }
        }
      }
      function xd(a2) {
        for (a2 = a2.return; null !== a2 && 5 !== a2.tag && 3 !== a2.tag && 13 !== a2.tag; ) a2 = a2.return;
        od = a2;
      }
      function yd(a2) {
        if (!Va || a2 !== od) return false;
        if (!F) return xd(a2), F = true, false;
        if (3 !== a2.tag && (5 !== a2.tag || Zb(a2.type) && !Na(a2.type, a2.memoizedProps))) {
          var b = pd;
          if (b) {
            if (vd(a2)) throw zd(), Error(m(418));
            for (; b; ) sd(a2, b), b = Nb(b);
          }
        }
        xd(a2);
        if (13 === a2.tag) {
          if (!Va) throw Error(m(316));
          a2 = a2.memoizedState;
          a2 = null !== a2 ? a2.dehydrated : null;
          if (!a2) throw Error(m(317));
          pd = Ub(a2);
        } else pd = od ? Nb(a2.stateNode) : null;
        return true;
      }
      function zd() {
        for (var a2 = pd; a2; ) a2 = Nb(a2);
      }
      function Ad() {
        Va && (pd = od = null, qd = F = false);
      }
      function Bd(a2) {
        null === rd ? rd = [a2] : rd.push(a2);
      }
      var Cd = da.ReactCurrentBatchConfig;
      function Dd(a2, b) {
        if (Vc(a2, b)) return true;
        if ("object" !== typeof a2 || null === a2 || "object" !== typeof b || null === b) return false;
        var c2 = Object.keys(a2), d = Object.keys(b);
        if (c2.length !== d.length) return false;
        for (d = 0; d < c2.length; d++) {
          var e2 = c2[d];
          if (!fc.call(b, e2) || !Vc(a2[e2], b[e2])) return false;
        }
        return true;
      }
      function Ed(a2) {
        switch (a2.tag) {
          case 5:
            return cc(a2.type);
          case 16:
            return cc("Lazy");
          case 13:
            return cc("Suspense");
          case 19:
            return cc("SuspenseList");
          case 0:
          case 2:
          case 15:
            return a2 = ec(a2.type, false), a2;
          case 11:
            return a2 = ec(a2.type.render, false), a2;
          case 1:
            return a2 = ec(a2.type, true), a2;
          default:
            return "";
        }
      }
      function Fd(a2, b) {
        if (a2 && a2.defaultProps) {
          b = ca({}, b);
          a2 = a2.defaultProps;
          for (var c2 in a2) void 0 === b[c2] && (b[c2] = a2[c2]);
          return b;
        }
        return b;
      }
      var Gd = ic(null), Hd = null, Id = null, Jd = null;
      function Kd() {
        Jd = Id = Hd = null;
      }
      function Ld(a2, b, c2) {
        Sa ? (v(Gd, b._currentValue), b._currentValue = c2) : (v(Gd, b._currentValue2), b._currentValue2 = c2);
      }
      function Md(a2) {
        var b = Gd.current;
        q(Gd);
        Sa ? a2._currentValue = b : a2._currentValue2 = b;
      }
      function Nd(a2, b, c2) {
        for (; null !== a2; ) {
          var d = a2.alternate;
          (a2.childLanes & b) !== b ? (a2.childLanes |= b, null !== d && (d.childLanes |= b)) : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b);
          if (a2 === c2) break;
          a2 = a2.return;
        }
      }
      function Od(a2, b) {
        Hd = a2;
        Jd = Id = null;
        a2 = a2.dependencies;
        null !== a2 && null !== a2.firstContext && (0 !== (a2.lanes & b) && (G = true), a2.firstContext = null);
      }
      function Pd(a2) {
        var b = Sa ? a2._currentValue : a2._currentValue2;
        if (Jd !== a2) if (a2 = { context: a2, memoizedValue: b, next: null }, null === Id) {
          if (null === Hd) throw Error(m(308));
          Id = a2;
          Hd.dependencies = { lanes: 0, firstContext: a2 };
        } else Id = Id.next = a2;
        return b;
      }
      var Qd = null;
      function Rd(a2) {
        null === Qd ? Qd = [a2] : Qd.push(a2);
      }
      function Sd(a2, b, c2, d) {
        var e2 = b.interleaved;
        null === e2 ? (c2.next = c2, Rd(b)) : (c2.next = e2.next, e2.next = c2);
        b.interleaved = c2;
        return Td(a2, d);
      }
      function Td(a2, b) {
        a2.lanes |= b;
        var c2 = a2.alternate;
        null !== c2 && (c2.lanes |= b);
        c2 = a2;
        for (a2 = a2.return; null !== a2; ) a2.childLanes |= b, c2 = a2.alternate, null !== c2 && (c2.childLanes |= b), c2 = a2, a2 = a2.return;
        return 3 === c2.tag ? c2.stateNode : null;
      }
      var Ud = false;
      function Vd(a2) {
        a2.updateQueue = { baseState: a2.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
      }
      function Wd(a2, b) {
        a2 = a2.updateQueue;
        b.updateQueue === a2 && (b.updateQueue = { baseState: a2.baseState, firstBaseUpdate: a2.firstBaseUpdate, lastBaseUpdate: a2.lastBaseUpdate, shared: a2.shared, effects: a2.effects });
      }
      function Xd(a2, b) {
        return { eventTime: a2, lane: b, tag: 0, payload: null, callback: null, next: null };
      }
      function Yd(a2, b, c2) {
        var d = a2.updateQueue;
        if (null === d) return null;
        d = d.shared;
        if (0 !== (H & 2)) {
          var e2 = d.pending;
          null === e2 ? b.next = b : (b.next = e2.next, e2.next = b);
          d.pending = b;
          return Td(a2, c2);
        }
        e2 = d.interleaved;
        null === e2 ? (b.next = b, Rd(d)) : (b.next = e2.next, e2.next = b);
        d.interleaved = b;
        return Td(a2, c2);
      }
      function Zd(a2, b, c2) {
        b = b.updateQueue;
        if (null !== b && (b = b.shared, 0 !== (c2 & 4194240))) {
          var d = b.lanes;
          d &= a2.pendingLanes;
          c2 |= d;
          b.lanes = c2;
          Hc(a2, c2);
        }
      }
      function $d(a2, b) {
        var c2 = a2.updateQueue, d = a2.alternate;
        if (null !== d && (d = d.updateQueue, c2 === d)) {
          var e2 = null, f = null;
          c2 = c2.firstBaseUpdate;
          if (null !== c2) {
            do {
              var g = { eventTime: c2.eventTime, lane: c2.lane, tag: c2.tag, payload: c2.payload, callback: c2.callback, next: null };
              null === f ? e2 = f = g : f = f.next = g;
              c2 = c2.next;
            } while (null !== c2);
            null === f ? e2 = f = b : f = f.next = b;
          } else e2 = f = b;
          c2 = { baseState: d.baseState, firstBaseUpdate: e2, lastBaseUpdate: f, shared: d.shared, effects: d.effects };
          a2.updateQueue = c2;
          return;
        }
        a2 = c2.lastBaseUpdate;
        null === a2 ? c2.firstBaseUpdate = b : a2.next = b;
        c2.lastBaseUpdate = b;
      }
      function ae(a2, b, c2, d) {
        var e2 = a2.updateQueue;
        Ud = false;
        var f = e2.firstBaseUpdate, g = e2.lastBaseUpdate, h = e2.shared.pending;
        if (null !== h) {
          e2.shared.pending = null;
          var k = h, l = k.next;
          k.next = null;
          null === g ? f = l : g.next = l;
          g = k;
          var n2 = a2.alternate;
          null !== n2 && (n2 = n2.updateQueue, h = n2.lastBaseUpdate, h !== g && (null === h ? n2.firstBaseUpdate = l : h.next = l, n2.lastBaseUpdate = k));
        }
        if (null !== f) {
          var t3 = e2.baseState;
          g = 0;
          n2 = l = k = null;
          h = f;
          do {
            var p = h.lane, B = h.eventTime;
            if ((d & p) === p) {
              null !== n2 && (n2 = n2.next = {
                eventTime: B,
                lane: 0,
                tag: h.tag,
                payload: h.payload,
                callback: h.callback,
                next: null
              });
              a: {
                var w = a2, Z = h;
                p = b;
                B = c2;
                switch (Z.tag) {
                  case 1:
                    w = Z.payload;
                    if ("function" === typeof w) {
                      t3 = w.call(B, t3, p);
                      break a;
                    }
                    t3 = w;
                    break a;
                  case 3:
                    w.flags = w.flags & -65537 | 128;
                  case 0:
                    w = Z.payload;
                    p = "function" === typeof w ? w.call(B, t3, p) : w;
                    if (null === p || void 0 === p) break a;
                    t3 = ca({}, t3, p);
                    break a;
                  case 2:
                    Ud = true;
                }
              }
              null !== h.callback && 0 !== h.lane && (a2.flags |= 64, p = e2.effects, null === p ? e2.effects = [h] : p.push(h));
            } else B = { eventTime: B, lane: p, tag: h.tag, payload: h.payload, callback: h.callback, next: null }, null === n2 ? (l = n2 = B, k = t3) : n2 = n2.next = B, g |= p;
            h = h.next;
            if (null === h) if (h = e2.shared.pending, null === h) break;
            else p = h, h = p.next, p.next = null, e2.lastBaseUpdate = p, e2.shared.pending = null;
          } while (1);
          null === n2 && (k = t3);
          e2.baseState = k;
          e2.firstBaseUpdate = l;
          e2.lastBaseUpdate = n2;
          b = e2.shared.interleaved;
          if (null !== b) {
            e2 = b;
            do
              g |= e2.lane, e2 = e2.next;
            while (e2 !== b);
          } else null === f && (e2.shared.lanes = 0);
          be |= g;
          a2.lanes = g;
          a2.memoizedState = t3;
        }
      }
      function ce(a2, b, c2) {
        a2 = b.effects;
        b.effects = null;
        if (null !== a2) for (b = 0; b < a2.length; b++) {
          var d = a2[b], e2 = d.callback;
          if (null !== e2) {
            d.callback = null;
            d = c2;
            if ("function" !== typeof e2) throw Error(m(191, e2));
            e2.call(d);
          }
        }
      }
      var de = new aa.Component().refs;
      function ee(a2, b, c2, d) {
        b = a2.memoizedState;
        c2 = c2(d, b);
        c2 = null === c2 || void 0 === c2 ? b : ca({}, b, c2);
        a2.memoizedState = c2;
        0 === a2.lanes && (a2.updateQueue.baseState = c2);
      }
      var he = { isMounted: function(a2) {
        return (a2 = a2._reactInternals) ? wa(a2) === a2 : false;
      }, enqueueSetState: function(a2, b, c2) {
        a2 = a2._reactInternals;
        var d = I(), e2 = fe(a2), f = Xd(d, e2);
        f.payload = b;
        void 0 !== c2 && null !== c2 && (f.callback = c2);
        b = Yd(a2, f, e2);
        null !== b && (ge(b, a2, e2, d), Zd(b, a2, e2));
      }, enqueueReplaceState: function(a2, b, c2) {
        a2 = a2._reactInternals;
        var d = I(), e2 = fe(a2), f = Xd(d, e2);
        f.tag = 1;
        f.payload = b;
        void 0 !== c2 && null !== c2 && (f.callback = c2);
        b = Yd(a2, f, e2);
        null !== b && (ge(b, a2, e2, d), Zd(b, a2, e2));
      }, enqueueForceUpdate: function(a2, b) {
        a2 = a2._reactInternals;
        var c2 = I(), d = fe(a2), e2 = Xd(c2, d);
        e2.tag = 2;
        void 0 !== b && null !== b && (e2.callback = b);
        b = Yd(a2, e2, d);
        null !== b && (ge(b, a2, d, c2), Zd(b, a2, d));
      } };
      function ie(a2, b, c2, d, e2, f, g) {
        a2 = a2.stateNode;
        return "function" === typeof a2.shouldComponentUpdate ? a2.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !Dd(c2, d) || !Dd(e2, f) : true;
      }
      function je(a2, b, c2) {
        var d = false, e2 = jc;
        var f = b.contextType;
        "object" === typeof f && null !== f ? f = Pd(f) : (e2 = A(b) ? kc : x.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? lc(a2, e2) : jc);
        b = new b(c2, f);
        a2.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
        b.updater = he;
        a2.stateNode = b;
        b._reactInternals = a2;
        d && (a2 = a2.stateNode, a2.__reactInternalMemoizedUnmaskedChildContext = e2, a2.__reactInternalMemoizedMaskedChildContext = f);
        return b;
      }
      function ke(a2, b, c2, d) {
        a2 = b.state;
        "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c2, d);
        "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c2, d);
        b.state !== a2 && he.enqueueReplaceState(b, b.state, null);
      }
      function le(a2, b, c2, d) {
        var e2 = a2.stateNode;
        e2.props = c2;
        e2.state = a2.memoizedState;
        e2.refs = de;
        Vd(a2);
        var f = b.contextType;
        "object" === typeof f && null !== f ? e2.context = Pd(f) : (f = A(b) ? kc : x.current, e2.context = lc(a2, f));
        e2.state = a2.memoizedState;
        f = b.getDerivedStateFromProps;
        "function" === typeof f && (ee(a2, b, f, c2), e2.state = a2.memoizedState);
        "function" === typeof b.getDerivedStateFromProps || "function" === typeof e2.getSnapshotBeforeUpdate || "function" !== typeof e2.UNSAFE_componentWillMount && "function" !== typeof e2.componentWillMount || (b = e2.state, "function" === typeof e2.componentWillMount && e2.componentWillMount(), "function" === typeof e2.UNSAFE_componentWillMount && e2.UNSAFE_componentWillMount(), b !== e2.state && he.enqueueReplaceState(e2, e2.state, null), ae(a2, c2, e2, d), e2.state = a2.memoizedState);
        "function" === typeof e2.componentDidMount && (a2.flags |= 4194308);
      }
      function me(a2, b, c2) {
        a2 = c2.ref;
        if (null !== a2 && "function" !== typeof a2 && "object" !== typeof a2) {
          if (c2._owner) {
            c2 = c2._owner;
            if (c2) {
              if (1 !== c2.tag) throw Error(m(309));
              var d = c2.stateNode;
            }
            if (!d) throw Error(m(147, a2));
            var e2 = d, f = "" + a2;
            if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === f) return b.ref;
            b = function(a3) {
              var b2 = e2.refs;
              b2 === de && (b2 = e2.refs = {});
              null === a3 ? delete b2[f] : b2[f] = a3;
            };
            b._stringRef = f;
            return b;
          }
          if ("string" !== typeof a2) throw Error(m(284));
          if (!c2._owner) throw Error(m(290, a2));
        }
        return a2;
      }
      function ne(a2, b) {
        a2 = Object.prototype.toString.call(b);
        throw Error(m(31, "[object Object]" === a2 ? "object with keys {" + Object.keys(b).join(", ") + "}" : a2));
      }
      function oe(a2) {
        var b = a2._init;
        return b(a2._payload);
      }
      function pe(a2) {
        function b(b2, c3) {
          if (a2) {
            var d2 = b2.deletions;
            null === d2 ? (b2.deletions = [c3], b2.flags |= 16) : d2.push(c3);
          }
        }
        function c2(c3, d2) {
          if (!a2) return null;
          for (; null !== d2; ) b(c3, d2), d2 = d2.sibling;
          return null;
        }
        function d(a3, b2) {
          for (a3 = /* @__PURE__ */ new Map(); null !== b2; ) null !== b2.key ? a3.set(b2.key, b2) : a3.set(b2.index, b2), b2 = b2.sibling;
          return a3;
        }
        function e2(a3, b2) {
          a3 = qe(a3, b2);
          a3.index = 0;
          a3.sibling = null;
          return a3;
        }
        function f(b2, c3, d2) {
          b2.index = d2;
          if (!a2) return b2.flags |= 1048576, c3;
          d2 = b2.alternate;
          if (null !== d2) return d2 = d2.index, d2 < c3 ? (b2.flags |= 2, c3) : d2;
          b2.flags |= 2;
          return c3;
        }
        function g(b2) {
          a2 && null === b2.alternate && (b2.flags |= 2);
          return b2;
        }
        function h(a3, b2, c3, d2) {
          if (null === b2 || 6 !== b2.tag) return b2 = re(c3, a3.mode, d2), b2.return = a3, b2;
          b2 = e2(b2, c3);
          b2.return = a3;
          return b2;
        }
        function k(a3, b2, c3, d2) {
          var f2 = c3.type;
          if (f2 === ha) return n2(a3, b2, c3.props.children, d2, c3.key);
          if (null !== b2 && (b2.elementType === f2 || "object" === typeof f2 && null !== f2 && f2.$$typeof === qa && oe(f2) === b2.type)) return d2 = e2(b2, c3.props), d2.ref = me(a3, b2, c3), d2.return = a3, d2;
          d2 = se(c3.type, c3.key, c3.props, null, a3.mode, d2);
          d2.ref = me(a3, b2, c3);
          d2.return = a3;
          return d2;
        }
        function l(a3, b2, c3, d2) {
          if (null === b2 || 4 !== b2.tag || b2.stateNode.containerInfo !== c3.containerInfo || b2.stateNode.implementation !== c3.implementation) return b2 = te(c3, a3.mode, d2), b2.return = a3, b2;
          b2 = e2(b2, c3.children || []);
          b2.return = a3;
          return b2;
        }
        function n2(a3, b2, c3, d2, f2) {
          if (null === b2 || 7 !== b2.tag) return b2 = ue(c3, a3.mode, d2, f2), b2.return = a3, b2;
          b2 = e2(b2, c3);
          b2.return = a3;
          return b2;
        }
        function t3(a3, b2, c3) {
          if ("string" === typeof b2 && "" !== b2 || "number" === typeof b2) return b2 = re("" + b2, a3.mode, c3), b2.return = a3, b2;
          if ("object" === typeof b2 && null !== b2) {
            switch (b2.$$typeof) {
              case ea:
                return c3 = se(b2.type, b2.key, b2.props, null, a3.mode, c3), c3.ref = me(a3, null, b2), c3.return = a3, c3;
              case fa:
                return b2 = te(b2, a3.mode, c3), b2.return = a3, b2;
              case qa:
                var d2 = b2._init;
                return t3(a3, d2(b2._payload), c3);
            }
            if (Da(b2) || ta(b2)) return b2 = ue(b2, a3.mode, c3, null), b2.return = a3, b2;
            ne(a3, b2);
          }
          return null;
        }
        function p(a3, b2, c3, d2) {
          var e3 = null !== b2 ? b2.key : null;
          if ("string" === typeof c3 && "" !== c3 || "number" === typeof c3) return null !== e3 ? null : h(a3, b2, "" + c3, d2);
          if ("object" === typeof c3 && null !== c3) {
            switch (c3.$$typeof) {
              case ea:
                return c3.key === e3 ? k(a3, b2, c3, d2) : null;
              case fa:
                return c3.key === e3 ? l(a3, b2, c3, d2) : null;
              case qa:
                return e3 = c3._init, p(
                  a3,
                  b2,
                  e3(c3._payload),
                  d2
                );
            }
            if (Da(c3) || ta(c3)) return null !== e3 ? null : n2(a3, b2, c3, d2, null);
            ne(a3, c3);
          }
          return null;
        }
        function B(a3, b2, c3, d2, e3) {
          if ("string" === typeof d2 && "" !== d2 || "number" === typeof d2) return a3 = a3.get(c3) || null, h(b2, a3, "" + d2, e3);
          if ("object" === typeof d2 && null !== d2) {
            switch (d2.$$typeof) {
              case ea:
                return a3 = a3.get(null === d2.key ? c3 : d2.key) || null, k(b2, a3, d2, e3);
              case fa:
                return a3 = a3.get(null === d2.key ? c3 : d2.key) || null, l(b2, a3, d2, e3);
              case qa:
                var f2 = d2._init;
                return B(a3, b2, c3, f2(d2._payload), e3);
            }
            if (Da(d2) || ta(d2)) return a3 = a3.get(c3) || null, n2(b2, a3, d2, e3, null);
            ne(b2, d2);
          }
          return null;
        }
        function w(e3, g2, h2, k2) {
          for (var l2 = null, n3 = null, r2 = g2, u = g2 = 0, E2 = null; null !== r2 && u < h2.length; u++) {
            r2.index > u ? (E2 = r2, r2 = null) : E2 = r2.sibling;
            var y = p(e3, r2, h2[u], k2);
            if (null === y) {
              null === r2 && (r2 = E2);
              break;
            }
            a2 && r2 && null === y.alternate && b(e3, r2);
            g2 = f(y, g2, u);
            null === n3 ? l2 = y : n3.sibling = y;
            n3 = y;
            r2 = E2;
          }
          if (u === h2.length) return c2(e3, r2), F && kd(e3, u), l2;
          if (null === r2) {
            for (; u < h2.length; u++) r2 = t3(e3, h2[u], k2), null !== r2 && (g2 = f(r2, g2, u), null === n3 ? l2 = r2 : n3.sibling = r2, n3 = r2);
            F && kd(e3, u);
            return l2;
          }
          for (r2 = d(e3, r2); u < h2.length; u++) E2 = B(r2, e3, u, h2[u], k2), null !== E2 && (a2 && null !== E2.alternate && r2.delete(null === E2.key ? u : E2.key), g2 = f(E2, g2, u), null === n3 ? l2 = E2 : n3.sibling = E2, n3 = E2);
          a2 && r2.forEach(function(a3) {
            return b(e3, a3);
          });
          F && kd(e3, u);
          return l2;
        }
        function Z(e3, g2, h2, k2) {
          var l2 = ta(h2);
          if ("function" !== typeof l2) throw Error(m(150));
          h2 = l2.call(h2);
          if (null == h2) throw Error(m(151));
          for (var n3 = l2 = null, r2 = g2, u = g2 = 0, E2 = null, y = h2.next(); null !== r2 && !y.done; u++, y = h2.next()) {
            r2.index > u ? (E2 = r2, r2 = null) : E2 = r2.sibling;
            var w2 = p(e3, r2, y.value, k2);
            if (null === w2) {
              null === r2 && (r2 = E2);
              break;
            }
            a2 && r2 && null === w2.alternate && b(e3, r2);
            g2 = f(w2, g2, u);
            null === n3 ? l2 = w2 : n3.sibling = w2;
            n3 = w2;
            r2 = E2;
          }
          if (y.done) return c2(
            e3,
            r2
          ), F && kd(e3, u), l2;
          if (null === r2) {
            for (; !y.done; u++, y = h2.next()) y = t3(e3, y.value, k2), null !== y && (g2 = f(y, g2, u), null === n3 ? l2 = y : n3.sibling = y, n3 = y);
            F && kd(e3, u);
            return l2;
          }
          for (r2 = d(e3, r2); !y.done; u++, y = h2.next()) y = B(r2, e3, u, y.value, k2), null !== y && (a2 && null !== y.alternate && r2.delete(null === y.key ? u : y.key), g2 = f(y, g2, u), null === n3 ? l2 = y : n3.sibling = y, n3 = y);
          a2 && r2.forEach(function(a3) {
            return b(e3, a3);
          });
          F && kd(e3, u);
          return l2;
        }
        function za(a3, d2, f2, h2) {
          "object" === typeof f2 && null !== f2 && f2.type === ha && null === f2.key && (f2 = f2.props.children);
          if ("object" === typeof f2 && null !== f2) {
            switch (f2.$$typeof) {
              case ea:
                a: {
                  for (var k2 = f2.key, l2 = d2; null !== l2; ) {
                    if (l2.key === k2) {
                      k2 = f2.type;
                      if (k2 === ha) {
                        if (7 === l2.tag) {
                          c2(a3, l2.sibling);
                          d2 = e2(l2, f2.props.children);
                          d2.return = a3;
                          a3 = d2;
                          break a;
                        }
                      } else if (l2.elementType === k2 || "object" === typeof k2 && null !== k2 && k2.$$typeof === qa && oe(k2) === l2.type) {
                        c2(a3, l2.sibling);
                        d2 = e2(l2, f2.props);
                        d2.ref = me(a3, l2, f2);
                        d2.return = a3;
                        a3 = d2;
                        break a;
                      }
                      c2(a3, l2);
                      break;
                    } else b(a3, l2);
                    l2 = l2.sibling;
                  }
                  f2.type === ha ? (d2 = ue(f2.props.children, a3.mode, h2, f2.key), d2.return = a3, a3 = d2) : (h2 = se(f2.type, f2.key, f2.props, null, a3.mode, h2), h2.ref = me(a3, d2, f2), h2.return = a3, a3 = h2);
                }
                return g(a3);
              case fa:
                a: {
                  for (l2 = f2.key; null !== d2; ) {
                    if (d2.key === l2) if (4 === d2.tag && d2.stateNode.containerInfo === f2.containerInfo && d2.stateNode.implementation === f2.implementation) {
                      c2(a3, d2.sibling);
                      d2 = e2(d2, f2.children || []);
                      d2.return = a3;
                      a3 = d2;
                      break a;
                    } else {
                      c2(a3, d2);
                      break;
                    }
                    else b(a3, d2);
                    d2 = d2.sibling;
                  }
                  d2 = te(f2, a3.mode, h2);
                  d2.return = a3;
                  a3 = d2;
                }
                return g(a3);
              case qa:
                return l2 = f2._init, za(a3, d2, l2(f2._payload), h2);
            }
            if (Da(f2)) return w(a3, d2, f2, h2);
            if (ta(f2)) return Z(a3, d2, f2, h2);
            ne(a3, f2);
          }
          return "string" === typeof f2 && "" !== f2 || "number" === typeof f2 ? (f2 = "" + f2, null !== d2 && 6 === d2.tag ? (c2(a3, d2.sibling), d2 = e2(d2, f2), d2.return = a3, a3 = d2) : (c2(a3, d2), d2 = re(f2, a3.mode, h2), d2.return = a3, a3 = d2), g(a3)) : c2(a3, d2);
        }
        return za;
      }
      var ve = pe(true), we = pe(false), xe = {}, ye = ic(xe), ze = ic(xe), Ae = ic(xe);
      function Be(a2) {
        if (a2 === xe) throw Error(m(174));
        return a2;
      }
      function Ce(a2, b) {
        v(Ae, b);
        v(ze, a2);
        v(ye, xe);
        a2 = Fa(b);
        q(ye);
        v(ye, a2);
      }
      function De() {
        q(ye);
        q(ze);
        q(Ae);
      }
      function Ee(a2) {
        var b = Be(Ae.current), c2 = Be(ye.current);
        b = Ga(c2, a2.type, b);
        c2 !== b && (v(ze, a2), v(ye, b));
      }
      function Fe(a2) {
        ze.current === a2 && (q(ye), q(ze));
      }
      var J = ic(0);
      function Ge(a2) {
        for (var b = a2; null !== b; ) {
          if (13 === b.tag) {
            var c2 = b.memoizedState;
            if (null !== c2 && (c2 = c2.dehydrated, null === c2 || Jb(c2) || Kb(c2))) return b;
          } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
            if (0 !== (b.flags & 128)) return b;
          } else if (null !== b.child) {
            b.child.return = b;
            b = b.child;
            continue;
          }
          if (b === a2) break;
          for (; null === b.sibling; ) {
            if (null === b.return || b.return === a2) return null;
            b = b.return;
          }
          b.sibling.return = b.return;
          b = b.sibling;
        }
        return null;
      }
      var He = [];
      function Ie() {
        for (var a2 = 0; a2 < He.length; a2++) {
          var b = He[a2];
          Sa ? b._workInProgressVersionPrimary = null : b._workInProgressVersionSecondary = null;
        }
        He.length = 0;
      }
      var Je = da.ReactCurrentDispatcher, Ke = da.ReactCurrentBatchConfig, Le = 0, K = null, L = null, M = null, Me = false, Ne = false, Oe = 0, Pe = 0;
      function N() {
        throw Error(m(321));
      }
      function Qe(a2, b) {
        if (null === b) return false;
        for (var c2 = 0; c2 < b.length && c2 < a2.length; c2++) if (!Vc(a2[c2], b[c2])) return false;
        return true;
      }
      function Re(a2, b, c2, d, e2, f) {
        Le = f;
        K = b;
        b.memoizedState = null;
        b.updateQueue = null;
        b.lanes = 0;
        Je.current = null === a2 || null === a2.memoizedState ? Se : Te;
        a2 = c2(d, e2);
        if (Ne) {
          f = 0;
          do {
            Ne = false;
            Oe = 0;
            if (25 <= f) throw Error(m(301));
            f += 1;
            M = L = null;
            b.updateQueue = null;
            Je.current = Ue;
            a2 = c2(d, e2);
          } while (Ne);
        }
        Je.current = Ve;
        b = null !== L && null !== L.next;
        Le = 0;
        M = L = K = null;
        Me = false;
        if (b) throw Error(m(300));
        return a2;
      }
      function We() {
        var a2 = 0 !== Oe;
        Oe = 0;
        return a2;
      }
      function Xe() {
        var a2 = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
        null === M ? K.memoizedState = M = a2 : M = M.next = a2;
        return M;
      }
      function Ye() {
        if (null === L) {
          var a2 = K.alternate;
          a2 = null !== a2 ? a2.memoizedState : null;
        } else a2 = L.next;
        var b = null === M ? K.memoizedState : M.next;
        if (null !== b) M = b, L = a2;
        else {
          if (null === a2) throw Error(m(310));
          L = a2;
          a2 = { memoizedState: L.memoizedState, baseState: L.baseState, baseQueue: L.baseQueue, queue: L.queue, next: null };
          null === M ? K.memoizedState = M = a2 : M = M.next = a2;
        }
        return M;
      }
      function Ze(a2, b) {
        return "function" === typeof b ? b(a2) : b;
      }
      function $e(a2) {
        var b = Ye(), c2 = b.queue;
        if (null === c2) throw Error(m(311));
        c2.lastRenderedReducer = a2;
        var d = L, e2 = d.baseQueue, f = c2.pending;
        if (null !== f) {
          if (null !== e2) {
            var g = e2.next;
            e2.next = f.next;
            f.next = g;
          }
          d.baseQueue = e2 = f;
          c2.pending = null;
        }
        if (null !== e2) {
          f = e2.next;
          d = d.baseState;
          var h = g = null, k = null, l = f;
          do {
            var n2 = l.lane;
            if ((Le & n2) === n2) null !== k && (k = k.next = { lane: 0, action: l.action, hasEagerState: l.hasEagerState, eagerState: l.eagerState, next: null }), d = l.hasEagerState ? l.eagerState : a2(d, l.action);
            else {
              var t3 = {
                lane: n2,
                action: l.action,
                hasEagerState: l.hasEagerState,
                eagerState: l.eagerState,
                next: null
              };
              null === k ? (h = k = t3, g = d) : k = k.next = t3;
              K.lanes |= n2;
              be |= n2;
            }
            l = l.next;
          } while (null !== l && l !== f);
          null === k ? g = d : k.next = h;
          Vc(d, b.memoizedState) || (G = true);
          b.memoizedState = d;
          b.baseState = g;
          b.baseQueue = k;
          c2.lastRenderedState = d;
        }
        a2 = c2.interleaved;
        if (null !== a2) {
          e2 = a2;
          do
            f = e2.lane, K.lanes |= f, be |= f, e2 = e2.next;
          while (e2 !== a2);
        } else null === e2 && (c2.lanes = 0);
        return [b.memoizedState, c2.dispatch];
      }
      function af(a2) {
        var b = Ye(), c2 = b.queue;
        if (null === c2) throw Error(m(311));
        c2.lastRenderedReducer = a2;
        var d = c2.dispatch, e2 = c2.pending, f = b.memoizedState;
        if (null !== e2) {
          c2.pending = null;
          var g = e2 = e2.next;
          do
            f = a2(f, g.action), g = g.next;
          while (g !== e2);
          Vc(f, b.memoizedState) || (G = true);
          b.memoizedState = f;
          null === b.baseQueue && (b.baseState = f);
          c2.lastRenderedState = f;
        }
        return [f, d];
      }
      function bf() {
      }
      function cf(a2, b) {
        var c2 = K, d = Ye(), e2 = b(), f = !Vc(d.memoizedState, e2);
        f && (d.memoizedState = e2, G = true);
        d = d.queue;
        df(ef.bind(null, c2, d, a2), [a2]);
        if (d.getSnapshot !== b || f || null !== M && M.memoizedState.tag & 1) {
          c2.flags |= 2048;
          ff(9, gf.bind(null, c2, d, e2, b), void 0, null);
          if (null === O) throw Error(m(349));
          0 !== (Le & 30) || hf(c2, b, e2);
        }
        return e2;
      }
      function hf(a2, b, c2) {
        a2.flags |= 16384;
        a2 = { getSnapshot: b, value: c2 };
        b = K.updateQueue;
        null === b ? (b = { lastEffect: null, stores: null }, K.updateQueue = b, b.stores = [a2]) : (c2 = b.stores, null === c2 ? b.stores = [a2] : c2.push(a2));
      }
      function gf(a2, b, c2, d) {
        b.value = c2;
        b.getSnapshot = d;
        jf(b) && kf(a2);
      }
      function ef(a2, b, c2) {
        return c2(function() {
          jf(b) && kf(a2);
        });
      }
      function jf(a2) {
        var b = a2.getSnapshot;
        a2 = a2.value;
        try {
          var c2 = b();
          return !Vc(a2, c2);
        } catch (d) {
          return true;
        }
      }
      function kf(a2) {
        var b = Td(a2, 1);
        null !== b && ge(b, a2, 1, -1);
      }
      function lf(a2) {
        var b = Xe();
        "function" === typeof a2 && (a2 = a2());
        b.memoizedState = b.baseState = a2;
        a2 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: Ze, lastRenderedState: a2 };
        b.queue = a2;
        a2 = a2.dispatch = mf.bind(null, K, a2);
        return [b.memoizedState, a2];
      }
      function ff(a2, b, c2, d) {
        a2 = { tag: a2, create: b, destroy: c2, deps: d, next: null };
        b = K.updateQueue;
        null === b ? (b = { lastEffect: null, stores: null }, K.updateQueue = b, b.lastEffect = a2.next = a2) : (c2 = b.lastEffect, null === c2 ? b.lastEffect = a2.next = a2 : (d = c2.next, c2.next = a2, a2.next = d, b.lastEffect = a2));
        return a2;
      }
      function nf() {
        return Ye().memoizedState;
      }
      function of(a2, b, c2, d) {
        var e2 = Xe();
        K.flags |= a2;
        e2.memoizedState = ff(1 | b, c2, void 0, void 0 === d ? null : d);
      }
      function pf(a2, b, c2, d) {
        var e2 = Ye();
        d = void 0 === d ? null : d;
        var f = void 0;
        if (null !== L) {
          var g = L.memoizedState;
          f = g.destroy;
          if (null !== d && Qe(d, g.deps)) {
            e2.memoizedState = ff(b, c2, f, d);
            return;
          }
        }
        K.flags |= a2;
        e2.memoizedState = ff(1 | b, c2, f, d);
      }
      function qf(a2, b) {
        return of(8390656, 8, a2, b);
      }
      function df(a2, b) {
        return pf(2048, 8, a2, b);
      }
      function rf(a2, b) {
        return pf(4, 2, a2, b);
      }
      function sf(a2, b) {
        return pf(4, 4, a2, b);
      }
      function tf(a2, b) {
        if ("function" === typeof b) return a2 = a2(), b(a2), function() {
          b(null);
        };
        if (null !== b && void 0 !== b) return a2 = a2(), b.current = a2, function() {
          b.current = null;
        };
      }
      function uf(a2, b, c2) {
        c2 = null !== c2 && void 0 !== c2 ? c2.concat([a2]) : null;
        return pf(4, 4, tf.bind(null, b, a2), c2);
      }
      function vf() {
      }
      function wf(a2, b) {
        var c2 = Ye();
        b = void 0 === b ? null : b;
        var d = c2.memoizedState;
        if (null !== d && null !== b && Qe(b, d[1])) return d[0];
        c2.memoizedState = [a2, b];
        return a2;
      }
      function xf(a2, b) {
        var c2 = Ye();
        b = void 0 === b ? null : b;
        var d = c2.memoizedState;
        if (null !== d && null !== b && Qe(b, d[1])) return d[0];
        a2 = a2();
        c2.memoizedState = [a2, b];
        return a2;
      }
      function yf(a2, b, c2) {
        if (0 === (Le & 21)) return a2.baseState && (a2.baseState = false, G = true), a2.memoizedState = c2;
        Vc(c2, b) || (c2 = Dc(), K.lanes |= c2, be |= c2, a2.baseState = true);
        return b;
      }
      function zf(a2, b) {
        var c2 = C;
        C = 0 !== c2 && 4 > c2 ? c2 : 4;
        a2(true);
        var d = Ke.transition;
        Ke.transition = {};
        try {
          a2(false), b();
        } finally {
          C = c2, Ke.transition = d;
        }
      }
      function Af() {
        return Ye().memoizedState;
      }
      function Bf(a2, b, c2) {
        var d = fe(a2);
        c2 = { lane: d, action: c2, hasEagerState: false, eagerState: null, next: null };
        if (Cf(a2)) Df(b, c2);
        else if (c2 = Sd(a2, b, c2, d), null !== c2) {
          var e2 = I();
          ge(c2, a2, d, e2);
          Ef(c2, b, d);
        }
      }
      function mf(a2, b, c2) {
        var d = fe(a2), e2 = { lane: d, action: c2, hasEagerState: false, eagerState: null, next: null };
        if (Cf(a2)) Df(b, e2);
        else {
          var f = a2.alternate;
          if (0 === a2.lanes && (null === f || 0 === f.lanes) && (f = b.lastRenderedReducer, null !== f)) try {
            var g = b.lastRenderedState, h = f(g, c2);
            e2.hasEagerState = true;
            e2.eagerState = h;
            if (Vc(h, g)) {
              var k = b.interleaved;
              null === k ? (e2.next = e2, Rd(b)) : (e2.next = k.next, k.next = e2);
              b.interleaved = e2;
              return;
            }
          } catch (l) {
          } finally {
          }
          c2 = Sd(a2, b, e2, d);
          null !== c2 && (e2 = I(), ge(c2, a2, d, e2), Ef(c2, b, d));
        }
      }
      function Cf(a2) {
        var b = a2.alternate;
        return a2 === K || null !== b && b === K;
      }
      function Df(a2, b) {
        Ne = Me = true;
        var c2 = a2.pending;
        null === c2 ? b.next = b : (b.next = c2.next, c2.next = b);
        a2.pending = b;
      }
      function Ef(a2, b, c2) {
        if (0 !== (c2 & 4194240)) {
          var d = b.lanes;
          d &= a2.pendingLanes;
          c2 |= d;
          b.lanes = c2;
          Hc(a2, c2);
        }
      }
      var Ve = { readContext: Pd, useCallback: N, useContext: N, useEffect: N, useImperativeHandle: N, useInsertionEffect: N, useLayoutEffect: N, useMemo: N, useReducer: N, useRef: N, useState: N, useDebugValue: N, useDeferredValue: N, useTransition: N, useMutableSource: N, useSyncExternalStore: N, useId: N, unstable_isNewReconciler: false }, Se = { readContext: Pd, useCallback: function(a2, b) {
        Xe().memoizedState = [a2, void 0 === b ? null : b];
        return a2;
      }, useContext: Pd, useEffect: qf, useImperativeHandle: function(a2, b, c2) {
        c2 = null !== c2 && void 0 !== c2 ? c2.concat([a2]) : null;
        return of(
          4194308,
          4,
          tf.bind(null, b, a2),
          c2
        );
      }, useLayoutEffect: function(a2, b) {
        return of(4194308, 4, a2, b);
      }, useInsertionEffect: function(a2, b) {
        return of(4, 2, a2, b);
      }, useMemo: function(a2, b) {
        var c2 = Xe();
        b = void 0 === b ? null : b;
        a2 = a2();
        c2.memoizedState = [a2, b];
        return a2;
      }, useReducer: function(a2, b, c2) {
        var d = Xe();
        b = void 0 !== c2 ? c2(b) : b;
        d.memoizedState = d.baseState = b;
        a2 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a2, lastRenderedState: b };
        d.queue = a2;
        a2 = a2.dispatch = Bf.bind(null, K, a2);
        return [d.memoizedState, a2];
      }, useRef: function(a2) {
        var b = Xe();
        a2 = { current: a2 };
        return b.memoizedState = a2;
      }, useState: lf, useDebugValue: vf, useDeferredValue: function(a2) {
        return Xe().memoizedState = a2;
      }, useTransition: function() {
        var a2 = lf(false), b = a2[0];
        a2 = zf.bind(null, a2[1]);
        Xe().memoizedState = a2;
        return [b, a2];
      }, useMutableSource: function() {
      }, useSyncExternalStore: function(a2, b, c2) {
        var d = K, e2 = Xe();
        if (F) {
          if (void 0 === c2) throw Error(m(407));
          c2 = c2();
        } else {
          c2 = b();
          if (null === O) throw Error(m(349));
          0 !== (Le & 30) || hf(d, b, c2);
        }
        e2.memoizedState = c2;
        var f = { value: c2, getSnapshot: b };
        e2.queue = f;
        qf(ef.bind(
          null,
          d,
          f,
          a2
        ), [a2]);
        d.flags |= 2048;
        ff(9, gf.bind(null, d, f, c2, b), void 0, null);
        return c2;
      }, useId: function() {
        var a2 = Xe(), b = O.identifierPrefix;
        if (F) {
          var c2 = jd;
          var d = id;
          c2 = (d & ~(1 << 32 - tc(d) - 1)).toString(32) + c2;
          b = ":" + b + "R" + c2;
          c2 = Oe++;
          0 < c2 && (b += "H" + c2.toString(32));
          b += ":";
        } else c2 = Pe++, b = ":" + b + "r" + c2.toString(32) + ":";
        return a2.memoizedState = b;
      }, unstable_isNewReconciler: false }, Te = {
        readContext: Pd,
        useCallback: wf,
        useContext: Pd,
        useEffect: df,
        useImperativeHandle: uf,
        useInsertionEffect: rf,
        useLayoutEffect: sf,
        useMemo: xf,
        useReducer: $e,
        useRef: nf,
        useState: function() {
          return $e(Ze);
        },
        useDebugValue: vf,
        useDeferredValue: function(a2) {
          var b = Ye();
          return yf(b, L.memoizedState, a2);
        },
        useTransition: function() {
          var a2 = $e(Ze)[0], b = Ye().memoizedState;
          return [a2, b];
        },
        useMutableSource: bf,
        useSyncExternalStore: cf,
        useId: Af,
        unstable_isNewReconciler: false
      }, Ue = { readContext: Pd, useCallback: wf, useContext: Pd, useEffect: df, useImperativeHandle: uf, useInsertionEffect: rf, useLayoutEffect: sf, useMemo: xf, useReducer: af, useRef: nf, useState: function() {
        return af(Ze);
      }, useDebugValue: vf, useDeferredValue: function(a2) {
        var b = Ye();
        return null === L ? b.memoizedState = a2 : yf(b, L.memoizedState, a2);
      }, useTransition: function() {
        var a2 = af(Ze)[0], b = Ye().memoizedState;
        return [a2, b];
      }, useMutableSource: bf, useSyncExternalStore: cf, useId: Af, unstable_isNewReconciler: false };
      function Ff(a2, b) {
        try {
          var c2 = "", d = b;
          do
            c2 += Ed(d), d = d.return;
          while (d);
          var e2 = c2;
        } catch (f) {
          e2 = "\nError generating stack: " + f.message + "\n" + f.stack;
        }
        return { value: a2, source: b, stack: e2, digest: null };
      }
      function Gf(a2, b, c2) {
        return { value: a2, source: null, stack: null != c2 ? c2 : null, digest: null != b ? b : null };
      }
      function Hf(a2, b) {
        try {
          console.error(b.value);
        } catch (c2) {
          setTimeout(function() {
            throw c2;
          });
        }
      }
      var If = "function" === typeof WeakMap ? WeakMap : Map;
      function Jf(a2, b, c2) {
        c2 = Xd(-1, c2);
        c2.tag = 3;
        c2.payload = { element: null };
        var d = b.value;
        c2.callback = function() {
          Kf || (Kf = true, Lf = d);
          Hf(a2, b);
        };
        return c2;
      }
      function Mf(a2, b, c2) {
        c2 = Xd(-1, c2);
        c2.tag = 3;
        var d = a2.type.getDerivedStateFromError;
        if ("function" === typeof d) {
          var e2 = b.value;
          c2.payload = function() {
            return d(e2);
          };
          c2.callback = function() {
            Hf(a2, b);
          };
        }
        var f = a2.stateNode;
        null !== f && "function" === typeof f.componentDidCatch && (c2.callback = function() {
          Hf(a2, b);
          "function" !== typeof d && (null === Nf ? Nf = /* @__PURE__ */ new Set([this]) : Nf.add(this));
          var c3 = b.stack;
          this.componentDidCatch(b.value, { componentStack: null !== c3 ? c3 : "" });
        });
        return c2;
      }
      function Of(a2, b, c2) {
        var d = a2.pingCache;
        if (null === d) {
          d = a2.pingCache = new If();
          var e2 = /* @__PURE__ */ new Set();
          d.set(b, e2);
        } else e2 = d.get(b), void 0 === e2 && (e2 = /* @__PURE__ */ new Set(), d.set(b, e2));
        e2.has(c2) || (e2.add(c2), a2 = Pf.bind(null, a2, b, c2), b.then(a2, a2));
      }
      function Qf(a2) {
        do {
          var b;
          if (b = 13 === a2.tag) b = a2.memoizedState, b = null !== b ? null !== b.dehydrated ? true : false : true;
          if (b) return a2;
          a2 = a2.return;
        } while (null !== a2);
        return null;
      }
      function Rf(a2, b, c2, d, e2) {
        if (0 === (a2.mode & 1)) return a2 === b ? a2.flags |= 65536 : (a2.flags |= 128, c2.flags |= 131072, c2.flags &= -52805, 1 === c2.tag && (null === c2.alternate ? c2.tag = 17 : (b = Xd(-1, 1), b.tag = 2, Yd(c2, b, 1))), c2.lanes |= 1), a2;
        a2.flags |= 65536;
        a2.lanes = e2;
        return a2;
      }
      var Sf = da.ReactCurrentOwner, G = false;
      function P(a2, b, c2, d) {
        b.child = null === a2 ? we(b, null, c2, d) : ve(b, a2.child, c2, d);
      }
      function Tf(a2, b, c2, d, e2) {
        c2 = c2.render;
        var f = b.ref;
        Od(b, e2);
        d = Re(a2, b, c2, d, f, e2);
        c2 = We();
        if (null !== a2 && !G) return b.updateQueue = a2.updateQueue, b.flags &= -2053, a2.lanes &= ~e2, Uf(a2, b, e2);
        F && c2 && md(b);
        b.flags |= 1;
        P(a2, b, d, e2);
        return b.child;
      }
      function Vf(a2, b, c2, d, e2) {
        if (null === a2) {
          var f = c2.type;
          if ("function" === typeof f && !Wf(f) && void 0 === f.defaultProps && null === c2.compare && void 0 === c2.defaultProps) return b.tag = 15, b.type = f, Xf(a2, b, f, d, e2);
          a2 = se(c2.type, null, d, b, b.mode, e2);
          a2.ref = b.ref;
          a2.return = b;
          return b.child = a2;
        }
        f = a2.child;
        if (0 === (a2.lanes & e2)) {
          var g = f.memoizedProps;
          c2 = c2.compare;
          c2 = null !== c2 ? c2 : Dd;
          if (c2(g, d) && a2.ref === b.ref) return Uf(a2, b, e2);
        }
        b.flags |= 1;
        a2 = qe(f, d);
        a2.ref = b.ref;
        a2.return = b;
        return b.child = a2;
      }
      function Xf(a2, b, c2, d, e2) {
        if (null !== a2) {
          var f = a2.memoizedProps;
          if (Dd(f, d) && a2.ref === b.ref) if (G = false, b.pendingProps = d = f, 0 !== (a2.lanes & e2)) 0 !== (a2.flags & 131072) && (G = true);
          else return b.lanes = a2.lanes, Uf(a2, b, e2);
        }
        return Yf(a2, b, c2, d, e2);
      }
      function Zf(a2, b, c2) {
        var d = b.pendingProps, e2 = d.children, f = null !== a2 ? a2.memoizedState : null;
        if ("hidden" === d.mode) if (0 === (b.mode & 1)) b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, v($f, ag), ag |= c2;
        else {
          if (0 === (c2 & 1073741824)) return a2 = null !== f ? f.baseLanes | c2 : c2, b.lanes = b.childLanes = 1073741824, b.memoizedState = { baseLanes: a2, cachePool: null, transitions: null }, b.updateQueue = null, v($f, ag), ag |= a2, null;
          b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null };
          d = null !== f ? f.baseLanes : c2;
          v($f, ag);
          ag |= d;
        }
        else null !== f ? (d = f.baseLanes | c2, b.memoizedState = null) : d = c2, v($f, ag), ag |= d;
        P(a2, b, e2, c2);
        return b.child;
      }
      function bg(a2, b) {
        var c2 = b.ref;
        if (null === a2 && null !== c2 || null !== a2 && a2.ref !== c2) b.flags |= 512, b.flags |= 2097152;
      }
      function Yf(a2, b, c2, d, e2) {
        var f = A(c2) ? kc : x.current;
        f = lc(b, f);
        Od(b, e2);
        c2 = Re(a2, b, c2, d, f, e2);
        d = We();
        if (null !== a2 && !G) return b.updateQueue = a2.updateQueue, b.flags &= -2053, a2.lanes &= ~e2, Uf(a2, b, e2);
        F && d && md(b);
        b.flags |= 1;
        P(a2, b, c2, e2);
        return b.child;
      }
      function cg(a2, b, c2, d, e2) {
        if (A(c2)) {
          var f = true;
          pc(b);
        } else f = false;
        Od(b, e2);
        if (null === b.stateNode) dg(a2, b), je(b, c2, d), le(b, c2, d, e2), d = true;
        else if (null === a2) {
          var g = b.stateNode, h = b.memoizedProps;
          g.props = h;
          var k = g.context, l = c2.contextType;
          "object" === typeof l && null !== l ? l = Pd(l) : (l = A(c2) ? kc : x.current, l = lc(b, l));
          var n2 = c2.getDerivedStateFromProps, t3 = "function" === typeof n2 || "function" === typeof g.getSnapshotBeforeUpdate;
          t3 || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && ke(b, g, d, l);
          Ud = false;
          var p = b.memoizedState;
          g.state = p;
          ae(b, d, g, e2);
          k = b.memoizedState;
          h !== d || p !== k || z.current || Ud ? ("function" === typeof n2 && (ee(b, c2, n2, d), k = b.memoizedState), (h = Ud || ie(b, c2, h, d, p, k, l)) ? (t3 || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.flags |= 4194308)) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), d = false);
        } else {
          g = b.stateNode;
          Wd(a2, b);
          h = b.memoizedProps;
          l = b.type === b.elementType ? h : Fd(b.type, h);
          g.props = l;
          t3 = b.pendingProps;
          p = g.context;
          k = c2.contextType;
          "object" === typeof k && null !== k ? k = Pd(k) : (k = A(c2) ? kc : x.current, k = lc(b, k));
          var B = c2.getDerivedStateFromProps;
          (n2 = "function" === typeof B || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== t3 || p !== k) && ke(b, g, d, k);
          Ud = false;
          p = b.memoizedState;
          g.state = p;
          ae(b, d, g, e2);
          var w = b.memoizedState;
          h !== t3 || p !== w || z.current || Ud ? ("function" === typeof B && (ee(b, c2, B, d), w = b.memoizedState), (l = Ud || ie(b, c2, l, d, p, w, k) || false) ? (n2 || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, w, k), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, w, k)), "function" === typeof g.componentDidUpdate && (b.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.flags |= 1024)) : ("function" !== typeof g.componentDidUpdate || h === a2.memoizedProps && p === a2.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a2.memoizedProps && p === a2.memoizedState || (b.flags |= 1024), b.memoizedProps = d, b.memoizedState = w), g.props = d, g.state = w, g.context = k, d = l) : ("function" !== typeof g.componentDidUpdate || h === a2.memoizedProps && p === a2.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a2.memoizedProps && p === a2.memoizedState || (b.flags |= 1024), d = false);
        }
        return eg(a2, b, c2, d, f, e2);
      }
      function eg(a2, b, c2, d, e2, f) {
        bg(a2, b);
        var g = 0 !== (b.flags & 128);
        if (!d && !g) return e2 && rc(b, c2, false), Uf(a2, b, f);
        d = b.stateNode;
        Sf.current = b;
        var h = g && "function" !== typeof c2.getDerivedStateFromError ? null : d.render();
        b.flags |= 1;
        null !== a2 && g ? (b.child = ve(b, a2.child, null, f), b.child = ve(b, null, h, f)) : P(a2, b, h, f);
        b.memoizedState = d.state;
        e2 && rc(b, c2, true);
        return b.child;
      }
      function fg(a2) {
        var b = a2.stateNode;
        b.pendingContext ? nc(a2, b.pendingContext, b.pendingContext !== b.context) : b.context && nc(a2, b.context, false);
        Ce(a2, b.containerInfo);
      }
      function gg(a2, b, c2, d, e2) {
        Ad();
        Bd(e2);
        b.flags |= 256;
        P(a2, b, c2, d);
        return b.child;
      }
      var hg = { dehydrated: null, treeContext: null, retryLane: 0 };
      function ig(a2) {
        return { baseLanes: a2, cachePool: null, transitions: null };
      }
      function jg(a2, b, c2) {
        var d = b.pendingProps, e2 = J.current, f = false, g = 0 !== (b.flags & 128), h;
        (h = g) || (h = null !== a2 && null === a2.memoizedState ? false : 0 !== (e2 & 2));
        if (h) f = true, b.flags &= -129;
        else if (null === a2 || null !== a2.memoizedState) e2 |= 1;
        v(J, e2 & 1);
        if (null === a2) {
          wd(b);
          a2 = b.memoizedState;
          if (null !== a2 && (a2 = a2.dehydrated, null !== a2)) return 0 === (b.mode & 1) ? b.lanes = 1 : Kb(a2) ? b.lanes = 8 : b.lanes = 1073741824, null;
          g = d.children;
          a2 = d.fallback;
          return f ? (d = b.mode, f = b.child, g = { mode: "hidden", children: g }, 0 === (d & 1) && null !== f ? (f.childLanes = 0, f.pendingProps = g) : f = kg(g, d, 0, null), a2 = ue(a2, d, c2, null), f.return = b, a2.return = b, f.sibling = a2, b.child = f, b.child.memoizedState = ig(c2), b.memoizedState = hg, a2) : lg(b, g);
        }
        e2 = a2.memoizedState;
        if (null !== e2 && (h = e2.dehydrated, null !== h)) return mg(a2, b, g, d, h, e2, c2);
        if (f) {
          f = d.fallback;
          g = b.mode;
          e2 = a2.child;
          h = e2.sibling;
          var k = { mode: "hidden", children: d.children };
          0 === (g & 1) && b.child !== e2 ? (d = b.child, d.childLanes = 0, d.pendingProps = k, b.deletions = null) : (d = qe(e2, k), d.subtreeFlags = e2.subtreeFlags & 14680064);
          null !== h ? f = qe(h, f) : (f = ue(f, g, c2, null), f.flags |= 2);
          f.return = b;
          d.return = b;
          d.sibling = f;
          b.child = d;
          d = f;
          f = b.child;
          g = a2.child.memoizedState;
          g = null === g ? ig(c2) : { baseLanes: g.baseLanes | c2, cachePool: null, transitions: g.transitions };
          f.memoizedState = g;
          f.childLanes = a2.childLanes & ~c2;
          b.memoizedState = hg;
          return d;
        }
        f = a2.child;
        a2 = f.sibling;
        d = qe(f, { mode: "visible", children: d.children });
        0 === (b.mode & 1) && (d.lanes = c2);
        d.return = b;
        d.sibling = null;
        null !== a2 && (c2 = b.deletions, null === c2 ? (b.deletions = [a2], b.flags |= 16) : c2.push(a2));
        b.child = d;
        b.memoizedState = null;
        return d;
      }
      function lg(a2, b) {
        b = kg({ mode: "visible", children: b }, a2.mode, 0, null);
        b.return = a2;
        return a2.child = b;
      }
      function ng(a2, b, c2, d) {
        null !== d && Bd(d);
        ve(b, a2.child, null, c2);
        a2 = lg(b, b.pendingProps.children);
        a2.flags |= 2;
        b.memoizedState = null;
        return a2;
      }
      function mg(a2, b, c2, d, e2, f, g) {
        if (c2) {
          if (b.flags & 256) return b.flags &= -257, d = Gf(Error(m(422))), ng(a2, b, g, d);
          if (null !== b.memoizedState) return b.child = a2.child, b.flags |= 128, null;
          f = d.fallback;
          e2 = b.mode;
          d = kg({ mode: "visible", children: d.children }, e2, 0, null);
          f = ue(f, e2, g, null);
          f.flags |= 2;
          d.return = b;
          f.return = b;
          d.sibling = f;
          b.child = d;
          0 !== (b.mode & 1) && ve(b, a2.child, null, g);
          b.child.memoizedState = ig(g);
          b.memoizedState = hg;
          return f;
        }
        if (0 === (b.mode & 1)) return ng(a2, b, g, null);
        if (Kb(e2)) return d = Lb(e2).digest, f = Error(m(419)), d = Gf(
          f,
          d,
          void 0
        ), ng(a2, b, g, d);
        c2 = 0 !== (g & a2.childLanes);
        if (G || c2) {
          d = O;
          if (null !== d) {
            switch (g & -g) {
              case 4:
                e2 = 2;
                break;
              case 16:
                e2 = 8;
                break;
              case 64:
              case 128:
              case 256:
              case 512:
              case 1024:
              case 2048:
              case 4096:
              case 8192:
              case 16384:
              case 32768:
              case 65536:
              case 131072:
              case 262144:
              case 524288:
              case 1048576:
              case 2097152:
              case 4194304:
              case 8388608:
              case 16777216:
              case 33554432:
              case 67108864:
                e2 = 32;
                break;
              case 536870912:
                e2 = 268435456;
                break;
              default:
                e2 = 0;
            }
            e2 = 0 !== (e2 & (d.suspendedLanes | g)) ? 0 : e2;
            0 !== e2 && e2 !== f.retryLane && (f.retryLane = e2, Td(a2, e2), ge(
              d,
              a2,
              e2,
              -1
            ));
          }
          og();
          d = Gf(Error(m(421)));
          return ng(a2, b, g, d);
        }
        if (Jb(e2)) return b.flags |= 128, b.child = a2.child, b = pg.bind(null, a2), Mb(e2, b), null;
        a2 = f.treeContext;
        Va && (pd = Qb(e2), od = b, F = true, rd = null, qd = false, null !== a2 && (fd[gd++] = id, fd[gd++] = jd, fd[gd++] = hd, id = a2.id, jd = a2.overflow, hd = b));
        b = lg(b, d.children);
        b.flags |= 4096;
        return b;
      }
      function qg(a2, b, c2) {
        a2.lanes |= b;
        var d = a2.alternate;
        null !== d && (d.lanes |= b);
        Nd(a2.return, b, c2);
      }
      function rg(a2, b, c2, d, e2) {
        var f = a2.memoizedState;
        null === f ? a2.memoizedState = { isBackwards: b, rendering: null, renderingStartTime: 0, last: d, tail: c2, tailMode: e2 } : (f.isBackwards = b, f.rendering = null, f.renderingStartTime = 0, f.last = d, f.tail = c2, f.tailMode = e2);
      }
      function sg(a2, b, c2) {
        var d = b.pendingProps, e2 = d.revealOrder, f = d.tail;
        P(a2, b, d.children, c2);
        d = J.current;
        if (0 !== (d & 2)) d = d & 1 | 2, b.flags |= 128;
        else {
          if (null !== a2 && 0 !== (a2.flags & 128)) a: for (a2 = b.child; null !== a2; ) {
            if (13 === a2.tag) null !== a2.memoizedState && qg(a2, c2, b);
            else if (19 === a2.tag) qg(a2, c2, b);
            else if (null !== a2.child) {
              a2.child.return = a2;
              a2 = a2.child;
              continue;
            }
            if (a2 === b) break a;
            for (; null === a2.sibling; ) {
              if (null === a2.return || a2.return === b) break a;
              a2 = a2.return;
            }
            a2.sibling.return = a2.return;
            a2 = a2.sibling;
          }
          d &= 1;
        }
        v(J, d);
        if (0 === (b.mode & 1)) b.memoizedState = null;
        else switch (e2) {
          case "forwards":
            c2 = b.child;
            for (e2 = null; null !== c2; ) a2 = c2.alternate, null !== a2 && null === Ge(a2) && (e2 = c2), c2 = c2.sibling;
            c2 = e2;
            null === c2 ? (e2 = b.child, b.child = null) : (e2 = c2.sibling, c2.sibling = null);
            rg(b, false, e2, c2, f);
            break;
          case "backwards":
            c2 = null;
            e2 = b.child;
            for (b.child = null; null !== e2; ) {
              a2 = e2.alternate;
              if (null !== a2 && null === Ge(a2)) {
                b.child = e2;
                break;
              }
              a2 = e2.sibling;
              e2.sibling = c2;
              c2 = e2;
              e2 = a2;
            }
            rg(b, true, c2, null, f);
            break;
          case "together":
            rg(b, false, null, null, void 0);
            break;
          default:
            b.memoizedState = null;
        }
        return b.child;
      }
      function dg(a2, b) {
        0 === (b.mode & 1) && null !== a2 && (a2.alternate = null, b.alternate = null, b.flags |= 2);
      }
      function Uf(a2, b, c2) {
        null !== a2 && (b.dependencies = a2.dependencies);
        be |= b.lanes;
        if (0 === (c2 & b.childLanes)) return null;
        if (null !== a2 && b.child !== a2.child) throw Error(m(153));
        if (null !== b.child) {
          a2 = b.child;
          c2 = qe(a2, a2.pendingProps);
          b.child = c2;
          for (c2.return = b; null !== a2.sibling; ) a2 = a2.sibling, c2 = c2.sibling = qe(a2, a2.pendingProps), c2.return = b;
          c2.sibling = null;
        }
        return b.child;
      }
      function tg(a2, b, c2) {
        switch (b.tag) {
          case 3:
            fg(b);
            Ad();
            break;
          case 5:
            Ee(b);
            break;
          case 1:
            A(b.type) && pc(b);
            break;
          case 4:
            Ce(b, b.stateNode.containerInfo);
            break;
          case 10:
            Ld(b, b.type._context, b.memoizedProps.value);
            break;
          case 13:
            var d = b.memoizedState;
            if (null !== d) {
              if (null !== d.dehydrated) return v(J, J.current & 1), b.flags |= 128, null;
              if (0 !== (c2 & b.child.childLanes)) return jg(a2, b, c2);
              v(J, J.current & 1);
              a2 = Uf(a2, b, c2);
              return null !== a2 ? a2.sibling : null;
            }
            v(J, J.current & 1);
            break;
          case 19:
            d = 0 !== (c2 & b.childLanes);
            if (0 !== (a2.flags & 128)) {
              if (d) return sg(
                a2,
                b,
                c2
              );
              b.flags |= 128;
            }
            var e2 = b.memoizedState;
            null !== e2 && (e2.rendering = null, e2.tail = null, e2.lastEffect = null);
            v(J, J.current);
            if (d) break;
            else return null;
          case 22:
          case 23:
            return b.lanes = 0, Zf(a2, b, c2);
        }
        return Uf(a2, b, c2);
      }
      function ug(a2) {
        a2.flags |= 4;
      }
      function vg(a2, b) {
        if (null !== a2 && a2.child === b.child) return true;
        if (0 !== (b.flags & 16)) return false;
        for (a2 = b.child; null !== a2; ) {
          if (0 !== (a2.flags & 12854) || 0 !== (a2.subtreeFlags & 12854)) return false;
          a2 = a2.sibling;
        }
        return true;
      }
      var wg, xg, yg, zg;
      if (Ta) wg = function(a2, b) {
        for (var c2 = b.child; null !== c2; ) {
          if (5 === c2.tag || 6 === c2.tag) Ka(a2, c2.stateNode);
          else if (4 !== c2.tag && null !== c2.child) {
            c2.child.return = c2;
            c2 = c2.child;
            continue;
          }
          if (c2 === b) break;
          for (; null === c2.sibling; ) {
            if (null === c2.return || c2.return === b) return;
            c2 = c2.return;
          }
          c2.sibling.return = c2.return;
          c2 = c2.sibling;
        }
      }, xg = function() {
      }, yg = function(a2, b, c2, d, e2) {
        a2 = a2.memoizedProps;
        if (a2 !== d) {
          var f = b.stateNode, g = Be(ye.current);
          c2 = Ma(f, c2, a2, d, e2, g);
          (b.updateQueue = c2) && ug(b);
        }
      }, zg = function(a2, b, c2, d) {
        c2 !== d && ug(b);
      };
      else if (Ua) {
        wg = function(a2, b, c2, d) {
          for (var e2 = b.child; null !== e2; ) {
            if (5 === e2.tag) {
              var f = e2.stateNode;
              c2 && d && (f = Eb(f, e2.type, e2.memoizedProps, e2));
              Ka(a2, f);
            } else if (6 === e2.tag) f = e2.stateNode, c2 && d && (f = Fb(f, e2.memoizedProps, e2)), Ka(a2, f);
            else if (4 !== e2.tag) {
              if (22 === e2.tag && null !== e2.memoizedState) f = e2.child, null !== f && (f.return = e2), wg(a2, e2, true, true);
              else if (null !== e2.child) {
                e2.child.return = e2;
                e2 = e2.child;
                continue;
              }
            }
            if (e2 === b) break;
            for (; null === e2.sibling; ) {
              if (null === e2.return || e2.return === b) return;
              e2 = e2.return;
            }
            e2.sibling.return = e2.return;
            e2 = e2.sibling;
          }
        };
        var Ag = function(a2, b, c2, d) {
          for (var e2 = b.child; null !== e2; ) {
            if (5 === e2.tag) {
              var f = e2.stateNode;
              c2 && d && (f = Eb(f, e2.type, e2.memoizedProps, e2));
              Ab(a2, f);
            } else if (6 === e2.tag) f = e2.stateNode, c2 && d && (f = Fb(f, e2.memoizedProps, e2)), Ab(a2, f);
            else if (4 !== e2.tag) {
              if (22 === e2.tag && null !== e2.memoizedState) f = e2.child, null !== f && (f.return = e2), Ag(a2, e2, true, true);
              else if (null !== e2.child) {
                e2.child.return = e2;
                e2 = e2.child;
                continue;
              }
            }
            if (e2 === b) break;
            for (; null === e2.sibling; ) {
              if (null === e2.return || e2.return === b) return;
              e2 = e2.return;
            }
            e2.sibling.return = e2.return;
            e2 = e2.sibling;
          }
        };
        xg = function(a2, b) {
          var c2 = b.stateNode;
          if (!vg(a2, b)) {
            a2 = c2.containerInfo;
            var d = zb(a2);
            Ag(d, b, false, false);
            c2.pendingChildren = d;
            ug(b);
            Bb(a2, d);
          }
        };
        yg = function(a2, b, c2, d, e2) {
          var f = a2.stateNode, g = a2.memoizedProps;
          if ((a2 = vg(a2, b)) && g === d) b.stateNode = f;
          else {
            var h = b.stateNode, k = Be(ye.current), l = null;
            g !== d && (l = Ma(h, c2, g, d, e2, k));
            a2 && null === l ? b.stateNode = f : (f = yb(f, l, c2, g, d, b, a2, h), La(f, c2, d, e2, k) && ug(b), b.stateNode = f, a2 ? ug(b) : wg(f, b, false, false));
          }
        };
        zg = function(a2, b, c2, d) {
          c2 !== d ? (a2 = Be(Ae.current), c2 = Be(ye.current), b.stateNode = Oa(d, a2, c2, b), ug(b)) : b.stateNode = a2.stateNode;
        };
      } else xg = function() {
      }, yg = function() {
      }, zg = function() {
      };
      function Bg(a2, b) {
        if (!F) switch (a2.tailMode) {
          case "hidden":
            b = a2.tail;
            for (var c2 = null; null !== b; ) null !== b.alternate && (c2 = b), b = b.sibling;
            null === c2 ? a2.tail = null : c2.sibling = null;
            break;
          case "collapsed":
            c2 = a2.tail;
            for (var d = null; null !== c2; ) null !== c2.alternate && (d = c2), c2 = c2.sibling;
            null === d ? b || null === a2.tail ? a2.tail = null : a2.tail.sibling = null : d.sibling = null;
        }
      }
      function Q(a2) {
        var b = null !== a2.alternate && a2.alternate.child === a2.child, c2 = 0, d = 0;
        if (b) for (var e2 = a2.child; null !== e2; ) c2 |= e2.lanes | e2.childLanes, d |= e2.subtreeFlags & 14680064, d |= e2.flags & 14680064, e2.return = a2, e2 = e2.sibling;
        else for (e2 = a2.child; null !== e2; ) c2 |= e2.lanes | e2.childLanes, d |= e2.subtreeFlags, d |= e2.flags, e2.return = a2, e2 = e2.sibling;
        a2.subtreeFlags |= d;
        a2.childLanes = c2;
        return b;
      }
      function Cg(a2, b, c2) {
        var d = b.pendingProps;
        nd(b);
        switch (b.tag) {
          case 2:
          case 16:
          case 15:
          case 0:
          case 11:
          case 7:
          case 8:
          case 12:
          case 9:
          case 14:
            return Q(b), null;
          case 1:
            return A(b.type) && mc(), Q(b), null;
          case 3:
            c2 = b.stateNode;
            De();
            q(z);
            q(x);
            Ie();
            c2.pendingContext && (c2.context = c2.pendingContext, c2.pendingContext = null);
            if (null === a2 || null === a2.child) yd(b) ? ug(b) : null === a2 || a2.memoizedState.isDehydrated && 0 === (b.flags & 256) || (b.flags |= 1024, null !== rd && (Dg(rd), rd = null));
            xg(a2, b);
            Q(b);
            return null;
          case 5:
            Fe(b);
            c2 = Be(Ae.current);
            var e2 = b.type;
            if (null !== a2 && null != b.stateNode) yg(a2, b, e2, d, c2), a2.ref !== b.ref && (b.flags |= 512, b.flags |= 2097152);
            else {
              if (!d) {
                if (null === b.stateNode) throw Error(m(166));
                Q(b);
                return null;
              }
              a2 = Be(ye.current);
              if (yd(b)) {
                if (!Va) throw Error(m(175));
                a2 = Rb(b.stateNode, b.type, b.memoizedProps, c2, a2, b, !qd);
                b.updateQueue = a2;
                null !== a2 && ug(b);
              } else {
                var f = Ja(e2, d, c2, a2, b);
                wg(f, b, false, false);
                b.stateNode = f;
                La(f, e2, d, c2, a2) && ug(b);
              }
              null !== b.ref && (b.flags |= 512, b.flags |= 2097152);
            }
            Q(b);
            return null;
          case 6:
            if (a2 && null != b.stateNode) zg(a2, b, a2.memoizedProps, d);
            else {
              if ("string" !== typeof d && null === b.stateNode) throw Error(m(166));
              a2 = Be(Ae.current);
              c2 = Be(ye.current);
              if (yd(b)) {
                if (!Va) throw Error(m(176));
                a2 = b.stateNode;
                c2 = b.memoizedProps;
                if (d = Sb(a2, c2, b, !qd)) {
                  if (e2 = od, null !== e2) switch (e2.tag) {
                    case 3:
                      $b(e2.stateNode.containerInfo, a2, c2, 0 !== (e2.mode & 1));
                      break;
                    case 5:
                      ac(e2.type, e2.memoizedProps, e2.stateNode, a2, c2, 0 !== (e2.mode & 1));
                  }
                }
                d && ug(b);
              } else b.stateNode = Oa(d, a2, c2, b);
            }
            Q(b);
            return null;
          case 13:
            q(J);
            d = b.memoizedState;
            if (null === a2 || null !== a2.memoizedState && null !== a2.memoizedState.dehydrated) {
              if (F && null !== pd && 0 !== (b.mode & 1) && 0 === (b.flags & 128)) zd(), Ad(), b.flags |= 98560, e2 = false;
              else if (e2 = yd(b), null !== d && null !== d.dehydrated) {
                if (null === a2) {
                  if (!e2) throw Error(m(318));
                  if (!Va) throw Error(m(344));
                  e2 = b.memoizedState;
                  e2 = null !== e2 ? e2.dehydrated : null;
                  if (!e2) throw Error(m(317));
                  Tb(e2, b);
                } else Ad(), 0 === (b.flags & 128) && (b.memoizedState = null), b.flags |= 4;
                Q(b);
                e2 = false;
              } else null !== rd && (Dg(rd), rd = null), e2 = true;
              if (!e2) return b.flags & 65536 ? b : null;
            }
            if (0 !== (b.flags & 128)) return b.lanes = c2, b;
            c2 = null !== d;
            c2 !== (null !== a2 && null !== a2.memoizedState) && c2 && (b.child.flags |= 8192, 0 !== (b.mode & 1) && (null === a2 || 0 !== (J.current & 1) ? 0 === R && (R = 3) : og()));
            null !== b.updateQueue && (b.flags |= 4);
            Q(b);
            return null;
          case 4:
            return De(), xg(a2, b), null === a2 && Xa(b.stateNode.containerInfo), Q(b), null;
          case 10:
            return Md(b.type._context), Q(b), null;
          case 17:
            return A(b.type) && mc(), Q(b), null;
          case 19:
            q(J);
            e2 = b.memoizedState;
            if (null === e2) return Q(b), null;
            d = 0 !== (b.flags & 128);
            f = e2.rendering;
            if (null === f) if (d) Bg(e2, false);
            else {
              if (0 !== R || null !== a2 && 0 !== (a2.flags & 128)) for (a2 = b.child; null !== a2; ) {
                f = Ge(a2);
                if (null !== f) {
                  b.flags |= 128;
                  Bg(e2, false);
                  a2 = f.updateQueue;
                  null !== a2 && (b.updateQueue = a2, b.flags |= 4);
                  b.subtreeFlags = 0;
                  a2 = c2;
                  for (c2 = b.child; null !== c2; ) d = c2, e2 = a2, d.flags &= 14680066, f = d.alternate, null === f ? (d.childLanes = 0, d.lanes = e2, d.child = null, d.subtreeFlags = 0, d.memoizedProps = null, d.memoizedState = null, d.updateQueue = null, d.dependencies = null, d.stateNode = null) : (d.childLanes = f.childLanes, d.lanes = f.lanes, d.child = f.child, d.subtreeFlags = 0, d.deletions = null, d.memoizedProps = f.memoizedProps, d.memoizedState = f.memoizedState, d.updateQueue = f.updateQueue, d.type = f.type, e2 = f.dependencies, d.dependencies = null === e2 ? null : { lanes: e2.lanes, firstContext: e2.firstContext }), c2 = c2.sibling;
                  v(J, J.current & 1 | 2);
                  return b.child;
                }
                a2 = a2.sibling;
              }
              null !== e2.tail && D() > Eg && (b.flags |= 128, d = true, Bg(e2, false), b.lanes = 4194304);
            }
            else {
              if (!d) if (a2 = Ge(f), null !== a2) {
                if (b.flags |= 128, d = true, a2 = a2.updateQueue, null !== a2 && (b.updateQueue = a2, b.flags |= 4), Bg(e2, true), null === e2.tail && "hidden" === e2.tailMode && !f.alternate && !F) return Q(b), null;
              } else 2 * D() - e2.renderingStartTime > Eg && 1073741824 !== c2 && (b.flags |= 128, d = true, Bg(e2, false), b.lanes = 4194304);
              e2.isBackwards ? (f.sibling = b.child, b.child = f) : (a2 = e2.last, null !== a2 ? a2.sibling = f : b.child = f, e2.last = f);
            }
            if (null !== e2.tail) return b = e2.tail, e2.rendering = b, e2.tail = b.sibling, e2.renderingStartTime = D(), b.sibling = null, a2 = J.current, v(J, d ? a2 & 1 | 2 : a2 & 1), b;
            Q(b);
            return null;
          case 22:
          case 23:
            return Fg(), c2 = null !== b.memoizedState, null !== a2 && null !== a2.memoizedState !== c2 && (b.flags |= 8192), c2 && 0 !== (b.mode & 1) ? 0 !== (ag & 1073741824) && (Q(b), Ta && b.subtreeFlags & 6 && (b.flags |= 8192)) : Q(b), null;
          case 24:
            return null;
          case 25:
            return null;
        }
        throw Error(m(
          156,
          b.tag
        ));
      }
      function Gg(a2, b) {
        nd(b);
        switch (b.tag) {
          case 1:
            return A(b.type) && mc(), a2 = b.flags, a2 & 65536 ? (b.flags = a2 & -65537 | 128, b) : null;
          case 3:
            return De(), q(z), q(x), Ie(), a2 = b.flags, 0 !== (a2 & 65536) && 0 === (a2 & 128) ? (b.flags = a2 & -65537 | 128, b) : null;
          case 5:
            return Fe(b), null;
          case 13:
            q(J);
            a2 = b.memoizedState;
            if (null !== a2 && null !== a2.dehydrated) {
              if (null === b.alternate) throw Error(m(340));
              Ad();
            }
            a2 = b.flags;
            return a2 & 65536 ? (b.flags = a2 & -65537 | 128, b) : null;
          case 19:
            return q(J), null;
          case 4:
            return De(), null;
          case 10:
            return Md(b.type._context), null;
          case 22:
          case 23:
            return Fg(), null;
          case 24:
            return null;
          default:
            return null;
        }
      }
      var Hg = false, S = false, Ig = "function" === typeof WeakSet ? WeakSet : Set, T = null;
      function Jg(a2, b) {
        var c2 = a2.ref;
        if (null !== c2) if ("function" === typeof c2) try {
          c2(null);
        } catch (d) {
          U(a2, b, d);
        }
        else c2.current = null;
      }
      function Kg(a2, b, c2) {
        try {
          c2();
        } catch (d) {
          U(a2, b, d);
        }
      }
      var Lg = false;
      function Mg(a2, b) {
        Ha(a2.containerInfo);
        for (T = b; null !== T; ) if (a2 = T, b = a2.child, 0 !== (a2.subtreeFlags & 1028) && null !== b) b.return = a2, T = b;
        else for (; null !== T; ) {
          a2 = T;
          try {
            var c2 = a2.alternate;
            if (0 !== (a2.flags & 1024)) switch (a2.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (null !== c2) {
                  var d = c2.memoizedProps, e2 = c2.memoizedState, f = a2.stateNode, g = f.getSnapshotBeforeUpdate(a2.elementType === a2.type ? d : Fd(a2.type, d), e2);
                  f.__reactInternalSnapshotBeforeUpdate = g;
                }
                break;
              case 3:
                Ta && xb(a2.stateNode.containerInfo);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(m(163));
            }
          } catch (h) {
            U(a2, a2.return, h);
          }
          b = a2.sibling;
          if (null !== b) {
            b.return = a2.return;
            T = b;
            break;
          }
          T = a2.return;
        }
        c2 = Lg;
        Lg = false;
        return c2;
      }
      function Ng(a2, b, c2) {
        var d = b.updateQueue;
        d = null !== d ? d.lastEffect : null;
        if (null !== d) {
          var e2 = d = d.next;
          do {
            if ((e2.tag & a2) === a2) {
              var f = e2.destroy;
              e2.destroy = void 0;
              void 0 !== f && Kg(b, c2, f);
            }
            e2 = e2.next;
          } while (e2 !== d);
        }
      }
      function Og(a2, b) {
        b = b.updateQueue;
        b = null !== b ? b.lastEffect : null;
        if (null !== b) {
          var c2 = b = b.next;
          do {
            if ((c2.tag & a2) === a2) {
              var d = c2.create;
              c2.destroy = d();
            }
            c2 = c2.next;
          } while (c2 !== b);
        }
      }
      function Pg(a2) {
        var b = a2.ref;
        if (null !== b) {
          var c2 = a2.stateNode;
          switch (a2.tag) {
            case 5:
              a2 = Ea(c2);
              break;
            default:
              a2 = c2;
          }
          "function" === typeof b ? b(a2) : b.current = a2;
        }
      }
      function Qg(a2) {
        var b = a2.alternate;
        null !== b && (a2.alternate = null, Qg(b));
        a2.child = null;
        a2.deletions = null;
        a2.sibling = null;
        5 === a2.tag && (b = a2.stateNode, null !== b && Za(b));
        a2.stateNode = null;
        a2.return = null;
        a2.dependencies = null;
        a2.memoizedProps = null;
        a2.memoizedState = null;
        a2.pendingProps = null;
        a2.stateNode = null;
        a2.updateQueue = null;
      }
      function Rg(a2) {
        return 5 === a2.tag || 3 === a2.tag || 4 === a2.tag;
      }
      function Sg(a2) {
        a: for (; ; ) {
          for (; null === a2.sibling; ) {
            if (null === a2.return || Rg(a2.return)) return null;
            a2 = a2.return;
          }
          a2.sibling.return = a2.return;
          for (a2 = a2.sibling; 5 !== a2.tag && 6 !== a2.tag && 18 !== a2.tag; ) {
            if (a2.flags & 2) continue a;
            if (null === a2.child || 4 === a2.tag) continue a;
            else a2.child.return = a2, a2 = a2.child;
          }
          if (!(a2.flags & 2)) return a2.stateNode;
        }
      }
      function Tg(a2, b, c2) {
        var d = a2.tag;
        if (5 === d || 6 === d) a2 = a2.stateNode, b ? pb(c2, a2, b) : kb(c2, a2);
        else if (4 !== d && (a2 = a2.child, null !== a2)) for (Tg(a2, b, c2), a2 = a2.sibling; null !== a2; ) Tg(a2, b, c2), a2 = a2.sibling;
      }
      function Ug(a2, b, c2) {
        var d = a2.tag;
        if (5 === d || 6 === d) a2 = a2.stateNode, b ? ob(c2, a2, b) : jb(c2, a2);
        else if (4 !== d && (a2 = a2.child, null !== a2)) for (Ug(a2, b, c2), a2 = a2.sibling; null !== a2; ) Ug(a2, b, c2), a2 = a2.sibling;
      }
      var V = null, Vg = false;
      function Wg(a2, b, c2) {
        for (c2 = c2.child; null !== c2; ) Xg(a2, b, c2), c2 = c2.sibling;
      }
      function Xg(a2, b, c2) {
        if (Sc && "function" === typeof Sc.onCommitFiberUnmount) try {
          Sc.onCommitFiberUnmount(Rc, c2);
        } catch (h) {
        }
        switch (c2.tag) {
          case 5:
            S || Jg(c2, b);
          case 6:
            if (Ta) {
              var d = V, e2 = Vg;
              V = null;
              Wg(a2, b, c2);
              V = d;
              Vg = e2;
              null !== V && (Vg ? rb(V, c2.stateNode) : qb(V, c2.stateNode));
            } else Wg(a2, b, c2);
            break;
          case 18:
            Ta && null !== V && (Vg ? Yb(V, c2.stateNode) : Xb(V, c2.stateNode));
            break;
          case 4:
            Ta ? (d = V, e2 = Vg, V = c2.stateNode.containerInfo, Vg = true, Wg(a2, b, c2), V = d, Vg = e2) : (Ua && (d = c2.stateNode.containerInfo, e2 = zb(d), Cb(d, e2)), Wg(a2, b, c2));
            break;
          case 0:
          case 11:
          case 14:
          case 15:
            if (!S && (d = c2.updateQueue, null !== d && (d = d.lastEffect, null !== d))) {
              e2 = d = d.next;
              do {
                var f = e2, g = f.destroy;
                f = f.tag;
                void 0 !== g && (0 !== (f & 2) ? Kg(c2, b, g) : 0 !== (f & 4) && Kg(c2, b, g));
                e2 = e2.next;
              } while (e2 !== d);
            }
            Wg(a2, b, c2);
            break;
          case 1:
            if (!S && (Jg(c2, b), d = c2.stateNode, "function" === typeof d.componentWillUnmount)) try {
              d.props = c2.memoizedProps, d.state = c2.memoizedState, d.componentWillUnmount();
            } catch (h) {
              U(c2, b, h);
            }
            Wg(a2, b, c2);
            break;
          case 21:
            Wg(a2, b, c2);
            break;
          case 22:
            c2.mode & 1 ? (S = (d = S) || null !== c2.memoizedState, Wg(a2, b, c2), S = d) : Wg(a2, b, c2);
            break;
          default:
            Wg(
              a2,
              b,
              c2
            );
        }
      }
      function Yg(a2) {
        var b = a2.updateQueue;
        if (null !== b) {
          a2.updateQueue = null;
          var c2 = a2.stateNode;
          null === c2 && (c2 = a2.stateNode = new Ig());
          b.forEach(function(b2) {
            var d = Zg.bind(null, a2, b2);
            c2.has(b2) || (c2.add(b2), b2.then(d, d));
          });
        }
      }
      function $g(a2, b) {
        var c2 = b.deletions;
        if (null !== c2) for (var d = 0; d < c2.length; d++) {
          var e2 = c2[d];
          try {
            var f = a2, g = b;
            if (Ta) {
              var h = g;
              a: for (; null !== h; ) {
                switch (h.tag) {
                  case 5:
                    V = h.stateNode;
                    Vg = false;
                    break a;
                  case 3:
                    V = h.stateNode.containerInfo;
                    Vg = true;
                    break a;
                  case 4:
                    V = h.stateNode.containerInfo;
                    Vg = true;
                    break a;
                }
                h = h.return;
              }
              if (null === V) throw Error(m(160));
              Xg(f, g, e2);
              V = null;
              Vg = false;
            } else Xg(f, g, e2);
            var k = e2.alternate;
            null !== k && (k.return = null);
            e2.return = null;
          } catch (l) {
            U(e2, b, l);
          }
        }
        if (b.subtreeFlags & 12854) for (b = b.child; null !== b; ) ah(b, a2), b = b.sibling;
      }
      function ah(a2, b) {
        var c2 = a2.alternate, d = a2.flags;
        switch (a2.tag) {
          case 0:
          case 11:
          case 14:
          case 15:
            $g(b, a2);
            bh(a2);
            if (d & 4) {
              try {
                Ng(3, a2, a2.return), Og(3, a2);
              } catch (p) {
                U(a2, a2.return, p);
              }
              try {
                Ng(5, a2, a2.return);
              } catch (p) {
                U(a2, a2.return, p);
              }
            }
            break;
          case 1:
            $g(b, a2);
            bh(a2);
            d & 512 && null !== c2 && Jg(c2, c2.return);
            break;
          case 5:
            $g(b, a2);
            bh(a2);
            d & 512 && null !== c2 && Jg(c2, c2.return);
            if (Ta) {
              if (a2.flags & 32) {
                var e2 = a2.stateNode;
                try {
                  sb(e2);
                } catch (p) {
                  U(a2, a2.return, p);
                }
              }
              if (d & 4 && (e2 = a2.stateNode, null != e2)) {
                var f = a2.memoizedProps;
                c2 = null !== c2 ? c2.memoizedProps : f;
                d = a2.type;
                b = a2.updateQueue;
                a2.updateQueue = null;
                if (null !== b) try {
                  nb(e2, b, d, c2, f, a2);
                } catch (p) {
                  U(a2, a2.return, p);
                }
              }
            }
            break;
          case 6:
            $g(b, a2);
            bh(a2);
            if (d & 4 && Ta) {
              if (null === a2.stateNode) throw Error(m(162));
              e2 = a2.stateNode;
              f = a2.memoizedProps;
              c2 = null !== c2 ? c2.memoizedProps : f;
              try {
                lb(e2, c2, f);
              } catch (p) {
                U(a2, a2.return, p);
              }
            }
            break;
          case 3:
            $g(b, a2);
            bh(a2);
            if (d & 4) {
              if (Ta && Va && null !== c2 && c2.memoizedState.isDehydrated) try {
                Vb(b.containerInfo);
              } catch (p) {
                U(a2, a2.return, p);
              }
              if (Ua) {
                e2 = b.containerInfo;
                f = b.pendingChildren;
                try {
                  Cb(e2, f);
                } catch (p) {
                  U(a2, a2.return, p);
                }
              }
            }
            break;
          case 4:
            $g(
              b,
              a2
            );
            bh(a2);
            if (d & 4 && Ua) {
              f = a2.stateNode;
              e2 = f.containerInfo;
              f = f.pendingChildren;
              try {
                Cb(e2, f);
              } catch (p) {
                U(a2, a2.return, p);
              }
            }
            break;
          case 13:
            $g(b, a2);
            bh(a2);
            e2 = a2.child;
            e2.flags & 8192 && (f = null !== e2.memoizedState, e2.stateNode.isHidden = f, !f || null !== e2.alternate && null !== e2.alternate.memoizedState || (ch = D()));
            d & 4 && Yg(a2);
            break;
          case 22:
            var g = null !== c2 && null !== c2.memoizedState;
            a2.mode & 1 ? (S = (c2 = S) || g, $g(b, a2), S = c2) : $g(b, a2);
            bh(a2);
            if (d & 8192) {
              c2 = null !== a2.memoizedState;
              if ((a2.stateNode.isHidden = c2) && !g && 0 !== (a2.mode & 1)) for (T = a2, d = a2.child; null !== d; ) {
                for (b = T = d; null !== T; ) {
                  g = T;
                  var h = g.child;
                  switch (g.tag) {
                    case 0:
                    case 11:
                    case 14:
                    case 15:
                      Ng(4, g, g.return);
                      break;
                    case 1:
                      Jg(g, g.return);
                      var k = g.stateNode;
                      if ("function" === typeof k.componentWillUnmount) {
                        var l = g, n2 = g.return;
                        try {
                          var t3 = l;
                          k.props = t3.memoizedProps;
                          k.state = t3.memoizedState;
                          k.componentWillUnmount();
                        } catch (p) {
                          U(l, n2, p);
                        }
                      }
                      break;
                    case 5:
                      Jg(g, g.return);
                      break;
                    case 22:
                      if (null !== g.memoizedState) {
                        dh(b);
                        continue;
                      }
                  }
                  null !== h ? (h.return = g, T = h) : dh(b);
                }
                d = d.sibling;
              }
              if (Ta) {
                a: if (d = null, Ta) for (b = a2; ; ) {
                  if (5 === b.tag) {
                    if (null === d) {
                      d = b;
                      try {
                        e2 = b.stateNode, c2 ? tb(e2) : vb(b.stateNode, b.memoizedProps);
                      } catch (p) {
                        U(a2, a2.return, p);
                      }
                    }
                  } else if (6 === b.tag) {
                    if (null === d) try {
                      f = b.stateNode, c2 ? ub(f) : wb(f, b.memoizedProps);
                    } catch (p) {
                      U(a2, a2.return, p);
                    }
                  } else if ((22 !== b.tag && 23 !== b.tag || null === b.memoizedState || b === a2) && null !== b.child) {
                    b.child.return = b;
                    b = b.child;
                    continue;
                  }
                  if (b === a2) break a;
                  for (; null === b.sibling; ) {
                    if (null === b.return || b.return === a2) break a;
                    d === b && (d = null);
                    b = b.return;
                  }
                  d === b && (d = null);
                  b.sibling.return = b.return;
                  b = b.sibling;
                }
              }
            }
            break;
          case 19:
            $g(b, a2);
            bh(a2);
            d & 4 && Yg(a2);
            break;
          case 21:
            break;
          default:
            $g(b, a2), bh(a2);
        }
      }
      function bh(a2) {
        var b = a2.flags;
        if (b & 2) {
          try {
            if (Ta) {
              b: {
                for (var c2 = a2.return; null !== c2; ) {
                  if (Rg(c2)) {
                    var d = c2;
                    break b;
                  }
                  c2 = c2.return;
                }
                throw Error(m(160));
              }
              switch (d.tag) {
                case 5:
                  var e2 = d.stateNode;
                  d.flags & 32 && (sb(e2), d.flags &= -33);
                  var f = Sg(a2);
                  Ug(a2, f, e2);
                  break;
                case 3:
                case 4:
                  var g = d.stateNode.containerInfo, h = Sg(a2);
                  Tg(a2, h, g);
                  break;
                default:
                  throw Error(m(161));
              }
            }
          } catch (k) {
            U(a2, a2.return, k);
          }
          a2.flags &= -3;
        }
        b & 4096 && (a2.flags &= -4097);
      }
      function eh(a2, b, c2) {
        T = a2;
        fh(a2, b, c2);
      }
      function fh(a2, b, c2) {
        for (var d = 0 !== (a2.mode & 1); null !== T; ) {
          var e2 = T, f = e2.child;
          if (22 === e2.tag && d) {
            var g = null !== e2.memoizedState || Hg;
            if (!g) {
              var h = e2.alternate, k = null !== h && null !== h.memoizedState || S;
              h = Hg;
              var l = S;
              Hg = g;
              if ((S = k) && !l) for (T = e2; null !== T; ) g = T, k = g.child, 22 === g.tag && null !== g.memoizedState ? gh(e2) : null !== k ? (k.return = g, T = k) : gh(e2);
              for (; null !== f; ) T = f, fh(f, b, c2), f = f.sibling;
              T = e2;
              Hg = h;
              S = l;
            }
            hh(a2, b, c2);
          } else 0 !== (e2.subtreeFlags & 8772) && null !== f ? (f.return = e2, T = f) : hh(a2, b, c2);
        }
      }
      function hh(a2) {
        for (; null !== T; ) {
          var b = T;
          if (0 !== (b.flags & 8772)) {
            var c2 = b.alternate;
            try {
              if (0 !== (b.flags & 8772)) switch (b.tag) {
                case 0:
                case 11:
                case 15:
                  S || Og(5, b);
                  break;
                case 1:
                  var d = b.stateNode;
                  if (b.flags & 4 && !S) if (null === c2) d.componentDidMount();
                  else {
                    var e2 = b.elementType === b.type ? c2.memoizedProps : Fd(b.type, c2.memoizedProps);
                    d.componentDidUpdate(e2, c2.memoizedState, d.__reactInternalSnapshotBeforeUpdate);
                  }
                  var f = b.updateQueue;
                  null !== f && ce(b, f, d);
                  break;
                case 3:
                  var g = b.updateQueue;
                  if (null !== g) {
                    c2 = null;
                    if (null !== b.child) switch (b.child.tag) {
                      case 5:
                        c2 = Ea(b.child.stateNode);
                        break;
                      case 1:
                        c2 = b.child.stateNode;
                    }
                    ce(b, g, c2);
                  }
                  break;
                case 5:
                  var h = b.stateNode;
                  null === c2 && b.flags & 4 && mb(h, b.type, b.memoizedProps, b);
                  break;
                case 6:
                  break;
                case 4:
                  break;
                case 12:
                  break;
                case 13:
                  if (Va && null === b.memoizedState) {
                    var k = b.alternate;
                    if (null !== k) {
                      var l = k.memoizedState;
                      if (null !== l) {
                        var n2 = l.dehydrated;
                        null !== n2 && Wb(n2);
                      }
                    }
                  }
                  break;
                case 19:
                case 17:
                case 21:
                case 22:
                case 23:
                case 25:
                  break;
                default:
                  throw Error(m(163));
              }
              S || b.flags & 512 && Pg(b);
            } catch (t3) {
              U(b, b.return, t3);
            }
          }
          if (b === a2) {
            T = null;
            break;
          }
          c2 = b.sibling;
          if (null !== c2) {
            c2.return = b.return;
            T = c2;
            break;
          }
          T = b.return;
        }
      }
      function dh(a2) {
        for (; null !== T; ) {
          var b = T;
          if (b === a2) {
            T = null;
            break;
          }
          var c2 = b.sibling;
          if (null !== c2) {
            c2.return = b.return;
            T = c2;
            break;
          }
          T = b.return;
        }
      }
      function gh(a2) {
        for (; null !== T; ) {
          var b = T;
          try {
            switch (b.tag) {
              case 0:
              case 11:
              case 15:
                var c2 = b.return;
                try {
                  Og(4, b);
                } catch (k) {
                  U(b, c2, k);
                }
                break;
              case 1:
                var d = b.stateNode;
                if ("function" === typeof d.componentDidMount) {
                  var e2 = b.return;
                  try {
                    d.componentDidMount();
                  } catch (k) {
                    U(b, e2, k);
                  }
                }
                var f = b.return;
                try {
                  Pg(b);
                } catch (k) {
                  U(b, f, k);
                }
                break;
              case 5:
                var g = b.return;
                try {
                  Pg(b);
                } catch (k) {
                  U(b, g, k);
                }
            }
          } catch (k) {
            U(b, b.return, k);
          }
          if (b === a2) {
            T = null;
            break;
          }
          var h = b.sibling;
          if (null !== h) {
            h.return = b.return;
            T = h;
            break;
          }
          T = b.return;
        }
      }
      var ih = 0, jh = 1, kh = 2, lh = 3, mh = 4;
      if ("function" === typeof Symbol && Symbol.for) {
        var nh = Symbol.for;
        ih = nh("selector.component");
        jh = nh("selector.has_pseudo_class");
        kh = nh("selector.role");
        lh = nh("selector.test_id");
        mh = nh("selector.text");
      }
      function oh(a2) {
        var b = Wa(a2);
        if (null != b) {
          if ("string" !== typeof b.memoizedProps["data-testname"]) throw Error(m(364));
          return b;
        }
        a2 = cb(a2);
        if (null === a2) throw Error(m(362));
        return a2.stateNode.current;
      }
      function ph(a2, b) {
        switch (b.$$typeof) {
          case ih:
            if (a2.type === b.value) return true;
            break;
          case jh:
            a: {
              b = b.value;
              a2 = [a2, 0];
              for (var c2 = 0; c2 < a2.length; ) {
                var d = a2[c2++], e2 = a2[c2++], f = b[e2];
                if (5 !== d.tag || !fb(d)) {
                  for (; null != f && ph(d, f); ) e2++, f = b[e2];
                  if (e2 === b.length) {
                    b = true;
                    break a;
                  } else for (d = d.child; null !== d; ) a2.push(d, e2), d = d.sibling;
                }
              }
              b = false;
            }
            return b;
          case kh:
            if (5 === a2.tag && gb(a2.stateNode, b.value)) return true;
            break;
          case mh:
            if (5 === a2.tag || 6 === a2.tag) {
              if (a2 = eb(a2), null !== a2 && 0 <= a2.indexOf(b.value)) return true;
            }
            break;
          case lh:
            if (5 === a2.tag && (a2 = a2.memoizedProps["data-testname"], "string" === typeof a2 && a2.toLowerCase() === b.value.toLowerCase())) return true;
            break;
          default:
            throw Error(m(365));
        }
        return false;
      }
      function qh(a2) {
        switch (a2.$$typeof) {
          case ih:
            return "<" + (ua(a2.value) || "Unknown") + ">";
          case jh:
            return ":has(" + (qh(a2) || "") + ")";
          case kh:
            return '[role="' + a2.value + '"]';
          case mh:
            return '"' + a2.value + '"';
          case lh:
            return '[data-testname="' + a2.value + '"]';
          default:
            throw Error(m(365));
        }
      }
      function rh(a2, b) {
        var c2 = [];
        a2 = [a2, 0];
        for (var d = 0; d < a2.length; ) {
          var e2 = a2[d++], f = a2[d++], g = b[f];
          if (5 !== e2.tag || !fb(e2)) {
            for (; null != g && ph(e2, g); ) f++, g = b[f];
            if (f === b.length) c2.push(e2);
            else for (e2 = e2.child; null !== e2; ) a2.push(e2, f), e2 = e2.sibling;
          }
        }
        return c2;
      }
      function sh(a2, b) {
        if (!bb) throw Error(m(363));
        a2 = oh(a2);
        a2 = rh(a2, b);
        b = [];
        a2 = Array.from(a2);
        for (var c2 = 0; c2 < a2.length; ) {
          var d = a2[c2++];
          if (5 === d.tag) fb(d) || b.push(d.stateNode);
          else for (d = d.child; null !== d; ) a2.push(d), d = d.sibling;
        }
        return b;
      }
      var th = Math.ceil, uh = da.ReactCurrentDispatcher, vh = da.ReactCurrentOwner, W = da.ReactCurrentBatchConfig, H = 0, O = null, X = null, Y = 0, ag = 0, $f = ic(0), R = 0, wh = null, be = 0, xh = 0, yh = 0, zh = null, Ah = null, ch = 0, Eg = Infinity, Bh = null;
      function Ch() {
        Eg = D() + 500;
      }
      var Kf = false, Lf = null, Nf = null, Dh = false, Eh = null, Fh = 0, Gh = 0, Hh = null, Ih = -1, Jh = 0;
      function I() {
        return 0 !== (H & 6) ? D() : -1 !== Ih ? Ih : Ih = D();
      }
      function fe(a2) {
        if (0 === (a2.mode & 1)) return 1;
        if (0 !== (H & 2) && 0 !== Y) return Y & -Y;
        if (null !== Cd.transition) return 0 === Jh && (Jh = Dc()), Jh;
        a2 = C;
        return 0 !== a2 ? a2 : Ya();
      }
      function ge(a2, b, c2, d) {
        if (50 < Gh) throw Gh = 0, Hh = null, Error(m(185));
        Fc(a2, c2, d);
        if (0 === (H & 2) || a2 !== O) a2 === O && (0 === (H & 2) && (xh |= c2), 4 === R && Kh(a2, Y)), Lh(a2, d), 1 === c2 && 0 === H && 0 === (b.mode & 1) && (Ch(), Xc && ad());
      }
      function Lh(a2, b) {
        var c2 = a2.callbackNode;
        Bc(a2, b);
        var d = zc(a2, a2 === O ? Y : 0);
        if (0 === d) null !== c2 && Kc(c2), a2.callbackNode = null, a2.callbackPriority = 0;
        else if (b = d & -d, a2.callbackPriority !== b) {
          null != c2 && Kc(c2);
          if (1 === b) 0 === a2.tag ? $c(Mh.bind(null, a2)) : Zc(Mh.bind(null, a2)), $a ? ab(function() {
            0 === (H & 6) && ad();
          }) : Jc(Nc, ad), c2 = null;
          else {
            switch (Ic(d)) {
              case 1:
                c2 = Nc;
                break;
              case 4:
                c2 = Oc;
                break;
              case 16:
                c2 = Pc;
                break;
              case 536870912:
                c2 = Qc;
                break;
              default:
                c2 = Pc;
            }
            c2 = Nh(c2, Oh.bind(null, a2));
          }
          a2.callbackPriority = b;
          a2.callbackNode = c2;
        }
      }
      function Oh(a2, b) {
        Ih = -1;
        Jh = 0;
        if (0 !== (H & 6)) throw Error(m(327));
        var c2 = a2.callbackNode;
        if (Ph() && a2.callbackNode !== c2) return null;
        var d = zc(a2, a2 === O ? Y : 0);
        if (0 === d) return null;
        if (0 !== (d & 30) || 0 !== (d & a2.expiredLanes) || b) b = Qh(a2, d);
        else {
          b = d;
          var e2 = H;
          H |= 2;
          var f = Rh();
          if (O !== a2 || Y !== b) Bh = null, Ch(), Sh(a2, b);
          do
            try {
              Th();
              break;
            } catch (h) {
              Uh(a2, h);
            }
          while (1);
          Kd();
          uh.current = f;
          H = e2;
          null !== X ? b = 0 : (O = null, Y = 0, b = R);
        }
        if (0 !== b) {
          2 === b && (e2 = Cc(a2), 0 !== e2 && (d = e2, b = Vh(a2, e2)));
          if (1 === b) throw c2 = wh, Sh(a2, 0), Kh(a2, d), Lh(a2, D()), c2;
          if (6 === b) Kh(a2, d);
          else {
            e2 = a2.current.alternate;
            if (0 === (d & 30) && !Wh(e2) && (b = Qh(a2, d), 2 === b && (f = Cc(a2), 0 !== f && (d = f, b = Vh(a2, f))), 1 === b)) throw c2 = wh, Sh(a2, 0), Kh(a2, d), Lh(a2, D()), c2;
            a2.finishedWork = e2;
            a2.finishedLanes = d;
            switch (b) {
              case 0:
              case 1:
                throw Error(m(345));
              case 2:
                Xh(a2, Ah, Bh);
                break;
              case 3:
                Kh(a2, d);
                if ((d & 130023424) === d && (b = ch + 500 - D(), 10 < b)) {
                  if (0 !== zc(a2, 0)) break;
                  e2 = a2.suspendedLanes;
                  if ((e2 & d) !== d) {
                    I();
                    a2.pingedLanes |= a2.suspendedLanes & e2;
                    break;
                  }
                  a2.timeoutHandle = Pa(Xh.bind(null, a2, Ah, Bh), b);
                  break;
                }
                Xh(a2, Ah, Bh);
                break;
              case 4:
                Kh(a2, d);
                if ((d & 4194240) === d) break;
                b = a2.eventTimes;
                for (e2 = -1; 0 < d; ) {
                  var g = 31 - tc(d);
                  f = 1 << g;
                  g = b[g];
                  g > e2 && (e2 = g);
                  d &= ~f;
                }
                d = e2;
                d = D() - d;
                d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * th(d / 1960)) - d;
                if (10 < d) {
                  a2.timeoutHandle = Pa(Xh.bind(null, a2, Ah, Bh), d);
                  break;
                }
                Xh(a2, Ah, Bh);
                break;
              case 5:
                Xh(a2, Ah, Bh);
                break;
              default:
                throw Error(m(329));
            }
          }
        }
        Lh(a2, D());
        return a2.callbackNode === c2 ? Oh.bind(null, a2) : null;
      }
      function Vh(a2, b) {
        var c2 = zh;
        a2.current.memoizedState.isDehydrated && (Sh(a2, b).flags |= 256);
        a2 = Qh(a2, b);
        2 !== a2 && (b = Ah, Ah = c2, null !== b && Dg(b));
        return a2;
      }
      function Dg(a2) {
        null === Ah ? Ah = a2 : Ah.push.apply(Ah, a2);
      }
      function Wh(a2) {
        for (var b = a2; ; ) {
          if (b.flags & 16384) {
            var c2 = b.updateQueue;
            if (null !== c2 && (c2 = c2.stores, null !== c2)) for (var d = 0; d < c2.length; d++) {
              var e2 = c2[d], f = e2.getSnapshot;
              e2 = e2.value;
              try {
                if (!Vc(f(), e2)) return false;
              } catch (g) {
                return false;
              }
            }
          }
          c2 = b.child;
          if (b.subtreeFlags & 16384 && null !== c2) c2.return = b, b = c2;
          else {
            if (b === a2) break;
            for (; null === b.sibling; ) {
              if (null === b.return || b.return === a2) return true;
              b = b.return;
            }
            b.sibling.return = b.return;
            b = b.sibling;
          }
        }
        return true;
      }
      function Kh(a2, b) {
        b &= ~yh;
        b &= ~xh;
        a2.suspendedLanes |= b;
        a2.pingedLanes &= ~b;
        for (a2 = a2.expirationTimes; 0 < b; ) {
          var c2 = 31 - tc(b), d = 1 << c2;
          a2[c2] = -1;
          b &= ~d;
        }
      }
      function Mh(a2) {
        if (0 !== (H & 6)) throw Error(m(327));
        Ph();
        var b = zc(a2, 0);
        if (0 === (b & 1)) return Lh(a2, D()), null;
        var c2 = Qh(a2, b);
        if (0 !== a2.tag && 2 === c2) {
          var d = Cc(a2);
          0 !== d && (b = d, c2 = Vh(a2, d));
        }
        if (1 === c2) throw c2 = wh, Sh(a2, 0), Kh(a2, b), Lh(a2, D()), c2;
        if (6 === c2) throw Error(m(345));
        a2.finishedWork = a2.current.alternate;
        a2.finishedLanes = b;
        Xh(a2, Ah, Bh);
        Lh(a2, D());
        return null;
      }
      function Yh(a2) {
        null !== Eh && 0 === Eh.tag && 0 === (H & 6) && Ph();
        var b = H;
        H |= 1;
        var c2 = W.transition, d = C;
        try {
          if (W.transition = null, C = 1, a2) return a2();
        } finally {
          C = d, W.transition = c2, H = b, 0 === (H & 6) && ad();
        }
      }
      function Fg() {
        ag = $f.current;
        q($f);
      }
      function Sh(a2, b) {
        a2.finishedWork = null;
        a2.finishedLanes = 0;
        var c2 = a2.timeoutHandle;
        c2 !== Ra && (a2.timeoutHandle = Ra, Qa(c2));
        if (null !== X) for (c2 = X.return; null !== c2; ) {
          var d = c2;
          nd(d);
          switch (d.tag) {
            case 1:
              d = d.type.childContextTypes;
              null !== d && void 0 !== d && mc();
              break;
            case 3:
              De();
              q(z);
              q(x);
              Ie();
              break;
            case 5:
              Fe(d);
              break;
            case 4:
              De();
              break;
            case 13:
              q(J);
              break;
            case 19:
              q(J);
              break;
            case 10:
              Md(d.type._context);
              break;
            case 22:
            case 23:
              Fg();
          }
          c2 = c2.return;
        }
        O = a2;
        X = a2 = qe(a2.current, null);
        Y = ag = b;
        R = 0;
        wh = null;
        yh = xh = be = 0;
        Ah = zh = null;
        if (null !== Qd) {
          for (b = 0; b < Qd.length; b++) if (c2 = Qd[b], d = c2.interleaved, null !== d) {
            c2.interleaved = null;
            var e2 = d.next, f = c2.pending;
            if (null !== f) {
              var g = f.next;
              f.next = e2;
              d.next = g;
            }
            c2.pending = d;
          }
          Qd = null;
        }
        return a2;
      }
      function Uh(a2, b) {
        do {
          var c2 = X;
          try {
            Kd();
            Je.current = Ve;
            if (Me) {
              for (var d = K.memoizedState; null !== d; ) {
                var e2 = d.queue;
                null !== e2 && (e2.pending = null);
                d = d.next;
              }
              Me = false;
            }
            Le = 0;
            M = L = K = null;
            Ne = false;
            Oe = 0;
            vh.current = null;
            if (null === c2 || null === c2.return) {
              R = 1;
              wh = b;
              X = null;
              break;
            }
            a: {
              var f = a2, g = c2.return, h = c2, k = b;
              b = Y;
              h.flags |= 32768;
              if (null !== k && "object" === typeof k && "function" === typeof k.then) {
                var l = k, n2 = h, t3 = n2.tag;
                if (0 === (n2.mode & 1) && (0 === t3 || 11 === t3 || 15 === t3)) {
                  var p = n2.alternate;
                  p ? (n2.updateQueue = p.updateQueue, n2.memoizedState = p.memoizedState, n2.lanes = p.lanes) : (n2.updateQueue = null, n2.memoizedState = null);
                }
                var B = Qf(g);
                if (null !== B) {
                  B.flags &= -257;
                  Rf(B, g, h, f, b);
                  B.mode & 1 && Of(f, l, b);
                  b = B;
                  k = l;
                  var w = b.updateQueue;
                  if (null === w) {
                    var Z = /* @__PURE__ */ new Set();
                    Z.add(k);
                    b.updateQueue = Z;
                  } else w.add(k);
                  break a;
                } else {
                  if (0 === (b & 1)) {
                    Of(f, l, b);
                    og();
                    break a;
                  }
                  k = Error(m(426));
                }
              } else if (F && h.mode & 1) {
                var za = Qf(g);
                if (null !== za) {
                  0 === (za.flags & 65536) && (za.flags |= 256);
                  Rf(za, g, h, f, b);
                  Bd(Ff(k, h));
                  break a;
                }
              }
              f = k = Ff(k, h);
              4 !== R && (R = 2);
              null === zh ? zh = [f] : zh.push(f);
              f = g;
              do {
                switch (f.tag) {
                  case 3:
                    f.flags |= 65536;
                    b &= -b;
                    f.lanes |= b;
                    var E2 = Jf(f, k, b);
                    $d(f, E2);
                    break a;
                  case 1:
                    h = k;
                    var r2 = f.type, u = f.stateNode;
                    if (0 === (f.flags & 128) && ("function" === typeof r2.getDerivedStateFromError || null !== u && "function" === typeof u.componentDidCatch && (null === Nf || !Nf.has(u)))) {
                      f.flags |= 65536;
                      b &= -b;
                      f.lanes |= b;
                      var Db = Mf(f, h, b);
                      $d(f, Db);
                      break a;
                    }
                }
                f = f.return;
              } while (null !== f);
            }
            Zh(c2);
          } catch (qc) {
            b = qc;
            X === c2 && null !== c2 && (X = c2 = c2.return);
            continue;
          }
          break;
        } while (1);
      }
      function Rh() {
        var a2 = uh.current;
        uh.current = Ve;
        return null === a2 ? Ve : a2;
      }
      function og() {
        if (0 === R || 3 === R || 2 === R) R = 4;
        null === O || 0 === (be & 268435455) && 0 === (xh & 268435455) || Kh(O, Y);
      }
      function Qh(a2, b) {
        var c2 = H;
        H |= 2;
        var d = Rh();
        if (O !== a2 || Y !== b) Bh = null, Sh(a2, b);
        do
          try {
            $h();
            break;
          } catch (e2) {
            Uh(a2, e2);
          }
        while (1);
        Kd();
        H = c2;
        uh.current = d;
        if (null !== X) throw Error(m(261));
        O = null;
        Y = 0;
        return R;
      }
      function $h() {
        for (; null !== X; ) ai(X);
      }
      function Th() {
        for (; null !== X && !Lc(); ) ai(X);
      }
      function ai(a2) {
        var b = bi(a2.alternate, a2, ag);
        a2.memoizedProps = a2.pendingProps;
        null === b ? Zh(a2) : X = b;
        vh.current = null;
      }
      function Zh(a2) {
        var b = a2;
        do {
          var c2 = b.alternate;
          a2 = b.return;
          if (0 === (b.flags & 32768)) {
            if (c2 = Cg(c2, b, ag), null !== c2) {
              X = c2;
              return;
            }
          } else {
            c2 = Gg(c2, b);
            if (null !== c2) {
              c2.flags &= 32767;
              X = c2;
              return;
            }
            if (null !== a2) a2.flags |= 32768, a2.subtreeFlags = 0, a2.deletions = null;
            else {
              R = 6;
              X = null;
              return;
            }
          }
          b = b.sibling;
          if (null !== b) {
            X = b;
            return;
          }
          X = b = a2;
        } while (null !== b);
        0 === R && (R = 5);
      }
      function Xh(a2, b, c2) {
        var d = C, e2 = W.transition;
        try {
          W.transition = null, C = 1, ci(a2, b, c2, d);
        } finally {
          W.transition = e2, C = d;
        }
        return null;
      }
      function ci(a2, b, c2, d) {
        do
          Ph();
        while (null !== Eh);
        if (0 !== (H & 6)) throw Error(m(327));
        c2 = a2.finishedWork;
        var e2 = a2.finishedLanes;
        if (null === c2) return null;
        a2.finishedWork = null;
        a2.finishedLanes = 0;
        if (c2 === a2.current) throw Error(m(177));
        a2.callbackNode = null;
        a2.callbackPriority = 0;
        var f = c2.lanes | c2.childLanes;
        Gc(a2, f);
        a2 === O && (X = O = null, Y = 0);
        0 === (c2.subtreeFlags & 2064) && 0 === (c2.flags & 2064) || Dh || (Dh = true, Nh(Pc, function() {
          Ph();
          return null;
        }));
        f = 0 !== (c2.flags & 15990);
        if (0 !== (c2.subtreeFlags & 15990) || f) {
          f = W.transition;
          W.transition = null;
          var g = C;
          C = 1;
          var h = H;
          H |= 4;
          vh.current = null;
          Mg(a2, c2);
          ah(c2, a2);
          Ia(a2.containerInfo);
          a2.current = c2;
          eh(c2, a2, e2);
          Mc();
          H = h;
          C = g;
          W.transition = f;
        } else a2.current = c2;
        Dh && (Dh = false, Eh = a2, Fh = e2);
        f = a2.pendingLanes;
        0 === f && (Nf = null);
        Tc(c2.stateNode, d);
        Lh(a2, D());
        if (null !== b) for (d = a2.onRecoverableError, c2 = 0; c2 < b.length; c2++) e2 = b[c2], d(e2.value, { componentStack: e2.stack, digest: e2.digest });
        if (Kf) throw Kf = false, a2 = Lf, Lf = null, a2;
        0 !== (Fh & 1) && 0 !== a2.tag && Ph();
        f = a2.pendingLanes;
        0 !== (f & 1) ? a2 === Hh ? Gh++ : (Gh = 0, Hh = a2) : Gh = 0;
        ad();
        return null;
      }
      function Ph() {
        if (null !== Eh) {
          var a2 = Ic(Fh), b = W.transition, c2 = C;
          try {
            W.transition = null;
            C = 16 > a2 ? 16 : a2;
            if (null === Eh) var d = false;
            else {
              a2 = Eh;
              Eh = null;
              Fh = 0;
              if (0 !== (H & 6)) throw Error(m(331));
              var e2 = H;
              H |= 4;
              for (T = a2.current; null !== T; ) {
                var f = T, g = f.child;
                if (0 !== (T.flags & 16)) {
                  var h = f.deletions;
                  if (null !== h) {
                    for (var k = 0; k < h.length; k++) {
                      var l = h[k];
                      for (T = l; null !== T; ) {
                        var n2 = T;
                        switch (n2.tag) {
                          case 0:
                          case 11:
                          case 15:
                            Ng(8, n2, f);
                        }
                        var t3 = n2.child;
                        if (null !== t3) t3.return = n2, T = t3;
                        else for (; null !== T; ) {
                          n2 = T;
                          var p = n2.sibling, B = n2.return;
                          Qg(n2);
                          if (n2 === l) {
                            T = null;
                            break;
                          }
                          if (null !== p) {
                            p.return = B;
                            T = p;
                            break;
                          }
                          T = B;
                        }
                      }
                    }
                    var w = f.alternate;
                    if (null !== w) {
                      var Z = w.child;
                      if (null !== Z) {
                        w.child = null;
                        do {
                          var za = Z.sibling;
                          Z.sibling = null;
                          Z = za;
                        } while (null !== Z);
                      }
                    }
                    T = f;
                  }
                }
                if (0 !== (f.subtreeFlags & 2064) && null !== g) g.return = f, T = g;
                else b: for (; null !== T; ) {
                  f = T;
                  if (0 !== (f.flags & 2048)) switch (f.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Ng(9, f, f.return);
                  }
                  var E2 = f.sibling;
                  if (null !== E2) {
                    E2.return = f.return;
                    T = E2;
                    break b;
                  }
                  T = f.return;
                }
              }
              var r2 = a2.current;
              for (T = r2; null !== T; ) {
                g = T;
                var u = g.child;
                if (0 !== (g.subtreeFlags & 2064) && null !== u) u.return = g, T = u;
                else b: for (g = r2; null !== T; ) {
                  h = T;
                  if (0 !== (h.flags & 2048)) try {
                    switch (h.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Og(9, h);
                    }
                  } catch (qc) {
                    U(h, h.return, qc);
                  }
                  if (h === g) {
                    T = null;
                    break b;
                  }
                  var Db = h.sibling;
                  if (null !== Db) {
                    Db.return = h.return;
                    T = Db;
                    break b;
                  }
                  T = h.return;
                }
              }
              H = e2;
              ad();
              if (Sc && "function" === typeof Sc.onPostCommitFiberRoot) try {
                Sc.onPostCommitFiberRoot(Rc, a2);
              } catch (qc) {
              }
              d = true;
            }
            return d;
          } finally {
            C = c2, W.transition = b;
          }
        }
        return false;
      }
      function di(a2, b, c2) {
        b = Ff(c2, b);
        b = Jf(a2, b, 1);
        a2 = Yd(a2, b, 1);
        b = I();
        null !== a2 && (Fc(a2, 1, b), Lh(a2, b));
      }
      function U(a2, b, c2) {
        if (3 === a2.tag) di(a2, a2, c2);
        else for (; null !== b; ) {
          if (3 === b.tag) {
            di(b, a2, c2);
            break;
          } else if (1 === b.tag) {
            var d = b.stateNode;
            if ("function" === typeof b.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Nf || !Nf.has(d))) {
              a2 = Ff(c2, a2);
              a2 = Mf(b, a2, 1);
              b = Yd(b, a2, 1);
              a2 = I();
              null !== b && (Fc(b, 1, a2), Lh(b, a2));
              break;
            }
          }
          b = b.return;
        }
      }
      function Pf(a2, b, c2) {
        var d = a2.pingCache;
        null !== d && d.delete(b);
        b = I();
        a2.pingedLanes |= a2.suspendedLanes & c2;
        O === a2 && (Y & c2) === c2 && (4 === R || 3 === R && (Y & 130023424) === Y && 500 > D() - ch ? Sh(a2, 0) : yh |= c2);
        Lh(a2, b);
      }
      function ei(a2, b) {
        0 === b && (0 === (a2.mode & 1) ? b = 1 : (b = xc, xc <<= 1, 0 === (xc & 130023424) && (xc = 4194304)));
        var c2 = I();
        a2 = Td(a2, b);
        null !== a2 && (Fc(a2, b, c2), Lh(a2, c2));
      }
      function pg(a2) {
        var b = a2.memoizedState, c2 = 0;
        null !== b && (c2 = b.retryLane);
        ei(a2, c2);
      }
      function Zg(a2, b) {
        var c2 = 0;
        switch (a2.tag) {
          case 13:
            var d = a2.stateNode;
            var e2 = a2.memoizedState;
            null !== e2 && (c2 = e2.retryLane);
            break;
          case 19:
            d = a2.stateNode;
            break;
          default:
            throw Error(m(314));
        }
        null !== d && d.delete(b);
        ei(a2, c2);
      }
      var bi;
      bi = function(a2, b, c2) {
        if (null !== a2) if (a2.memoizedProps !== b.pendingProps || z.current) G = true;
        else {
          if (0 === (a2.lanes & c2) && 0 === (b.flags & 128)) return G = false, tg(a2, b, c2);
          G = 0 !== (a2.flags & 131072) ? true : false;
        }
        else G = false, F && 0 !== (b.flags & 1048576) && ld(b, ed, b.index);
        b.lanes = 0;
        switch (b.tag) {
          case 2:
            var d = b.type;
            dg(a2, b);
            a2 = b.pendingProps;
            var e2 = lc(b, x.current);
            Od(b, c2);
            e2 = Re(null, b, d, a2, e2, c2);
            var f = We();
            b.flags |= 1;
            "object" === typeof e2 && null !== e2 && "function" === typeof e2.render && void 0 === e2.$$typeof ? (b.tag = 1, b.memoizedState = null, b.updateQueue = null, A(d) ? (f = true, pc(b)) : f = false, b.memoizedState = null !== e2.state && void 0 !== e2.state ? e2.state : null, Vd(b), e2.updater = he, b.stateNode = e2, e2._reactInternals = b, le(b, d, a2, c2), b = eg(null, b, d, true, f, c2)) : (b.tag = 0, F && f && md(b), P(null, b, e2, c2), b = b.child);
            return b;
          case 16:
            d = b.elementType;
            a: {
              dg(a2, b);
              a2 = b.pendingProps;
              e2 = d._init;
              d = e2(d._payload);
              b.type = d;
              e2 = b.tag = fi(d);
              a2 = Fd(d, a2);
              switch (e2) {
                case 0:
                  b = Yf(null, b, d, a2, c2);
                  break a;
                case 1:
                  b = cg(null, b, d, a2, c2);
                  break a;
                case 11:
                  b = Tf(null, b, d, a2, c2);
                  break a;
                case 14:
                  b = Vf(null, b, d, Fd(d.type, a2), c2);
                  break a;
              }
              throw Error(m(
                306,
                d,
                ""
              ));
            }
            return b;
          case 0:
            return d = b.type, e2 = b.pendingProps, e2 = b.elementType === d ? e2 : Fd(d, e2), Yf(a2, b, d, e2, c2);
          case 1:
            return d = b.type, e2 = b.pendingProps, e2 = b.elementType === d ? e2 : Fd(d, e2), cg(a2, b, d, e2, c2);
          case 3:
            a: {
              fg(b);
              if (null === a2) throw Error(m(387));
              d = b.pendingProps;
              f = b.memoizedState;
              e2 = f.element;
              Wd(a2, b);
              ae(b, d, null, c2);
              var g = b.memoizedState;
              d = g.element;
              if (Va && f.isDehydrated) if (f = { element: d, isDehydrated: false, cache: g.cache, pendingSuspenseBoundaries: g.pendingSuspenseBoundaries, transitions: g.transitions }, b.updateQueue.baseState = f, b.memoizedState = f, b.flags & 256) {
                e2 = Ff(Error(m(423)), b);
                b = gg(a2, b, d, c2, e2);
                break a;
              } else if (d !== e2) {
                e2 = Ff(Error(m(424)), b);
                b = gg(a2, b, d, c2, e2);
                break a;
              } else for (Va && (pd = Pb(b.stateNode.containerInfo), od = b, F = true, rd = null, qd = false), c2 = we(b, null, d, c2), b.child = c2; c2; ) c2.flags = c2.flags & -3 | 4096, c2 = c2.sibling;
              else {
                Ad();
                if (d === e2) {
                  b = Uf(a2, b, c2);
                  break a;
                }
                P(a2, b, d, c2);
              }
              b = b.child;
            }
            return b;
          case 5:
            return Ee(b), null === a2 && wd(b), d = b.type, e2 = b.pendingProps, f = null !== a2 ? a2.memoizedProps : null, g = e2.children, Na(d, e2) ? g = null : null !== f && Na(d, f) && (b.flags |= 32), bg(a2, b), P(a2, b, g, c2), b.child;
          case 6:
            return null === a2 && wd(b), null;
          case 13:
            return jg(a2, b, c2);
          case 4:
            return Ce(b, b.stateNode.containerInfo), d = b.pendingProps, null === a2 ? b.child = ve(b, null, d, c2) : P(a2, b, d, c2), b.child;
          case 11:
            return d = b.type, e2 = b.pendingProps, e2 = b.elementType === d ? e2 : Fd(d, e2), Tf(a2, b, d, e2, c2);
          case 7:
            return P(a2, b, b.pendingProps, c2), b.child;
          case 8:
            return P(a2, b, b.pendingProps.children, c2), b.child;
          case 12:
            return P(a2, b, b.pendingProps.children, c2), b.child;
          case 10:
            a: {
              d = b.type._context;
              e2 = b.pendingProps;
              f = b.memoizedProps;
              g = e2.value;
              Ld(b, d, g);
              if (null !== f) if (Vc(f.value, g)) {
                if (f.children === e2.children && !z.current) {
                  b = Uf(a2, b, c2);
                  break a;
                }
              } else for (f = b.child, null !== f && (f.return = b); null !== f; ) {
                var h = f.dependencies;
                if (null !== h) {
                  g = f.child;
                  for (var k = h.firstContext; null !== k; ) {
                    if (k.context === d) {
                      if (1 === f.tag) {
                        k = Xd(-1, c2 & -c2);
                        k.tag = 2;
                        var l = f.updateQueue;
                        if (null !== l) {
                          l = l.shared;
                          var n2 = l.pending;
                          null === n2 ? k.next = k : (k.next = n2.next, n2.next = k);
                          l.pending = k;
                        }
                      }
                      f.lanes |= c2;
                      k = f.alternate;
                      null !== k && (k.lanes |= c2);
                      Nd(f.return, c2, b);
                      h.lanes |= c2;
                      break;
                    }
                    k = k.next;
                  }
                } else if (10 === f.tag) g = f.type === b.type ? null : f.child;
                else if (18 === f.tag) {
                  g = f.return;
                  if (null === g) throw Error(m(341));
                  g.lanes |= c2;
                  h = g.alternate;
                  null !== h && (h.lanes |= c2);
                  Nd(g, c2, b);
                  g = f.sibling;
                } else g = f.child;
                if (null !== g) g.return = f;
                else for (g = f; null !== g; ) {
                  if (g === b) {
                    g = null;
                    break;
                  }
                  f = g.sibling;
                  if (null !== f) {
                    f.return = g.return;
                    g = f;
                    break;
                  }
                  g = g.return;
                }
                f = g;
              }
              P(a2, b, e2.children, c2);
              b = b.child;
            }
            return b;
          case 9:
            return e2 = b.type, d = b.pendingProps.children, Od(b, c2), e2 = Pd(e2), d = d(e2), b.flags |= 1, P(a2, b, d, c2), b.child;
          case 14:
            return d = b.type, e2 = Fd(d, b.pendingProps), e2 = Fd(d.type, e2), Vf(a2, b, d, e2, c2);
          case 15:
            return Xf(a2, b, b.type, b.pendingProps, c2);
          case 17:
            return d = b.type, e2 = b.pendingProps, e2 = b.elementType === d ? e2 : Fd(d, e2), dg(a2, b), b.tag = 1, A(d) ? (a2 = true, pc(b)) : a2 = false, Od(b, c2), je(b, d, e2), le(b, d, e2, c2), eg(null, b, d, true, a2, c2);
          case 19:
            return sg(a2, b, c2);
          case 22:
            return Zf(a2, b, c2);
        }
        throw Error(m(156, b.tag));
      };
      function Nh(a2, b) {
        return Jc(a2, b);
      }
      function gi(a2, b, c2, d) {
        this.tag = a2;
        this.key = c2;
        this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
        this.index = 0;
        this.ref = null;
        this.pendingProps = b;
        this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
        this.mode = d;
        this.subtreeFlags = this.flags = 0;
        this.deletions = null;
        this.childLanes = this.lanes = 0;
        this.alternate = null;
      }
      function td(a2, b, c2, d) {
        return new gi(a2, b, c2, d);
      }
      function Wf(a2) {
        a2 = a2.prototype;
        return !(!a2 || !a2.isReactComponent);
      }
      function fi(a2) {
        if ("function" === typeof a2) return Wf(a2) ? 1 : 0;
        if (void 0 !== a2 && null !== a2) {
          a2 = a2.$$typeof;
          if (a2 === ma) return 11;
          if (a2 === pa) return 14;
        }
        return 2;
      }
      function qe(a2, b) {
        var c2 = a2.alternate;
        null === c2 ? (c2 = td(a2.tag, b, a2.key, a2.mode), c2.elementType = a2.elementType, c2.type = a2.type, c2.stateNode = a2.stateNode, c2.alternate = a2, a2.alternate = c2) : (c2.pendingProps = b, c2.type = a2.type, c2.flags = 0, c2.subtreeFlags = 0, c2.deletions = null);
        c2.flags = a2.flags & 14680064;
        c2.childLanes = a2.childLanes;
        c2.lanes = a2.lanes;
        c2.child = a2.child;
        c2.memoizedProps = a2.memoizedProps;
        c2.memoizedState = a2.memoizedState;
        c2.updateQueue = a2.updateQueue;
        b = a2.dependencies;
        c2.dependencies = null === b ? null : { lanes: b.lanes, firstContext: b.firstContext };
        c2.sibling = a2.sibling;
        c2.index = a2.index;
        c2.ref = a2.ref;
        return c2;
      }
      function se(a2, b, c2, d, e2, f) {
        var g = 2;
        d = a2;
        if ("function" === typeof a2) Wf(a2) && (g = 1);
        else if ("string" === typeof a2) g = 5;
        else a: switch (a2) {
          case ha:
            return ue(c2.children, e2, f, b);
          case ia:
            g = 8;
            e2 |= 8;
            break;
          case ja:
            return a2 = td(12, c2, b, e2 | 2), a2.elementType = ja, a2.lanes = f, a2;
          case na:
            return a2 = td(13, c2, b, e2), a2.elementType = na, a2.lanes = f, a2;
          case oa:
            return a2 = td(19, c2, b, e2), a2.elementType = oa, a2.lanes = f, a2;
          case ra:
            return kg(c2, e2, f, b);
          default:
            if ("object" === typeof a2 && null !== a2) switch (a2.$$typeof) {
              case ka:
                g = 10;
                break a;
              case la:
                g = 9;
                break a;
              case ma:
                g = 11;
                break a;
              case pa:
                g = 14;
                break a;
              case qa:
                g = 16;
                d = null;
                break a;
            }
            throw Error(m(130, null == a2 ? a2 : typeof a2, ""));
        }
        b = td(g, c2, b, e2);
        b.elementType = a2;
        b.type = d;
        b.lanes = f;
        return b;
      }
      function ue(a2, b, c2, d) {
        a2 = td(7, a2, d, b);
        a2.lanes = c2;
        return a2;
      }
      function kg(a2, b, c2, d) {
        a2 = td(22, a2, d, b);
        a2.elementType = ra;
        a2.lanes = c2;
        a2.stateNode = { isHidden: false };
        return a2;
      }
      function re(a2, b, c2) {
        a2 = td(6, a2, null, b);
        a2.lanes = c2;
        return a2;
      }
      function te(a2, b, c2) {
        b = td(4, null !== a2.children ? a2.children : [], a2.key, b);
        b.lanes = c2;
        b.stateNode = { containerInfo: a2.containerInfo, pendingChildren: null, implementation: a2.implementation };
        return b;
      }
      function hi(a2, b, c2, d, e2) {
        this.tag = b;
        this.containerInfo = a2;
        this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
        this.timeoutHandle = Ra;
        this.callbackNode = this.pendingContext = this.context = null;
        this.callbackPriority = 0;
        this.eventTimes = Ec(0);
        this.expirationTimes = Ec(-1);
        this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
        this.entanglements = Ec(0);
        this.identifierPrefix = d;
        this.onRecoverableError = e2;
        Va && (this.mutableSourceEagerHydrationData = null);
      }
      function ii(a2, b, c2, d, e2, f, g, h, k) {
        a2 = new hi(a2, b, c2, h, k);
        1 === b ? (b = 1, true === f && (b |= 8)) : b = 0;
        f = td(3, null, null, b);
        a2.current = f;
        f.stateNode = a2;
        f.memoizedState = { element: d, isDehydrated: c2, cache: null, transitions: null, pendingSuspenseBoundaries: null };
        Vd(f);
        return a2;
      }
      function ji(a2) {
        if (!a2) return jc;
        a2 = a2._reactInternals;
        a: {
          if (wa(a2) !== a2 || 1 !== a2.tag) throw Error(m(170));
          var b = a2;
          do {
            switch (b.tag) {
              case 3:
                b = b.stateNode.context;
                break a;
              case 1:
                if (A(b.type)) {
                  b = b.stateNode.__reactInternalMemoizedMergedChildContext;
                  break a;
                }
            }
            b = b.return;
          } while (null !== b);
          throw Error(m(171));
        }
        if (1 === a2.tag) {
          var c2 = a2.type;
          if (A(c2)) return oc(a2, c2, b);
        }
        return b;
      }
      function ki(a2) {
        var b = a2._reactInternals;
        if (void 0 === b) {
          if ("function" === typeof a2.render) throw Error(m(188));
          a2 = Object.keys(a2).join(",");
          throw Error(m(268, a2));
        }
        a2 = Aa(b);
        return null === a2 ? null : a2.stateNode;
      }
      function li(a2, b) {
        a2 = a2.memoizedState;
        if (null !== a2 && null !== a2.dehydrated) {
          var c2 = a2.retryLane;
          a2.retryLane = 0 !== c2 && c2 < b ? c2 : b;
        }
      }
      function mi(a2, b) {
        li(a2, b);
        (a2 = a2.alternate) && li(a2, b);
      }
      function ni(a2) {
        a2 = Aa(a2);
        return null === a2 ? null : a2.stateNode;
      }
      function oi() {
        return null;
      }
      exports2.attemptContinuousHydration = function(a2) {
        if (13 === a2.tag) {
          var b = Td(a2, 134217728);
          if (null !== b) {
            var c2 = I();
            ge(b, a2, 134217728, c2);
          }
          mi(a2, 134217728);
        }
      };
      exports2.attemptDiscreteHydration = function(a2) {
        if (13 === a2.tag) {
          var b = Td(a2, 1);
          if (null !== b) {
            var c2 = I();
            ge(b, a2, 1, c2);
          }
          mi(a2, 1);
        }
      };
      exports2.attemptHydrationAtCurrentPriority = function(a2) {
        if (13 === a2.tag) {
          var b = fe(a2), c2 = Td(a2, b);
          if (null !== c2) {
            var d = I();
            ge(c2, a2, b, d);
          }
          mi(a2, b);
        }
      };
      exports2.attemptSynchronousHydration = function(a2) {
        switch (a2.tag) {
          case 3:
            var b = a2.stateNode;
            if (b.current.memoizedState.isDehydrated) {
              var c2 = yc(b.pendingLanes);
              0 !== c2 && (Hc(b, c2 | 1), Lh(b, D()), 0 === (H & 6) && (Ch(), ad()));
            }
            break;
          case 13:
            Yh(function() {
              var b2 = Td(a2, 1);
              if (null !== b2) {
                var c3 = I();
                ge(b2, a2, 1, c3);
              }
            }), mi(a2, 1);
        }
      };
      exports2.batchedUpdates = function(a2, b) {
        var c2 = H;
        H |= 1;
        try {
          return a2(b);
        } finally {
          H = c2, 0 === H && (Ch(), Xc && ad());
        }
      };
      exports2.createComponentSelector = function(a2) {
        return { $$typeof: ih, value: a2 };
      };
      exports2.createContainer = function(a2, b, c2, d, e2, f, g) {
        return ii(a2, b, false, null, c2, d, e2, f, g);
      };
      exports2.createHasPseudoClassSelector = function(a2) {
        return { $$typeof: jh, value: a2 };
      };
      exports2.createHydrationContainer = function(a2, b, c2, d, e2, f, g, h, k) {
        a2 = ii(c2, d, true, a2, e2, f, g, h, k);
        a2.context = ji(null);
        c2 = a2.current;
        d = I();
        e2 = fe(c2);
        f = Xd(d, e2);
        f.callback = void 0 !== b && null !== b ? b : null;
        Yd(c2, f, e2);
        a2.current.lanes = e2;
        Fc(a2, e2, d);
        Lh(a2, d);
        return a2;
      };
      exports2.createPortal = function(a2, b, c2) {
        var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
        return { $$typeof: fa, key: null == d ? null : "" + d, children: a2, containerInfo: b, implementation: c2 };
      };
      exports2.createRoleSelector = function(a2) {
        return { $$typeof: kh, value: a2 };
      };
      exports2.createTestNameSelector = function(a2) {
        return { $$typeof: lh, value: a2 };
      };
      exports2.createTextSelector = function(a2) {
        return { $$typeof: mh, value: a2 };
      };
      exports2.deferredUpdates = function(a2) {
        var b = C, c2 = W.transition;
        try {
          return W.transition = null, C = 16, a2();
        } finally {
          C = b, W.transition = c2;
        }
      };
      exports2.discreteUpdates = function(a2, b, c2, d, e2) {
        var f = C, g = W.transition;
        try {
          return W.transition = null, C = 1, a2(b, c2, d, e2);
        } finally {
          C = f, W.transition = g, 0 === H && Ch();
        }
      };
      exports2.findAllNodes = sh;
      exports2.findBoundingRects = function(a2, b) {
        if (!bb) throw Error(m(363));
        b = sh(a2, b);
        a2 = [];
        for (var c2 = 0; c2 < b.length; c2++) a2.push(db(b[c2]));
        for (b = a2.length - 1; 0 < b; b--) {
          c2 = a2[b];
          for (var d = c2.x, e2 = d + c2.width, f = c2.y, g = f + c2.height, h = b - 1; 0 <= h; h--) if (b !== h) {
            var k = a2[h], l = k.x, n2 = l + k.width, t3 = k.y, p = t3 + k.height;
            if (d >= l && f >= t3 && e2 <= n2 && g <= p) {
              a2.splice(b, 1);
              break;
            } else if (!(d !== l || c2.width !== k.width || p < f || t3 > g)) {
              t3 > f && (k.height += t3 - f, k.y = f);
              p < g && (k.height = g - t3);
              a2.splice(b, 1);
              break;
            } else if (!(f !== t3 || c2.height !== k.height || n2 < d || l > e2)) {
              l > d && (k.width += l - d, k.x = d);
              n2 < e2 && (k.width = e2 - l);
              a2.splice(b, 1);
              break;
            }
          }
        }
        return a2;
      };
      exports2.findHostInstance = ki;
      exports2.findHostInstanceWithNoPortals = function(a2) {
        a2 = ya(a2);
        a2 = null !== a2 ? Ca(a2) : null;
        return null === a2 ? null : a2.stateNode;
      };
      exports2.findHostInstanceWithWarning = function(a2) {
        return ki(a2);
      };
      exports2.flushControlled = function(a2) {
        var b = H;
        H |= 1;
        var c2 = W.transition, d = C;
        try {
          W.transition = null, C = 1, a2();
        } finally {
          C = d, W.transition = c2, H = b, 0 === H && (Ch(), ad());
        }
      };
      exports2.flushPassiveEffects = Ph;
      exports2.flushSync = Yh;
      exports2.focusWithin = function(a2, b) {
        if (!bb) throw Error(m(363));
        a2 = oh(a2);
        b = rh(a2, b);
        b = Array.from(b);
        for (a2 = 0; a2 < b.length; ) {
          var c2 = b[a2++];
          if (!fb(c2)) {
            if (5 === c2.tag && hb(c2.stateNode)) return true;
            for (c2 = c2.child; null !== c2; ) b.push(c2), c2 = c2.sibling;
          }
        }
        return false;
      };
      exports2.getCurrentUpdatePriority = function() {
        return C;
      };
      exports2.getFindAllNodesFailureDescription = function(a2, b) {
        if (!bb) throw Error(m(363));
        var c2 = 0, d = [];
        a2 = [oh(a2), 0];
        for (var e2 = 0; e2 < a2.length; ) {
          var f = a2[e2++], g = a2[e2++], h = b[g];
          if (5 !== f.tag || !fb(f)) {
            if (ph(f, h) && (d.push(qh(h)), g++, g > c2 && (c2 = g)), g < b.length) for (f = f.child; null !== f; ) a2.push(f, g), f = f.sibling;
          }
        }
        if (c2 < b.length) {
          for (a2 = []; c2 < b.length; c2++) a2.push(qh(b[c2]));
          return "findAllNodes was able to match part of the selector:\n  " + (d.join(" > ") + "\n\nNo matching component was found for:\n  ") + a2.join(" > ");
        }
        return null;
      };
      exports2.getPublicRootInstance = function(a2) {
        a2 = a2.current;
        if (!a2.child) return null;
        switch (a2.child.tag) {
          case 5:
            return Ea(a2.child.stateNode);
          default:
            return a2.child.stateNode;
        }
      };
      exports2.injectIntoDevTools = function(a2) {
        a2 = { bundleType: a2.bundleType, version: a2.version, rendererPackageName: a2.rendererPackageName, rendererConfig: a2.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: da.ReactCurrentDispatcher, findHostInstanceByFiber: ni, findFiberByHostInstance: a2.findFiberByHostInstance || oi, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.2.0" };
        if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) a2 = false;
        else {
          var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (b.isDisabled || !b.supportsFiber) a2 = true;
          else {
            try {
              Rc = b.inject(a2), Sc = b;
            } catch (c2) {
            }
            a2 = b.checkDCE ? true : false;
          }
        }
        return a2;
      };
      exports2.isAlreadyRendering = function() {
        return false;
      };
      exports2.observeVisibleRects = function(a2, b, c2, d) {
        if (!bb) throw Error(m(363));
        a2 = sh(a2, b);
        var e2 = ib(a2, c2, d).disconnect;
        return { disconnect: function() {
          e2();
        } };
      };
      exports2.registerMutableSourceForHydration = function(a2, b) {
        var c2 = b._getVersion;
        c2 = c2(b._source);
        null == a2.mutableSourceEagerHydrationData ? a2.mutableSourceEagerHydrationData = [b, c2] : a2.mutableSourceEagerHydrationData.push(b, c2);
      };
      exports2.runWithPriority = function(a2, b) {
        var c2 = C;
        try {
          return C = a2, b();
        } finally {
          C = c2;
        }
      };
      exports2.shouldError = function() {
        return null;
      };
      exports2.shouldSuspend = function() {
        return false;
      };
      exports2.updateContainer = function(a2, b, c2, d) {
        var e2 = b.current, f = I(), g = fe(e2);
        c2 = ji(c2);
        null === b.context ? b.context = c2 : b.pendingContext = c2;
        b = Xd(f, g);
        b.payload = { element: a2 };
        d = void 0 === d ? null : d;
        null !== d && (b.callback = d);
        a2 = Yd(e2, b, g);
        null !== a2 && (ge(a2, e2, g, f), Zd(a2, e2, g));
        return g;
      };
      return exports2;
    };
  }
});

// ../../node_modules/react-reconciler/index.js
var require_react_reconciler = __commonJS({
  "../../node_modules/react-reconciler/index.js"(exports, module) {
    "use strict";
    init_esm_shims();
    if (true) {
      module.exports = require_react_reconciler_production_min();
    } else {
      module.exports = null;
    }
  }
});

// ../../node_modules/react-reconciler/cjs/react-reconciler-constants.production.min.js
var require_react_reconciler_constants_production_min = __commonJS({
  "../../node_modules/react-reconciler/cjs/react-reconciler-constants.production.min.js"(exports) {
    "use strict";
    init_esm_shims();
    exports.ConcurrentRoot = 1;
    exports.ContinuousEventPriority = 4;
    exports.DefaultEventPriority = 16;
    exports.DiscreteEventPriority = 1;
    exports.IdleEventPriority = 536870912;
    exports.LegacyRoot = 0;
  }
});

// ../../node_modules/react-reconciler/constants.js
var require_constants = __commonJS({
  "../../node_modules/react-reconciler/constants.js"(exports, module) {
    "use strict";
    init_esm_shims();
    if (true) {
      module.exports = require_react_reconciler_constants_production_min();
    } else {
      module.exports = null;
    }
  }
});

// ../../node_modules/eastasianwidth/eastasianwidth.js
var require_eastasianwidth = __commonJS({
  "../../node_modules/eastasianwidth/eastasianwidth.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var eaw = {};
    if ("undefined" == typeof module) {
      window.eastasianwidth = eaw;
    } else {
      module.exports = eaw;
    }
    eaw.eastAsianWidth = function(character) {
      var x = character.charCodeAt(0);
      var y = character.length == 2 ? character.charCodeAt(1) : 0;
      var codePoint = x;
      if (55296 <= x && x <= 56319 && (56320 <= y && y <= 57343)) {
        x &= 1023;
        y &= 1023;
        codePoint = x << 10 | y;
        codePoint += 65536;
      }
      if (12288 == codePoint || 65281 <= codePoint && codePoint <= 65376 || 65504 <= codePoint && codePoint <= 65510) {
        return "F";
      }
      if (8361 == codePoint || 65377 <= codePoint && codePoint <= 65470 || 65474 <= codePoint && codePoint <= 65479 || 65482 <= codePoint && codePoint <= 65487 || 65490 <= codePoint && codePoint <= 65495 || 65498 <= codePoint && codePoint <= 65500 || 65512 <= codePoint && codePoint <= 65518) {
        return "H";
      }
      if (4352 <= codePoint && codePoint <= 4447 || 4515 <= codePoint && codePoint <= 4519 || 4602 <= codePoint && codePoint <= 4607 || 9001 <= codePoint && codePoint <= 9002 || 11904 <= codePoint && codePoint <= 11929 || 11931 <= codePoint && codePoint <= 12019 || 12032 <= codePoint && codePoint <= 12245 || 12272 <= codePoint && codePoint <= 12283 || 12289 <= codePoint && codePoint <= 12350 || 12353 <= codePoint && codePoint <= 12438 || 12441 <= codePoint && codePoint <= 12543 || 12549 <= codePoint && codePoint <= 12589 || 12593 <= codePoint && codePoint <= 12686 || 12688 <= codePoint && codePoint <= 12730 || 12736 <= codePoint && codePoint <= 12771 || 12784 <= codePoint && codePoint <= 12830 || 12832 <= codePoint && codePoint <= 12871 || 12880 <= codePoint && codePoint <= 13054 || 13056 <= codePoint && codePoint <= 19903 || 19968 <= codePoint && codePoint <= 42124 || 42128 <= codePoint && codePoint <= 42182 || 43360 <= codePoint && codePoint <= 43388 || 44032 <= codePoint && codePoint <= 55203 || 55216 <= codePoint && codePoint <= 55238 || 55243 <= codePoint && codePoint <= 55291 || 63744 <= codePoint && codePoint <= 64255 || 65040 <= codePoint && codePoint <= 65049 || 65072 <= codePoint && codePoint <= 65106 || 65108 <= codePoint && codePoint <= 65126 || 65128 <= codePoint && codePoint <= 65131 || 110592 <= codePoint && codePoint <= 110593 || 127488 <= codePoint && codePoint <= 127490 || 127504 <= codePoint && codePoint <= 127546 || 127552 <= codePoint && codePoint <= 127560 || 127568 <= codePoint && codePoint <= 127569 || 131072 <= codePoint && codePoint <= 194367 || 177984 <= codePoint && codePoint <= 196605 || 196608 <= codePoint && codePoint <= 262141) {
        return "W";
      }
      if (32 <= codePoint && codePoint <= 126 || 162 <= codePoint && codePoint <= 163 || 165 <= codePoint && codePoint <= 166 || 172 == codePoint || 175 == codePoint || 10214 <= codePoint && codePoint <= 10221 || 10629 <= codePoint && codePoint <= 10630) {
        return "Na";
      }
      if (161 == codePoint || 164 == codePoint || 167 <= codePoint && codePoint <= 168 || 170 == codePoint || 173 <= codePoint && codePoint <= 174 || 176 <= codePoint && codePoint <= 180 || 182 <= codePoint && codePoint <= 186 || 188 <= codePoint && codePoint <= 191 || 198 == codePoint || 208 == codePoint || 215 <= codePoint && codePoint <= 216 || 222 <= codePoint && codePoint <= 225 || 230 == codePoint || 232 <= codePoint && codePoint <= 234 || 236 <= codePoint && codePoint <= 237 || 240 == codePoint || 242 <= codePoint && codePoint <= 243 || 247 <= codePoint && codePoint <= 250 || 252 == codePoint || 254 == codePoint || 257 == codePoint || 273 == codePoint || 275 == codePoint || 283 == codePoint || 294 <= codePoint && codePoint <= 295 || 299 == codePoint || 305 <= codePoint && codePoint <= 307 || 312 == codePoint || 319 <= codePoint && codePoint <= 322 || 324 == codePoint || 328 <= codePoint && codePoint <= 331 || 333 == codePoint || 338 <= codePoint && codePoint <= 339 || 358 <= codePoint && codePoint <= 359 || 363 == codePoint || 462 == codePoint || 464 == codePoint || 466 == codePoint || 468 == codePoint || 470 == codePoint || 472 == codePoint || 474 == codePoint || 476 == codePoint || 593 == codePoint || 609 == codePoint || 708 == codePoint || 711 == codePoint || 713 <= codePoint && codePoint <= 715 || 717 == codePoint || 720 == codePoint || 728 <= codePoint && codePoint <= 731 || 733 == codePoint || 735 == codePoint || 768 <= codePoint && codePoint <= 879 || 913 <= codePoint && codePoint <= 929 || 931 <= codePoint && codePoint <= 937 || 945 <= codePoint && codePoint <= 961 || 963 <= codePoint && codePoint <= 969 || 1025 == codePoint || 1040 <= codePoint && codePoint <= 1103 || 1105 == codePoint || 8208 == codePoint || 8211 <= codePoint && codePoint <= 8214 || 8216 <= codePoint && codePoint <= 8217 || 8220 <= codePoint && codePoint <= 8221 || 8224 <= codePoint && codePoint <= 8226 || 8228 <= codePoint && codePoint <= 8231 || 8240 == codePoint || 8242 <= codePoint && codePoint <= 8243 || 8245 == codePoint || 8251 == codePoint || 8254 == codePoint || 8308 == codePoint || 8319 == codePoint || 8321 <= codePoint && codePoint <= 8324 || 8364 == codePoint || 8451 == codePoint || 8453 == codePoint || 8457 == codePoint || 8467 == codePoint || 8470 == codePoint || 8481 <= codePoint && codePoint <= 8482 || 8486 == codePoint || 8491 == codePoint || 8531 <= codePoint && codePoint <= 8532 || 8539 <= codePoint && codePoint <= 8542 || 8544 <= codePoint && codePoint <= 8555 || 8560 <= codePoint && codePoint <= 8569 || 8585 == codePoint || 8592 <= codePoint && codePoint <= 8601 || 8632 <= codePoint && codePoint <= 8633 || 8658 == codePoint || 8660 == codePoint || 8679 == codePoint || 8704 == codePoint || 8706 <= codePoint && codePoint <= 8707 || 8711 <= codePoint && codePoint <= 8712 || 8715 == codePoint || 8719 == codePoint || 8721 == codePoint || 8725 == codePoint || 8730 == codePoint || 8733 <= codePoint && codePoint <= 8736 || 8739 == codePoint || 8741 == codePoint || 8743 <= codePoint && codePoint <= 8748 || 8750 == codePoint || 8756 <= codePoint && codePoint <= 8759 || 8764 <= codePoint && codePoint <= 8765 || 8776 == codePoint || 8780 == codePoint || 8786 == codePoint || 8800 <= codePoint && codePoint <= 8801 || 8804 <= codePoint && codePoint <= 8807 || 8810 <= codePoint && codePoint <= 8811 || 8814 <= codePoint && codePoint <= 8815 || 8834 <= codePoint && codePoint <= 8835 || 8838 <= codePoint && codePoint <= 8839 || 8853 == codePoint || 8857 == codePoint || 8869 == codePoint || 8895 == codePoint || 8978 == codePoint || 9312 <= codePoint && codePoint <= 9449 || 9451 <= codePoint && codePoint <= 9547 || 9552 <= codePoint && codePoint <= 9587 || 9600 <= codePoint && codePoint <= 9615 || 9618 <= codePoint && codePoint <= 9621 || 9632 <= codePoint && codePoint <= 9633 || 9635 <= codePoint && codePoint <= 9641 || 9650 <= codePoint && codePoint <= 9651 || 9654 <= codePoint && codePoint <= 9655 || 9660 <= codePoint && codePoint <= 9661 || 9664 <= codePoint && codePoint <= 9665 || 9670 <= codePoint && codePoint <= 9672 || 9675 == codePoint || 9678 <= codePoint && codePoint <= 9681 || 9698 <= codePoint && codePoint <= 9701 || 9711 == codePoint || 9733 <= codePoint && codePoint <= 9734 || 9737 == codePoint || 9742 <= codePoint && codePoint <= 9743 || 9748 <= codePoint && codePoint <= 9749 || 9756 == codePoint || 9758 == codePoint || 9792 == codePoint || 9794 == codePoint || 9824 <= codePoint && codePoint <= 9825 || 9827 <= codePoint && codePoint <= 9829 || 9831 <= codePoint && codePoint <= 9834 || 9836 <= codePoint && codePoint <= 9837 || 9839 == codePoint || 9886 <= codePoint && codePoint <= 9887 || 9918 <= codePoint && codePoint <= 9919 || 9924 <= codePoint && codePoint <= 9933 || 9935 <= codePoint && codePoint <= 9953 || 9955 == codePoint || 9960 <= codePoint && codePoint <= 9983 || 10045 == codePoint || 10071 == codePoint || 10102 <= codePoint && codePoint <= 10111 || 11093 <= codePoint && codePoint <= 11097 || 12872 <= codePoint && codePoint <= 12879 || 57344 <= codePoint && codePoint <= 63743 || 65024 <= codePoint && codePoint <= 65039 || 65533 == codePoint || 127232 <= codePoint && codePoint <= 127242 || 127248 <= codePoint && codePoint <= 127277 || 127280 <= codePoint && codePoint <= 127337 || 127344 <= codePoint && codePoint <= 127386 || 917760 <= codePoint && codePoint <= 917999 || 983040 <= codePoint && codePoint <= 1048573 || 1048576 <= codePoint && codePoint <= 1114109) {
        return "A";
      }
      return "N";
    };
    eaw.characterLength = function(character) {
      var code = this.eastAsianWidth(character);
      if (code == "F" || code == "W" || code == "A") {
        return 2;
      } else {
        return 1;
      }
    };
    function stringToArray(string) {
      return string.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]|[^\uD800-\uDFFF]/g) || [];
    }
    eaw.length = function(string) {
      var characters = stringToArray(string);
      var len = 0;
      for (var i2 = 0; i2 < characters.length; i2++) {
        len = len + this.characterLength(characters[i2]);
      }
      return len;
    };
    eaw.slice = function(text, start, end) {
      textLen = eaw.length(text);
      start = start ? start : 0;
      end = end ? end : 1;
      if (start < 0) {
        start = textLen + start;
      }
      if (end < 0) {
        end = textLen + end;
      }
      var result = "";
      var eawLen = 0;
      var chars2 = stringToArray(text);
      for (var i2 = 0; i2 < chars2.length; i2++) {
        var char = chars2[i2];
        var charLen = eaw.length(char);
        if (eawLen >= start - (charLen == 2 ? 1 : 0)) {
          if (eawLen + charLen <= end) {
            result += char;
          } else {
            break;
          }
        }
        eawLen += charLen;
      }
      return result;
    };
  }
});

// ../../node_modules/widest-line/node_modules/emoji-regex/index.js
var require_emoji_regex = __commonJS({
  "../../node_modules/widest-line/node_modules/emoji-regex/index.js"(exports, module) {
    "use strict";
    init_esm_shims();
    module.exports = function() {
      return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC)?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u2600-\u2604\u260E\u2611\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26B0\u26B1\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0\u26F1\u26F4\u26F7\u26F8\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u3030\u303D\u3297\u3299]|\uD83C[\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\uD83D\uDC41\uFE0F|\uD83C\uDFF3\uFE0F|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\u2764\uFE0F|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD1D\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78\uDD7A-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCB\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6]|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDD77\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
    };
  }
});

// ../../node_modules/ink/node_modules/emoji-regex/index.js
var require_emoji_regex2 = __commonJS({
  "../../node_modules/ink/node_modules/emoji-regex/index.js"(exports, module) {
    "use strict";
    init_esm_shims();
    module.exports = function() {
      return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC)?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u2600-\u2604\u260E\u2611\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26B0\u26B1\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0\u26F1\u26F4\u26F7\u26F8\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u3030\u303D\u3297\u3299]|\uD83C[\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\uD83D\uDC41\uFE0F|\uD83C\uDFF3\uFE0F|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\u2764\uFE0F|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD1D\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78\uDD7A-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCB\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6]|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDD77\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
    };
  }
});

// ../../node_modules/cli-boxes/boxes.json
var require_boxes = __commonJS({
  "../../node_modules/cli-boxes/boxes.json"(exports, module) {
    module.exports = {
      single: {
        topLeft: "\u250C",
        top: "\u2500",
        topRight: "\u2510",
        right: "\u2502",
        bottomRight: "\u2518",
        bottom: "\u2500",
        bottomLeft: "\u2514",
        left: "\u2502"
      },
      double: {
        topLeft: "\u2554",
        top: "\u2550",
        topRight: "\u2557",
        right: "\u2551",
        bottomRight: "\u255D",
        bottom: "\u2550",
        bottomLeft: "\u255A",
        left: "\u2551"
      },
      round: {
        topLeft: "\u256D",
        top: "\u2500",
        topRight: "\u256E",
        right: "\u2502",
        bottomRight: "\u256F",
        bottom: "\u2500",
        bottomLeft: "\u2570",
        left: "\u2502"
      },
      bold: {
        topLeft: "\u250F",
        top: "\u2501",
        topRight: "\u2513",
        right: "\u2503",
        bottomRight: "\u251B",
        bottom: "\u2501",
        bottomLeft: "\u2517",
        left: "\u2503"
      },
      singleDouble: {
        topLeft: "\u2553",
        top: "\u2500",
        topRight: "\u2556",
        right: "\u2551",
        bottomRight: "\u255C",
        bottom: "\u2500",
        bottomLeft: "\u2559",
        left: "\u2551"
      },
      doubleSingle: {
        topLeft: "\u2552",
        top: "\u2550",
        topRight: "\u2555",
        right: "\u2502",
        bottomRight: "\u255B",
        bottom: "\u2550",
        bottomLeft: "\u2558",
        left: "\u2502"
      },
      classic: {
        topLeft: "+",
        top: "-",
        topRight: "+",
        right: "|",
        bottomRight: "+",
        bottom: "-",
        bottomLeft: "+",
        left: "|"
      },
      arrow: {
        topLeft: "\u2198",
        top: "\u2193",
        topRight: "\u2199",
        right: "\u2190",
        bottomRight: "\u2196",
        bottom: "\u2191",
        bottomLeft: "\u2197",
        left: "\u2192"
      }
    };
  }
});

// ../../node_modules/cli-boxes/index.js
var require_cli_boxes = __commonJS({
  "../../node_modules/cli-boxes/index.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var cliBoxes2 = require_boxes();
    module.exports = cliBoxes2;
    module.exports.default = cliBoxes2;
  }
});

// ../../node_modules/onetime/node_modules/mimic-fn/index.js
var require_mimic_fn = __commonJS({
  "../../node_modules/onetime/node_modules/mimic-fn/index.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var mimicFn = (to, from) => {
      for (const prop of Reflect.ownKeys(from)) {
        Object.defineProperty(to, prop, Object.getOwnPropertyDescriptor(from, prop));
      }
      return to;
    };
    module.exports = mimicFn;
    module.exports.default = mimicFn;
  }
});

// ../../node_modules/onetime/index.js
var require_onetime = __commonJS({
  "../../node_modules/onetime/index.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var mimicFn = require_mimic_fn();
    var calledFunctions = /* @__PURE__ */ new WeakMap();
    var onetime2 = (function_, options = {}) => {
      if (typeof function_ !== "function") {
        throw new TypeError("Expected a function");
      }
      let returnValue;
      let callCount = 0;
      const functionName = function_.displayName || function_.name || "<anonymous>";
      const onetime3 = function(...arguments_) {
        calledFunctions.set(onetime3, ++callCount);
        if (callCount === 1) {
          returnValue = function_.apply(this, arguments_);
          function_ = null;
        } else if (options.throw === true) {
          throw new Error(`Function \`${functionName}\` can only be called once`);
        }
        return returnValue;
      };
      mimicFn(onetime3, function_);
      calledFunctions.set(onetime3, callCount);
      return onetime3;
    };
    module.exports = onetime2;
    module.exports.default = onetime2;
    module.exports.callCount = (function_) => {
      if (!calledFunctions.has(function_)) {
        throw new Error(`The given function \`${function_.name}\` is not wrapped by the \`onetime\` package`);
      }
      return calledFunctions.get(function_);
    };
  }
});

// ../../node_modules/stack-utils/node_modules/escape-string-regexp/index.js
var require_escape_string_regexp = __commonJS({
  "../../node_modules/stack-utils/node_modules/escape-string-regexp/index.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var matchOperatorsRegex = /[|\\{}()[\]^$+*?.-]/g;
    module.exports = (string) => {
      if (typeof string !== "string") {
        throw new TypeError("Expected a string");
      }
      return string.replace(matchOperatorsRegex, "\\$&");
    };
  }
});

// ../../node_modules/stack-utils/index.js
var require_stack_utils = __commonJS({
  "../../node_modules/stack-utils/index.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var escapeStringRegexp = require_escape_string_regexp();
    var cwd2 = typeof process === "object" && process && typeof process.cwd === "function" ? process.cwd() : ".";
    var natives = [].concat(
      __require("module").builtinModules,
      "bootstrap_node",
      "node"
    ).map((n2) => new RegExp(`(?:\\((?:node:)?${n2}(?:\\.js)?:\\d+:\\d+\\)$|^\\s*at (?:node:)?${n2}(?:\\.js)?:\\d+:\\d+$)`));
    natives.push(
      /\((?:node:)?internal\/[^:]+:\d+:\d+\)$/,
      /\s*at (?:node:)?internal\/[^:]+:\d+:\d+$/,
      /\/\.node-spawn-wrap-\w+-\w+\/node:\d+:\d+\)?$/
    );
    var StackUtils2 = class _StackUtils {
      constructor(opts) {
        opts = {
          ignoredPackages: [],
          ...opts
        };
        if ("internals" in opts === false) {
          opts.internals = _StackUtils.nodeInternals();
        }
        if ("cwd" in opts === false) {
          opts.cwd = cwd2;
        }
        this._cwd = opts.cwd.replace(/\\/g, "/");
        this._internals = [].concat(
          opts.internals,
          ignoredPackagesRegExp(opts.ignoredPackages)
        );
        this._wrapCallSite = opts.wrapCallSite || false;
      }
      static nodeInternals() {
        return [...natives];
      }
      clean(stack, indent = 0) {
        indent = " ".repeat(indent);
        if (!Array.isArray(stack)) {
          stack = stack.split("\n");
        }
        if (!/^\s*at /.test(stack[0]) && /^\s*at /.test(stack[1])) {
          stack = stack.slice(1);
        }
        let outdent = false;
        let lastNonAtLine = null;
        const result = [];
        stack.forEach((st) => {
          st = st.replace(/\\/g, "/");
          if (this._internals.some((internal) => internal.test(st))) {
            return;
          }
          const isAtLine = /^\s*at /.test(st);
          if (outdent) {
            st = st.trimEnd().replace(/^(\s+)at /, "$1");
          } else {
            st = st.trim();
            if (isAtLine) {
              st = st.slice(3);
            }
          }
          st = st.replace(`${this._cwd}/`, "");
          if (st) {
            if (isAtLine) {
              if (lastNonAtLine) {
                result.push(lastNonAtLine);
                lastNonAtLine = null;
              }
              result.push(st);
            } else {
              outdent = true;
              lastNonAtLine = st;
            }
          }
        });
        return result.map((line) => `${indent}${line}
`).join("");
      }
      captureString(limit, fn = this.captureString) {
        if (typeof limit === "function") {
          fn = limit;
          limit = Infinity;
        }
        const { stackTraceLimit } = Error;
        if (limit) {
          Error.stackTraceLimit = limit;
        }
        const obj = {};
        Error.captureStackTrace(obj, fn);
        const { stack } = obj;
        Error.stackTraceLimit = stackTraceLimit;
        return this.clean(stack);
      }
      capture(limit, fn = this.capture) {
        if (typeof limit === "function") {
          fn = limit;
          limit = Infinity;
        }
        const { prepareStackTrace, stackTraceLimit } = Error;
        Error.prepareStackTrace = (obj2, site) => {
          if (this._wrapCallSite) {
            return site.map(this._wrapCallSite);
          }
          return site;
        };
        if (limit) {
          Error.stackTraceLimit = limit;
        }
        const obj = {};
        Error.captureStackTrace(obj, fn);
        const { stack } = obj;
        Object.assign(Error, { prepareStackTrace, stackTraceLimit });
        return stack;
      }
      at(fn = this.at) {
        const [site] = this.capture(1, fn);
        if (!site) {
          return {};
        }
        const res = {
          line: site.getLineNumber(),
          column: site.getColumnNumber()
        };
        setFile(res, site.getFileName(), this._cwd);
        if (site.isConstructor()) {
          Object.defineProperty(res, "constructor", {
            value: true,
            configurable: true
          });
        }
        if (site.isEval()) {
          res.evalOrigin = site.getEvalOrigin();
        }
        if (site.isNative()) {
          res.native = true;
        }
        let typename;
        try {
          typename = site.getTypeName();
        } catch (_2) {
        }
        if (typename && typename !== "Object" && typename !== "[object Object]") {
          res.type = typename;
        }
        const fname = site.getFunctionName();
        if (fname) {
          res.function = fname;
        }
        const meth = site.getMethodName();
        if (meth && fname !== meth) {
          res.method = meth;
        }
        return res;
      }
      parseLine(line) {
        const match4 = line && line.match(re);
        if (!match4) {
          return null;
        }
        const ctor = match4[1] === "new";
        let fname = match4[2];
        const evalOrigin = match4[3];
        const evalFile = match4[4];
        const evalLine = Number(match4[5]);
        const evalCol = Number(match4[6]);
        let file = match4[7];
        const lnum = match4[8];
        const col = match4[9];
        const native = match4[10] === "native";
        const closeParen = match4[11] === ")";
        let method;
        const res = {};
        if (lnum) {
          res.line = Number(lnum);
        }
        if (col) {
          res.column = Number(col);
        }
        if (closeParen && file) {
          let closes = 0;
          for (let i2 = file.length - 1; i2 > 0; i2--) {
            if (file.charAt(i2) === ")") {
              closes++;
            } else if (file.charAt(i2) === "(" && file.charAt(i2 - 1) === " ") {
              closes--;
              if (closes === -1 && file.charAt(i2 - 1) === " ") {
                const before = file.slice(0, i2 - 1);
                const after = file.slice(i2 + 1);
                file = after;
                fname += ` (${before}`;
                break;
              }
            }
          }
        }
        if (fname) {
          const methodMatch = fname.match(methodRe);
          if (methodMatch) {
            fname = methodMatch[1];
            method = methodMatch[2];
          }
        }
        setFile(res, file, this._cwd);
        if (ctor) {
          Object.defineProperty(res, "constructor", {
            value: true,
            configurable: true
          });
        }
        if (evalOrigin) {
          res.evalOrigin = evalOrigin;
          res.evalLine = evalLine;
          res.evalColumn = evalCol;
          res.evalFile = evalFile && evalFile.replace(/\\/g, "/");
        }
        if (native) {
          res.native = true;
        }
        if (fname) {
          res.function = fname;
        }
        if (method && fname !== method) {
          res.method = method;
        }
        return res;
      }
    };
    function setFile(result, filename, cwd3) {
      if (filename) {
        filename = filename.replace(/\\/g, "/");
        if (filename.startsWith(`${cwd3}/`)) {
          filename = filename.slice(cwd3.length + 1);
        }
        result.file = filename;
      }
    }
    function ignoredPackagesRegExp(ignoredPackages) {
      if (ignoredPackages.length === 0) {
        return [];
      }
      const packages = ignoredPackages.map((mod) => escapeStringRegexp(mod));
      return new RegExp(`[/\\\\]node_modules[/\\\\](?:${packages.join("|")})[/\\\\][^:]+:\\d+:\\d+`);
    }
    var re = new RegExp(
      "^(?:\\s*at )?(?:(new) )?(?:(.*?) \\()?(?:eval at ([^ ]+) \\((.+?):(\\d+):(\\d+)\\), )?(?:(.+?):(\\d+):(\\d+)|(native))(\\)?)$"
    );
    var methodRe = /^(.*?) \[as (.*?)\]$/;
    module.exports = StackUtils2;
  }
});

// ../../node_modules/supports-hyperlinks/index.js
var require_supports_hyperlinks = __commonJS({
  "../../node_modules/supports-hyperlinks/index.js"(exports, module) {
    "use strict";
    init_esm_shims();
    var supportsColor = require_supports_color();
    var hasFlag = require_has_flag();
    function parseVersion(versionString) {
      if (/^\d{3,4}$/.test(versionString)) {
        const m = /(\d{1,2})(\d{2})/.exec(versionString);
        return {
          major: 0,
          minor: parseInt(m[1], 10),
          patch: parseInt(m[2], 10)
        };
      }
      const versions = (versionString || "").split(".").map((n2) => parseInt(n2, 10));
      return {
        major: versions[0],
        minor: versions[1],
        patch: versions[2]
      };
    }
    function supportsHyperlink(stream) {
      const { env } = process;
      if ("FORCE_HYPERLINK" in env) {
        return !(env.FORCE_HYPERLINK.length > 0 && parseInt(env.FORCE_HYPERLINK, 10) === 0);
      }
      if (hasFlag("no-hyperlink") || hasFlag("no-hyperlinks") || hasFlag("hyperlink=false") || hasFlag("hyperlink=never")) {
        return false;
      }
      if (hasFlag("hyperlink=true") || hasFlag("hyperlink=always")) {
        return true;
      }
      if ("NETLIFY" in env) {
        return true;
      }
      if (!supportsColor.supportsColor(stream)) {
        return false;
      }
      if (stream && !stream.isTTY) {
        return false;
      }
      if (process.platform === "win32") {
        return false;
      }
      if ("CI" in env) {
        return false;
      }
      if ("TEAMCITY_VERSION" in env) {
        return false;
      }
      if ("TERM_PROGRAM" in env) {
        const version = parseVersion(env.TERM_PROGRAM_VERSION);
        switch (env.TERM_PROGRAM) {
          case "iTerm.app":
            if (version.major === 3) {
              return version.minor >= 1;
            }
            return version.major > 3;
          case "WezTerm":
            return version.major >= 20200620;
          case "vscode":
            return version.major > 1 || version.major === 1 && version.minor >= 72;
        }
      }
      if ("VTE_VERSION" in env) {
        if (env.VTE_VERSION === "0.50.0") {
          return false;
        }
        const version = parseVersion(env.VTE_VERSION);
        return version.major > 0 || version.minor >= 50;
      }
      return false;
    }
    module.exports = {
      supportsHyperlink,
      stdout: supportsHyperlink(process.stdout),
      stderr: supportsHyperlink(process.stderr)
    };
  }
});

// ../../node_modules/void-elements/index.js
var require_void_elements = __commonJS({
  "../../node_modules/void-elements/index.js"(exports, module) {
    "use strict";
    init_esm_shims();
    module.exports = {
      "area": true,
      "base": true,
      "br": true,
      "col": true,
      "embed": true,
      "hr": true,
      "img": true,
      "input": true,
      "link": true,
      "meta": true,
      "param": true,
      "source": true,
      "track": true,
      "wbr": true
    };
  }
});

// ../../node_modules/ink/build/components/Box.js
init_esm_shims();
var import_react = __toESM(require_react(), 1);
var Box = (0, import_react.forwardRef)(({ children, ...style }, ref) => {
  return import_react.default.createElement("ink-box", { ref, style: {
    ...style,
    overflowX: style.overflowX ?? style.overflow ?? "visible",
    overflowY: style.overflowY ?? style.overflow ?? "visible"
  } }, children);
});
Box.displayName = "Box";
Box.defaultProps = {
  flexWrap: "nowrap",
  flexDirection: "row",
  flexGrow: 0,
  flexShrink: 1
};
var Box_default = Box;

// ../../node_modules/ink/build/index.js
init_esm_shims();

// ../../node_modules/ink/build/render.js
init_esm_shims();
import { Stream } from "node:stream";
import process11 from "node:process";

// ../../node_modules/ink/build/ink.js
init_esm_shims();
var import_react10 = __toESM(require_react(), 1);
var import_throttle = __toESM(require_throttle(), 1);
import process10 from "node:process";

// ../../node_modules/ink/node_modules/ansi-escapes/index.js
init_esm_shims();
import process2 from "node:process";
var ESC = "\x1B[";
var OSC = "\x1B]";
var BEL = "\x07";
var SEP = ";";
var isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined";
var isTerminalApp = !isBrowser && process2.env.TERM_PROGRAM === "Apple_Terminal";
var isWindows = !isBrowser && process2.platform === "win32";
var cwdFunction = isBrowser ? () => {
  throw new Error("`process.cwd()` only works in Node.js, not the browser.");
} : process2.cwd;
var ansiEscapes = {};
ansiEscapes.cursorTo = (x, y) => {
  if (typeof x !== "number") {
    throw new TypeError("The `x` argument is required");
  }
  if (typeof y !== "number") {
    return ESC + (x + 1) + "G";
  }
  return ESC + (y + 1) + SEP + (x + 1) + "H";
};
ansiEscapes.cursorMove = (x, y) => {
  if (typeof x !== "number") {
    throw new TypeError("The `x` argument is required");
  }
  let returnValue = "";
  if (x < 0) {
    returnValue += ESC + -x + "D";
  } else if (x > 0) {
    returnValue += ESC + x + "C";
  }
  if (y < 0) {
    returnValue += ESC + -y + "A";
  } else if (y > 0) {
    returnValue += ESC + y + "B";
  }
  return returnValue;
};
ansiEscapes.cursorUp = (count = 1) => ESC + count + "A";
ansiEscapes.cursorDown = (count = 1) => ESC + count + "B";
ansiEscapes.cursorForward = (count = 1) => ESC + count + "C";
ansiEscapes.cursorBackward = (count = 1) => ESC + count + "D";
ansiEscapes.cursorLeft = ESC + "G";
ansiEscapes.cursorSavePosition = isTerminalApp ? "\x1B7" : ESC + "s";
ansiEscapes.cursorRestorePosition = isTerminalApp ? "\x1B8" : ESC + "u";
ansiEscapes.cursorGetPosition = ESC + "6n";
ansiEscapes.cursorNextLine = ESC + "E";
ansiEscapes.cursorPrevLine = ESC + "F";
ansiEscapes.cursorHide = ESC + "?25l";
ansiEscapes.cursorShow = ESC + "?25h";
ansiEscapes.eraseLines = (count) => {
  let clear = "";
  for (let i2 = 0; i2 < count; i2++) {
    clear += ansiEscapes.eraseLine + (i2 < count - 1 ? ansiEscapes.cursorUp() : "");
  }
  if (count) {
    clear += ansiEscapes.cursorLeft;
  }
  return clear;
};
ansiEscapes.eraseEndLine = ESC + "K";
ansiEscapes.eraseStartLine = ESC + "1K";
ansiEscapes.eraseLine = ESC + "2K";
ansiEscapes.eraseDown = ESC + "J";
ansiEscapes.eraseUp = ESC + "1J";
ansiEscapes.eraseScreen = ESC + "2J";
ansiEscapes.scrollUp = ESC + "S";
ansiEscapes.scrollDown = ESC + "T";
ansiEscapes.clearScreen = "\x1Bc";
ansiEscapes.clearTerminal = isWindows ? `${ansiEscapes.eraseScreen}${ESC}0f` : `${ansiEscapes.eraseScreen}${ESC}3J${ESC}H`;
ansiEscapes.enterAlternativeScreen = ESC + "?1049h";
ansiEscapes.exitAlternativeScreen = ESC + "?1049l";
ansiEscapes.beep = BEL;
ansiEscapes.link = (text, url) => [
  OSC,
  "8",
  SEP,
  SEP,
  url,
  BEL,
  text,
  OSC,
  "8",
  SEP,
  SEP,
  BEL
].join("");
ansiEscapes.image = (buffer, options = {}) => {
  let returnValue = `${OSC}1337;File=inline=1`;
  if (options.width) {
    returnValue += `;width=${options.width}`;
  }
  if (options.height) {
    returnValue += `;height=${options.height}`;
  }
  if (options.preserveAspectRatio === false) {
    returnValue += ";preserveAspectRatio=0";
  }
  return returnValue + ":" + buffer.toString("base64") + BEL;
};
ansiEscapes.iTerm = {
  setCwd: (cwd2 = cwdFunction()) => `${OSC}50;CurrentDir=${cwd2}${BEL}`,
  annotation(message, options = {}) {
    let returnValue = `${OSC}1337;`;
    const hasX = typeof options.x !== "undefined";
    const hasY = typeof options.y !== "undefined";
    if ((hasX || hasY) && !(hasX && hasY && typeof options.length !== "undefined")) {
      throw new Error("`x`, `y` and `length` must be defined when `x` or `y` is defined");
    }
    message = message.replace(/\|/g, "");
    returnValue += options.isHidden ? "AddHiddenAnnotation=" : "AddAnnotation=";
    if (options.length > 0) {
      returnValue += (hasX ? [message, options.length, options.x, options.y] : [options.length, message]).join("|");
    } else {
      returnValue += message;
    }
    return returnValue + BEL;
  }
};
var ansi_escapes_default = ansiEscapes;

// ../../node_modules/ink/build/ink.js
var import_is_ci = __toESM(require_is_ci(), 1);

// ../../node_modules/auto-bind/index.js
init_esm_shims();
var getAllProperties = (object) => {
  const properties = /* @__PURE__ */ new Set();
  do {
    for (const key of Reflect.ownKeys(object)) {
      properties.add([object, key]);
    }
  } while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);
  return properties;
};
function autoBind(self2, { include, exclude } = {}) {
  const filter = (key) => {
    const match4 = (pattern) => typeof pattern === "string" ? key === pattern : pattern.test(key);
    if (include) {
      return include.some(match4);
    }
    if (exclude) {
      return !exclude.some(match4);
    }
    return true;
  };
  for (const [object, key] of getAllProperties(self2.constructor.prototype)) {
    if (key === "constructor" || !filter(key)) {
      continue;
    }
    const descriptor = Reflect.getOwnPropertyDescriptor(object, key);
    if (descriptor && typeof descriptor.value === "function") {
      self2[key] = self2[key].bind(self2);
    }
  }
  return self2;
}

// ../../node_modules/ink/build/ink.js
var import_signal_exit2 = __toESM(require_signal_exit(), 1);

// ../../node_modules/patch-console/dist/index.js
init_esm_shims();
import { PassThrough } from "node:stream";
var consoleMethods = [
  "assert",
  "count",
  "countReset",
  "debug",
  "dir",
  "dirxml",
  "error",
  "group",
  "groupCollapsed",
  "groupEnd",
  "info",
  "log",
  "table",
  "time",
  "timeEnd",
  "timeLog",
  "trace",
  "warn"
];
var originalMethods = {};
var patchConsole = (callback) => {
  const stdout = new PassThrough();
  const stderr = new PassThrough();
  stdout.write = (data) => {
    callback("stdout", data);
  };
  stderr.write = (data) => {
    callback("stderr", data);
  };
  const internalConsole = new console.Console(stdout, stderr);
  for (const method of consoleMethods) {
    originalMethods[method] = console[method];
    console[method] = internalConsole[method];
  }
  return () => {
    for (const method of consoleMethods) {
      console[method] = originalMethods[method];
    }
    originalMethods = {};
  };
};
var dist_default = patchConsole;

// ../../node_modules/yoga-wasm-web/dist/node.js
init_esm_shims();
import { readFile as E } from "node:fs/promises";
import { createRequire as _ } from "node:module";

// ../../node_modules/yoga-wasm-web/dist/index.js
init_esm_shims();

// ../../node_modules/yoga-wasm-web/dist/wrapAsm-f766f97f.js
init_esm_shims();
var YGEnums = {};
var ALIGN_AUTO = YGEnums.ALIGN_AUTO = 0;
var ALIGN_FLEX_START = YGEnums.ALIGN_FLEX_START = 1;
var ALIGN_CENTER = YGEnums.ALIGN_CENTER = 2;
var ALIGN_FLEX_END = YGEnums.ALIGN_FLEX_END = 3;
var ALIGN_STRETCH = YGEnums.ALIGN_STRETCH = 4;
var ALIGN_BASELINE = YGEnums.ALIGN_BASELINE = 5;
var ALIGN_SPACE_BETWEEN = YGEnums.ALIGN_SPACE_BETWEEN = 6;
var ALIGN_SPACE_AROUND = YGEnums.ALIGN_SPACE_AROUND = 7;
var DIMENSION_WIDTH = YGEnums.DIMENSION_WIDTH = 0;
var DIMENSION_HEIGHT = YGEnums.DIMENSION_HEIGHT = 1;
var DIRECTION_INHERIT = YGEnums.DIRECTION_INHERIT = 0;
var DIRECTION_LTR = YGEnums.DIRECTION_LTR = 1;
var DIRECTION_RTL = YGEnums.DIRECTION_RTL = 2;
var DISPLAY_FLEX = YGEnums.DISPLAY_FLEX = 0;
var DISPLAY_NONE = YGEnums.DISPLAY_NONE = 1;
var EDGE_LEFT = YGEnums.EDGE_LEFT = 0;
var EDGE_TOP = YGEnums.EDGE_TOP = 1;
var EDGE_RIGHT = YGEnums.EDGE_RIGHT = 2;
var EDGE_BOTTOM = YGEnums.EDGE_BOTTOM = 3;
var EDGE_START = YGEnums.EDGE_START = 4;
var EDGE_END = YGEnums.EDGE_END = 5;
var EDGE_HORIZONTAL = YGEnums.EDGE_HORIZONTAL = 6;
var EDGE_VERTICAL = YGEnums.EDGE_VERTICAL = 7;
var EDGE_ALL = YGEnums.EDGE_ALL = 8;
var EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS = YGEnums.EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS = 0;
var EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE = YGEnums.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE = 1;
var EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN = YGEnums.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN = 2;
var FLEX_DIRECTION_COLUMN = YGEnums.FLEX_DIRECTION_COLUMN = 0;
var FLEX_DIRECTION_COLUMN_REVERSE = YGEnums.FLEX_DIRECTION_COLUMN_REVERSE = 1;
var FLEX_DIRECTION_ROW = YGEnums.FLEX_DIRECTION_ROW = 2;
var FLEX_DIRECTION_ROW_REVERSE = YGEnums.FLEX_DIRECTION_ROW_REVERSE = 3;
var GUTTER_COLUMN = YGEnums.GUTTER_COLUMN = 0;
var GUTTER_ROW = YGEnums.GUTTER_ROW = 1;
var GUTTER_ALL = YGEnums.GUTTER_ALL = 2;
var JUSTIFY_FLEX_START = YGEnums.JUSTIFY_FLEX_START = 0;
var JUSTIFY_CENTER = YGEnums.JUSTIFY_CENTER = 1;
var JUSTIFY_FLEX_END = YGEnums.JUSTIFY_FLEX_END = 2;
var JUSTIFY_SPACE_BETWEEN = YGEnums.JUSTIFY_SPACE_BETWEEN = 3;
var JUSTIFY_SPACE_AROUND = YGEnums.JUSTIFY_SPACE_AROUND = 4;
var JUSTIFY_SPACE_EVENLY = YGEnums.JUSTIFY_SPACE_EVENLY = 5;
var LOG_LEVEL_ERROR = YGEnums.LOG_LEVEL_ERROR = 0;
var LOG_LEVEL_WARN = YGEnums.LOG_LEVEL_WARN = 1;
var LOG_LEVEL_INFO = YGEnums.LOG_LEVEL_INFO = 2;
var LOG_LEVEL_DEBUG = YGEnums.LOG_LEVEL_DEBUG = 3;
var LOG_LEVEL_VERBOSE = YGEnums.LOG_LEVEL_VERBOSE = 4;
var LOG_LEVEL_FATAL = YGEnums.LOG_LEVEL_FATAL = 5;
var MEASURE_MODE_UNDEFINED = YGEnums.MEASURE_MODE_UNDEFINED = 0;
var MEASURE_MODE_EXACTLY = YGEnums.MEASURE_MODE_EXACTLY = 1;
var MEASURE_MODE_AT_MOST = YGEnums.MEASURE_MODE_AT_MOST = 2;
var NODE_TYPE_DEFAULT = YGEnums.NODE_TYPE_DEFAULT = 0;
var NODE_TYPE_TEXT = YGEnums.NODE_TYPE_TEXT = 1;
var OVERFLOW_VISIBLE = YGEnums.OVERFLOW_VISIBLE = 0;
var OVERFLOW_HIDDEN = YGEnums.OVERFLOW_HIDDEN = 1;
var OVERFLOW_SCROLL = YGEnums.OVERFLOW_SCROLL = 2;
var POSITION_TYPE_STATIC = YGEnums.POSITION_TYPE_STATIC = 0;
var POSITION_TYPE_RELATIVE = YGEnums.POSITION_TYPE_RELATIVE = 1;
var POSITION_TYPE_ABSOLUTE = YGEnums.POSITION_TYPE_ABSOLUTE = 2;
var PRINT_OPTIONS_LAYOUT = YGEnums.PRINT_OPTIONS_LAYOUT = 1;
var PRINT_OPTIONS_STYLE = YGEnums.PRINT_OPTIONS_STYLE = 2;
var PRINT_OPTIONS_CHILDREN = YGEnums.PRINT_OPTIONS_CHILDREN = 4;
var UNIT_UNDEFINED = YGEnums.UNIT_UNDEFINED = 0;
var UNIT_POINT = YGEnums.UNIT_POINT = 1;
var UNIT_PERCENT = YGEnums.UNIT_PERCENT = 2;
var UNIT_AUTO = YGEnums.UNIT_AUTO = 3;
var WRAP_NO_WRAP = YGEnums.WRAP_NO_WRAP = 0;
var WRAP_WRAP = YGEnums.WRAP_WRAP = 1;
var WRAP_WRAP_REVERSE = YGEnums.WRAP_WRAP_REVERSE = 2;
var wrapAsm = (E2) => {
  function _2(E3, _3, T2) {
    let N2 = E3[_3];
    E3[_3] = function(...E4) {
      return T2.call(this, N2, ...E4);
    };
  }
  for (let T2 of ["setPosition", "setMargin", "setFlexBasis", "setWidth", "setHeight", "setMinWidth", "setMinHeight", "setMaxWidth", "setMaxHeight", "setPadding"]) {
    let N2 = { [YGEnums.UNIT_POINT]: E2.Node.prototype[T2], [YGEnums.UNIT_PERCENT]: E2.Node.prototype[`${T2}Percent`], [YGEnums.UNIT_AUTO]: E2.Node.prototype[`${T2}Auto`] };
    _2(E2.Node.prototype, T2, function(E3, ..._3) {
      let I, L;
      let O = _3.pop();
      if ("auto" === O) I = YGEnums.UNIT_AUTO, L = void 0;
      else if ("object" == typeof O) I = O.unit, L = O.valueOf();
      else if (I = "string" == typeof O && O.endsWith("%") ? YGEnums.UNIT_PERCENT : YGEnums.UNIT_POINT, L = parseFloat(O), !Number.isNaN(O) && Number.isNaN(L)) throw Error(`Invalid value ${O} for ${T2}`);
      if (!N2[I]) throw Error(`Failed to execute "${T2}": Unsupported unit '${O}'`);
      return void 0 !== L ? N2[I].call(this, ..._3, L) : N2[I].call(this, ..._3);
    });
  }
  function T(_3) {
    return E2.MeasureCallback.implement({ measure: (...E3) => {
      let { width: T2, height: N2 } = _3(...E3);
      return { width: T2 ?? NaN, height: N2 ?? NaN };
    } });
  }
  function N(_3) {
    return E2.DirtiedCallback.implement({ dirtied: _3 });
  }
  return _2(E2.Node.prototype, "setMeasureFunc", function(E3, _3) {
    return _3 ? E3.call(this, T(_3)) : this.unsetMeasureFunc();
  }), _2(E2.Node.prototype, "setDirtiedFunc", function(E3, _3) {
    E3.call(this, N(_3));
  }), _2(E2.Config.prototype, "free", function() {
    E2.Config.destroy(this);
  }), _2(E2.Node, "create", (_3, T2) => T2 ? E2.Node.createWithConfig(T2) : E2.Node.createDefault()), _2(E2.Node.prototype, "free", function() {
    E2.Node.destroy(this);
  }), _2(E2.Node.prototype, "freeRecursive", function() {
    for (let E3 = 0, _3 = this.getChildCount(); E3 < _3; ++E3) this.getChild(0).freeRecursive();
    this.free();
  }), _2(E2.Node.prototype, "calculateLayout", function(E3, _3 = NaN, T2 = NaN, N2 = YGEnums.DIRECTION_LTR) {
    return E3.call(this, _3, T2, N2);
  }), { Config: E2.Config, Node: E2.Node, ...YGEnums };
};

// ../../node_modules/yoga-wasm-web/dist/index.js
var yoga = (() => {
  var n2 = "undefined" != typeof document && document.currentScript ? document.currentScript.src : void 0;
  return function(t3 = {}) {
    u || (u = void 0 !== t3 ? t3 : {}), u.ready = new Promise(function(n3, t4) {
      c2 = n3, f = t4;
    });
    var r2, e2, a2 = Object.assign({}, u), i2 = "";
    "undefined" != typeof document && document.currentScript && (i2 = document.currentScript.src), n2 && (i2 = n2), i2 = 0 !== i2.indexOf("blob:") ? i2.substr(0, i2.replace(/[?#].*/, "").lastIndexOf("/") + 1) : "";
    var o = console.log.bind(console), s2 = console.warn.bind(console);
    Object.assign(u, a2), a2 = null, "object" != typeof WebAssembly && w("no native wasm support detected");
    var u, c2, f, l, h = false;
    function p(n3, t4, r3) {
      r3 = t4 + r3;
      for (var e3 = ""; !(t4 >= r3); ) {
        var a3 = n3[t4++];
        if (!a3) break;
        if (128 & a3) {
          var i3 = 63 & n3[t4++];
          if (192 == (224 & a3)) e3 += String.fromCharCode((31 & a3) << 6 | i3);
          else {
            var o2 = 63 & n3[t4++];
            65536 > (a3 = 224 == (240 & a3) ? (15 & a3) << 12 | i3 << 6 | o2 : (7 & a3) << 18 | i3 << 12 | o2 << 6 | 63 & n3[t4++]) ? e3 += String.fromCharCode(a3) : (a3 -= 65536, e3 += String.fromCharCode(55296 | a3 >> 10, 56320 | 1023 & a3));
          }
        } else e3 += String.fromCharCode(a3);
      }
      return e3;
    }
    function v() {
      var n3 = l.buffer;
      u.HEAP8 = d = new Int8Array(n3), u.HEAP16 = m = new Int16Array(n3), u.HEAP32 = g = new Int32Array(n3), u.HEAPU8 = y = new Uint8Array(n3), u.HEAPU16 = E2 = new Uint16Array(n3), u.HEAPU32 = _2 = new Uint32Array(n3), u.HEAPF32 = T = new Float32Array(n3), u.HEAPF64 = L = new Float64Array(n3);
    }
    var d, y, m, E2, g, _2, T, L, A, O = [], P = [], b = [], N = 0, I = null;
    function w(n3) {
      throw s2(n3 = "Aborted(" + n3 + ")"), h = true, f(n3 = new WebAssembly.RuntimeError(n3 + ". Build with -sASSERTIONS for more info.")), n3;
    }
    function S() {
      return r2.startsWith("data:application/octet-stream;base64,");
    }
    function R() {
      try {
        throw "both async and sync fetching of the wasm failed";
      } catch (n3) {
        w(n3);
      }
    }
    function C(n3) {
      for (; 0 < n3.length; ) n3.shift()(u);
    }
    function W(n3) {
      if (void 0 === n3) return "_unknown";
      var t4 = (n3 = n3.replace(/[^a-zA-Z0-9_]/g, "$")).charCodeAt(0);
      return 48 <= t4 && 57 >= t4 ? "_" + n3 : n3;
    }
    function U(n3, t4) {
      return n3 = W(n3), function() {
        return t4.apply(this, arguments);
      };
    }
    r2 = "yoga.wasm", S() || (r2 = i2 + r2);
    var M = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }], F = [];
    function D(n3) {
      var t4 = Error, r3 = U(n3, function(t5) {
        this.name = n3, this.message = t5, void 0 !== (t5 = Error(t5).stack) && (this.stack = this.toString() + "\n" + t5.replace(/^Error(:[^\n]*)?\n/, ""));
      });
      return r3.prototype = Object.create(t4.prototype), r3.prototype.constructor = r3, r3.prototype.toString = function() {
        return void 0 === this.message ? this.name : this.name + ": " + this.message;
      }, r3;
    }
    var k = void 0;
    function V(n3) {
      throw new k(n3);
    }
    var j = (n3) => (n3 || V("Cannot use deleted val. handle = " + n3), M[n3].value), G = (n3) => {
      switch (n3) {
        case void 0:
          return 1;
        case null:
          return 2;
        case true:
          return 3;
        case false:
          return 4;
        default:
          var t4 = F.length ? F.pop() : M.length;
          return M[t4] = { fa: 1, value: n3 }, t4;
      }
    }, Y = void 0, X = void 0;
    function B(n3) {
      for (var t4 = ""; y[n3]; ) t4 += X[y[n3++]];
      return t4;
    }
    var H = [];
    function x() {
      for (; H.length; ) {
        var n3 = H.pop();
        n3.L.Z = false, n3.delete();
      }
    }
    var z = void 0, $ = {};
    function Z(n3, t4) {
      for (void 0 === t4 && V("ptr should not be undefined"); n3.P; ) t4 = n3.aa(t4), n3 = n3.P;
      return t4;
    }
    var J = {};
    function q(n3) {
      var t4 = B(n3 = nz(n3));
      return nZ(n3), t4;
    }
    function K(n3, t4) {
      var r3 = J[n3];
      return void 0 === r3 && V(t4 + " has unknown type " + q(n3)), r3;
    }
    function Q() {
    }
    var nn = false;
    function nt(n3) {
      --n3.count.value, 0 === n3.count.value && (n3.S ? n3.T.V(n3.S) : n3.O.M.V(n3.N));
    }
    var nr = {}, ne = void 0;
    function na(n3) {
      throw new ne(n3);
    }
    function ni(n3, t4) {
      return t4.O && t4.N || na("makeClassHandle requires ptr and ptrType"), !!t4.T != !!t4.S && na("Both smartPtrType and smartPtr must be specified"), t4.count = { value: 1 }, no(Object.create(n3, { L: { value: t4 } }));
    }
    function no(n3) {
      return "undefined" == typeof FinalizationRegistry ? (no = (n4) => n4, n3) : (nn = new FinalizationRegistry((n4) => {
        nt(n4.L);
      }), no = (n4) => {
        var t4 = n4.L;
        return t4.S && nn.register(n4, { L: t4 }, n4), n4;
      }, Q = (n4) => {
        nn.unregister(n4);
      }, no(n3));
    }
    var ns = {};
    function nu(n3) {
      for (; n3.length; ) {
        var t4 = n3.pop();
        n3.pop()(t4);
      }
    }
    function nc(n3) {
      return this.fromWireType(g[n3 >> 2]);
    }
    var nf = {}, nl = {};
    function nh(n3, t4, r3) {
      function e3(t5) {
        (t5 = r3(t5)).length !== n3.length && na("Mismatched type converter count");
        for (var e4 = 0; e4 < n3.length; ++e4) nv(n3[e4], t5[e4]);
      }
      n3.forEach(function(n4) {
        nl[n4] = t4;
      });
      var a3 = Array(t4.length), i3 = [], o2 = 0;
      t4.forEach((n4, t5) => {
        J.hasOwnProperty(n4) ? a3[t5] = J[n4] : (i3.push(n4), nf.hasOwnProperty(n4) || (nf[n4] = []), nf[n4].push(() => {
          a3[t5] = J[n4], ++o2 === i3.length && e3(a3);
        }));
      }), 0 === i3.length && e3(a3);
    }
    function np(n3) {
      switch (n3) {
        case 1:
          return 0;
        case 2:
          return 1;
        case 4:
          return 2;
        case 8:
          return 3;
        default:
          throw TypeError("Unknown type size: " + n3);
      }
    }
    function nv(n3, t4, r3 = {}) {
      if (!("argPackAdvance" in t4)) throw TypeError("registerType registeredInstance requires argPackAdvance");
      var e3 = t4.name;
      if (n3 || V('type "' + e3 + '" must have a positive integer typeid pointer'), J.hasOwnProperty(n3)) {
        if (r3.ta) return;
        V("Cannot register type '" + e3 + "' twice");
      }
      J[n3] = t4, delete nl[n3], nf.hasOwnProperty(n3) && (t4 = nf[n3], delete nf[n3], t4.forEach((n4) => n4()));
    }
    function nd(n3) {
      V(n3.L.O.M.name + " instance already deleted");
    }
    function ny() {
    }
    function nm(n3, t4, r3) {
      if (void 0 === n3[t4].R) {
        var e3 = n3[t4];
        n3[t4] = function() {
          return n3[t4].R.hasOwnProperty(arguments.length) || V("Function '" + r3 + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + n3[t4].R + ")!"), n3[t4].R[arguments.length].apply(this, arguments);
        }, n3[t4].R = [], n3[t4].R[e3.Y] = e3;
      }
    }
    function nE(n3, t4, r3, e3, a3, i3, o2, s3) {
      this.name = n3, this.constructor = t4, this.W = r3, this.V = e3, this.P = a3, this.oa = i3, this.aa = o2, this.ma = s3, this.ia = [];
    }
    function ng(n3, t4, r3) {
      for (; t4 !== r3; ) t4.aa || V("Expected null or instance of " + r3.name + ", got an instance of " + t4.name), n3 = t4.aa(n3), t4 = t4.P;
      return n3;
    }
    function n_(n3, t4) {
      return null === t4 ? (this.da && V("null is not a valid " + this.name), 0) : (t4.L || V('Cannot pass "' + nC(t4) + '" as a ' + this.name), t4.L.N || V("Cannot pass deleted object as a pointer of type " + this.name), ng(t4.L.N, t4.L.O.M, this.M));
    }
    function nT(n3, t4) {
      if (null === t4) {
        if (this.da && V("null is not a valid " + this.name), this.ca) {
          var r3 = this.ea();
          return null !== n3 && n3.push(this.V, r3), r3;
        }
        return 0;
      }
      if (t4.L || V('Cannot pass "' + nC(t4) + '" as a ' + this.name), t4.L.N || V("Cannot pass deleted object as a pointer of type " + this.name), !this.ba && t4.L.O.ba && V("Cannot convert argument of type " + (t4.L.T ? t4.L.T.name : t4.L.O.name) + " to parameter type " + this.name), r3 = ng(t4.L.N, t4.L.O.M, this.M), this.ca) switch (void 0 === t4.L.S && V("Passing raw pointer to smart pointer is illegal"), this.Aa) {
        case 0:
          t4.L.T === this ? r3 = t4.L.S : V("Cannot convert argument of type " + (t4.L.T ? t4.L.T.name : t4.L.O.name) + " to parameter type " + this.name);
          break;
        case 1:
          r3 = t4.L.S;
          break;
        case 2:
          if (t4.L.T === this) r3 = t4.L.S;
          else {
            var e3 = t4.clone();
            r3 = this.wa(r3, G(function() {
              e3.delete();
            })), null !== n3 && n3.push(this.V, r3);
          }
          break;
        default:
          V("Unsupporting sharing policy");
      }
      return r3;
    }
    function nL(n3, t4) {
      return null === t4 ? (this.da && V("null is not a valid " + this.name), 0) : (t4.L || V('Cannot pass "' + nC(t4) + '" as a ' + this.name), t4.L.N || V("Cannot pass deleted object as a pointer of type " + this.name), t4.L.O.ba && V("Cannot convert argument of type " + t4.L.O.name + " to parameter type " + this.name), ng(t4.L.N, t4.L.O.M, this.M));
    }
    function nA(n3, t4, r3, e3) {
      this.name = n3, this.M = t4, this.da = r3, this.ba = e3, this.ca = false, this.V = this.wa = this.ea = this.ja = this.Aa = this.va = void 0, void 0 !== t4.P ? this.toWireType = nT : (this.toWireType = e3 ? n_ : nL, this.U = null);
    }
    var nO = [];
    function nP(n3) {
      var t4 = nO[n3];
      return t4 || (n3 >= nO.length && (nO.length = n3 + 1), nO[n3] = t4 = A.get(n3)), t4;
    }
    function nb(n3, t4) {
      var r3, e3, a3 = (n3 = B(n3)).includes("j") ? (r3 = n3, e3 = [], function() {
        if (e3.length = 0, Object.assign(e3, arguments), r3.includes("j")) {
          var n4 = u["dynCall_" + r3];
          n4 = e3 && e3.length ? n4.apply(null, [t4].concat(e3)) : n4.call(null, t4);
        } else n4 = nP(t4).apply(null, e3);
        return n4;
      }) : nP(t4);
      return "function" != typeof a3 && V("unknown function pointer with signature " + n3 + ": " + t4), a3;
    }
    var nN = void 0;
    function nI(n3, t4) {
      var r3 = [], e3 = {};
      throw t4.forEach(function n4(t5) {
        e3[t5] || J[t5] || (nl[t5] ? nl[t5].forEach(n4) : (r3.push(t5), e3[t5] = true));
      }), new nN(n3 + ": " + r3.map(q).join([", "]));
    }
    function nw(n3, t4, r3, e3, a3) {
      var i3 = t4.length;
      2 > i3 && V("argTypes array size mismatch! Must at least get return value and 'this' types!");
      var o2 = null !== t4[1] && null !== r3, s3 = false;
      for (r3 = 1; r3 < t4.length; ++r3) if (null !== t4[r3] && void 0 === t4[r3].U) {
        s3 = true;
        break;
      }
      var u2 = "void" !== t4[0].name, c3 = i3 - 2, f2 = Array(c3), l2 = [], h2 = [];
      return function() {
        if (arguments.length !== c3 && V("function " + n3 + " called with " + arguments.length + " arguments, expected " + c3 + " args!"), h2.length = 0, l2.length = o2 ? 2 : 1, l2[0] = a3, o2) {
          var r4 = t4[1].toWireType(h2, this);
          l2[1] = r4;
        }
        for (var i4 = 0; i4 < c3; ++i4) f2[i4] = t4[i4 + 2].toWireType(h2, arguments[i4]), l2.push(f2[i4]);
        if (i4 = e3.apply(null, l2), s3) nu(h2);
        else for (var p2 = o2 ? 1 : 2; p2 < t4.length; p2++) {
          var v2 = 1 === p2 ? r4 : f2[p2 - 2];
          null !== t4[p2].U && t4[p2].U(v2);
        }
        return u2 ? t4[0].fromWireType(i4) : void 0;
      };
    }
    function nS(n3, t4) {
      for (var r3 = [], e3 = 0; e3 < n3; e3++) r3.push(_2[t4 + 4 * e3 >> 2]);
      return r3;
    }
    function nR(n3) {
      4 < n3 && 0 == --M[n3].fa && (M[n3] = void 0, F.push(n3));
    }
    function nC(n3) {
      if (null === n3) return "null";
      var t4 = typeof n3;
      return "object" === t4 || "array" === t4 || "function" === t4 ? n3.toString() : "" + n3;
    }
    function nW(n3, t4) {
      for (var r3 = "", e3 = 0; !(e3 >= t4 / 2); ++e3) {
        var a3 = m[n3 + 2 * e3 >> 1];
        if (0 == a3) break;
        r3 += String.fromCharCode(a3);
      }
      return r3;
    }
    function nU(n3, t4, r3) {
      if (void 0 === r3 && (r3 = 2147483647), 2 > r3) return 0;
      r3 -= 2;
      var e3 = t4;
      r3 = r3 < 2 * n3.length ? r3 / 2 : n3.length;
      for (var a3 = 0; a3 < r3; ++a3) m[t4 >> 1] = n3.charCodeAt(a3), t4 += 2;
      return m[t4 >> 1] = 0, t4 - e3;
    }
    function nM(n3) {
      return 2 * n3.length;
    }
    function nF(n3, t4) {
      for (var r3 = 0, e3 = ""; !(r3 >= t4 / 4); ) {
        var a3 = g[n3 + 4 * r3 >> 2];
        if (0 == a3) break;
        ++r3, 65536 <= a3 ? (a3 -= 65536, e3 += String.fromCharCode(55296 | a3 >> 10, 56320 | 1023 & a3)) : e3 += String.fromCharCode(a3);
      }
      return e3;
    }
    function nD(n3, t4, r3) {
      if (void 0 === r3 && (r3 = 2147483647), 4 > r3) return 0;
      var e3 = t4;
      r3 = e3 + r3 - 4;
      for (var a3 = 0; a3 < n3.length; ++a3) {
        var i3 = n3.charCodeAt(a3);
        if (55296 <= i3 && 57343 >= i3 && (i3 = 65536 + ((1023 & i3) << 10) | 1023 & n3.charCodeAt(++a3)), g[t4 >> 2] = i3, (t4 += 4) + 4 > r3) break;
      }
      return g[t4 >> 2] = 0, t4 - e3;
    }
    function nk(n3) {
      for (var t4 = 0, r3 = 0; r3 < n3.length; ++r3) {
        var e3 = n3.charCodeAt(r3);
        55296 <= e3 && 57343 >= e3 && ++r3, t4 += 4;
      }
      return t4;
    }
    var nV = {};
    function nj(n3) {
      var t4 = nV[n3];
      return void 0 === t4 ? B(n3) : t4;
    }
    var nG = [], nY = [], nX = [null, [], []];
    k = u.BindingError = D("BindingError"), u.count_emval_handles = function() {
      for (var n3 = 0, t4 = 5; t4 < M.length; ++t4) void 0 !== M[t4] && ++n3;
      return n3;
    }, u.get_first_emval = function() {
      for (var n3 = 5; n3 < M.length; ++n3) if (void 0 !== M[n3]) return M[n3];
      return null;
    }, Y = u.PureVirtualError = D("PureVirtualError");
    for (var nB = Array(256), nH = 0; 256 > nH; ++nH) nB[nH] = String.fromCharCode(nH);
    X = nB, u.getInheritedInstanceCount = function() {
      return Object.keys($).length;
    }, u.getLiveInheritedInstances = function() {
      var n3, t4 = [];
      for (n3 in $) $.hasOwnProperty(n3) && t4.push($[n3]);
      return t4;
    }, u.flushPendingDeletes = x, u.setDelayFunction = function(n3) {
      z = n3, H.length && z && z(x);
    }, ne = u.InternalError = D("InternalError"), ny.prototype.isAliasOf = function(n3) {
      if (!(this instanceof ny && n3 instanceof ny)) return false;
      var t4 = this.L.O.M, r3 = this.L.N, e3 = n3.L.O.M;
      for (n3 = n3.L.N; t4.P; ) r3 = t4.aa(r3), t4 = t4.P;
      for (; e3.P; ) n3 = e3.aa(n3), e3 = e3.P;
      return t4 === e3 && r3 === n3;
    }, ny.prototype.clone = function() {
      if (this.L.N || nd(this), this.L.$) return this.L.count.value += 1, this;
      var n3 = no, t4 = Object, r3 = t4.create, e3 = Object.getPrototypeOf(this), a3 = this.L;
      return n3 = n3(r3.call(t4, e3, { L: { value: { count: a3.count, Z: a3.Z, $: a3.$, N: a3.N, O: a3.O, S: a3.S, T: a3.T } } })), n3.L.count.value += 1, n3.L.Z = false, n3;
    }, ny.prototype.delete = function() {
      this.L.N || nd(this), this.L.Z && !this.L.$ && V("Object already scheduled for deletion"), Q(this), nt(this.L), this.L.$ || (this.L.S = void 0, this.L.N = void 0);
    }, ny.prototype.isDeleted = function() {
      return !this.L.N;
    }, ny.prototype.deleteLater = function() {
      return this.L.N || nd(this), this.L.Z && !this.L.$ && V("Object already scheduled for deletion"), H.push(this), 1 === H.length && z && z(x), this.L.Z = true, this;
    }, nA.prototype.pa = function(n3) {
      return this.ja && (n3 = this.ja(n3)), n3;
    }, nA.prototype.ga = function(n3) {
      this.V && this.V(n3);
    }, nA.prototype.argPackAdvance = 8, nA.prototype.readValueFromPointer = nc, nA.prototype.deleteObject = function(n3) {
      null !== n3 && n3.delete();
    }, nA.prototype.fromWireType = function(n3) {
      function t4() {
        return this.ca ? ni(this.M.W, { O: this.va, N: e3, T: this, S: n3 }) : ni(this.M.W, { O: this, N: n3 });
      }
      var r3, e3 = this.pa(n3);
      if (!e3) return this.ga(n3), null;
      var a3 = $[Z(this.M, e3)];
      if (void 0 !== a3) return 0 === a3.L.count.value ? (a3.L.N = e3, a3.L.S = n3, a3.clone()) : (a3 = a3.clone(), this.ga(n3), a3);
      if (!(a3 = nr[a3 = this.M.oa(e3)])) return t4.call(this);
      a3 = this.ba ? a3.ka : a3.pointerType;
      var i3 = function n4(t5, r4, e4) {
        return r4 === e4 ? t5 : void 0 === e4.P ? null : null === (t5 = n4(t5, r4, e4.P)) ? null : e4.ma(t5);
      }(e3, this.M, a3.M);
      return null === i3 ? t4.call(this) : this.ca ? ni(a3.M.W, { O: a3, N: i3, T: this, S: n3 }) : ni(a3.M.W, { O: a3, N: i3 });
    }, nN = u.UnboundTypeError = D("UnboundTypeError");
    var nx = { q: function(n3, t4, r3) {
      n3 = B(n3), t4 = K(t4, "wrapper"), r3 = j(r3);
      var e3 = [].slice, a3 = t4.M, i3 = a3.W, o2 = a3.P.W, s3 = a3.P.constructor;
      for (var u2 in n3 = U(n3, function() {
        a3.P.ia.forEach(function(n4) {
          if (this[n4] === o2[n4]) throw new Y("Pure virtual function " + n4 + " must be implemented in JavaScript");
        }.bind(this)), Object.defineProperty(this, "__parent", { value: i3 }), this.__construct.apply(this, e3.call(arguments));
      }), i3.__construct = function() {
        this === i3 && V("Pass correct 'this' to __construct");
        var n4 = s3.implement.apply(void 0, [this].concat(e3.call(arguments)));
        Q(n4);
        var t5 = n4.L;
        n4.notifyOnDestruction(), t5.$ = true, Object.defineProperties(this, { L: { value: t5 } }), no(this), n4 = Z(a3, n4 = t5.N), $.hasOwnProperty(n4) ? V("Tried to register registered instance: " + n4) : $[n4] = this;
      }, i3.__destruct = function() {
        this === i3 && V("Pass correct 'this' to __destruct"), Q(this);
        var n4 = this.L.N;
        n4 = Z(a3, n4), $.hasOwnProperty(n4) ? delete $[n4] : V("Tried to unregister unregistered instance: " + n4);
      }, n3.prototype = Object.create(i3), r3) n3.prototype[u2] = r3[u2];
      return G(n3);
    }, l: function(n3) {
      var t4 = ns[n3];
      delete ns[n3];
      var r3 = t4.ea, e3 = t4.V, a3 = t4.ha;
      nh([n3], a3.map((n4) => n4.sa).concat(a3.map((n4) => n4.ya)), (n4) => {
        var i3 = {};
        return a3.forEach((t5, r4) => {
          var e4 = n4[r4], o2 = t5.qa, s3 = t5.ra, u2 = n4[r4 + a3.length], c3 = t5.xa, f2 = t5.za;
          i3[t5.na] = { read: (n5) => e4.fromWireType(o2(s3, n5)), write: (n5, t6) => {
            var r5 = [];
            c3(f2, n5, u2.toWireType(r5, t6)), nu(r5);
          } };
        }), [{ name: t4.name, fromWireType: function(n5) {
          var t5, r4 = {};
          for (t5 in i3) r4[t5] = i3[t5].read(n5);
          return e3(n5), r4;
        }, toWireType: function(n5, t5) {
          for (var a4 in i3) if (!(a4 in t5)) throw TypeError('Missing field:  "' + a4 + '"');
          var o2 = r3();
          for (a4 in i3) i3[a4].write(o2, t5[a4]);
          return null !== n5 && n5.push(e3, o2), o2;
        }, argPackAdvance: 8, readValueFromPointer: nc, U: e3 }];
      });
    }, v: function() {
    }, B: function(n3, t4, r3, e3, a3) {
      var i3 = np(r3);
      nv(n3, { name: t4 = B(t4), fromWireType: function(n4) {
        return !!n4;
      }, toWireType: function(n4, t5) {
        return t5 ? e3 : a3;
      }, argPackAdvance: 8, readValueFromPointer: function(n4) {
        if (1 === r3) var e4 = d;
        else if (2 === r3) e4 = m;
        else if (4 === r3) e4 = g;
        else throw TypeError("Unknown boolean type size: " + t4);
        return this.fromWireType(e4[n4 >> i3]);
      }, U: null });
    }, h: function(n3, t4, r3, e3, a3, i3, o2, s3, c3, f2, l2, h2, p2) {
      l2 = B(l2), i3 = nb(a3, i3), s3 && (s3 = nb(o2, s3)), f2 && (f2 = nb(c3, f2)), p2 = nb(h2, p2);
      var v2, d2 = W(l2);
      v2 = function() {
        nI("Cannot construct " + l2 + " due to unbound types", [e3]);
      }, u.hasOwnProperty(d2) ? (V("Cannot register public name '" + d2 + "' twice"), nm(u, d2, d2), u.hasOwnProperty(void 0) && V("Cannot register multiple overloads of a function with the same number of arguments (undefined)!"), u[d2].R[void 0] = v2) : u[d2] = v2, nh([n3, t4, r3], e3 ? [e3] : [], function(t5) {
        if (t5 = t5[0], e3) var r4, a4 = t5.M, o3 = a4.W;
        else o3 = ny.prototype;
        t5 = U(d2, function() {
          if (Object.getPrototypeOf(this) !== c4) throw new k("Use 'new' to construct " + l2);
          if (void 0 === h3.X) throw new k(l2 + " has no accessible constructor");
          var n4 = h3.X[arguments.length];
          if (void 0 === n4) throw new k("Tried to invoke ctor of " + l2 + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(h3.X).toString() + ") parameters instead!");
          return n4.apply(this, arguments);
        });
        var c4 = Object.create(o3, { constructor: { value: t5 } });
        t5.prototype = c4;
        var h3 = new nE(l2, t5, c4, p2, a4, i3, s3, f2);
        a4 = new nA(l2, h3, true, false), o3 = new nA(l2 + "*", h3, false, false);
        var v3 = new nA(l2 + " const*", h3, false, true);
        return nr[n3] = { pointerType: o3, ka: v3 }, r4 = t5, u.hasOwnProperty(d2) || na("Replacing nonexistant public symbol"), u[d2] = r4, u[d2].Y = void 0, [a4, o3, v3];
      });
    }, d: function(n3, t4, r3, e3, a3, i3, o2) {
      var s3 = nS(r3, e3);
      t4 = B(t4), i3 = nb(a3, i3), nh([], [n3], function(n4) {
        function e4() {
          nI("Cannot call " + a4 + " due to unbound types", s3);
        }
        var a4 = (n4 = n4[0]).name + "." + t4;
        t4.startsWith("@@") && (t4 = Symbol[t4.substring(2)]);
        var u2 = n4.M.constructor;
        return void 0 === u2[t4] ? (e4.Y = r3 - 1, u2[t4] = e4) : (nm(u2, t4, a4), u2[t4].R[r3 - 1] = e4), nh([], s3, function(n5) {
          return n5 = nw(a4, [n5[0], null].concat(n5.slice(1)), null, i3, o2), void 0 === u2[t4].R ? (n5.Y = r3 - 1, u2[t4] = n5) : u2[t4].R[r3 - 1] = n5, [];
        }), [];
      });
    }, p: function(n3, t4, r3, e3, a3, i3) {
      0 < t4 || w();
      var o2 = nS(t4, r3);
      a3 = nb(e3, a3), nh([], [n3], function(n4) {
        var r4 = "constructor " + (n4 = n4[0]).name;
        if (void 0 === n4.M.X && (n4.M.X = []), void 0 !== n4.M.X[t4 - 1]) throw new k("Cannot register multiple constructors with identical number of parameters (" + (t4 - 1) + ") for class '" + n4.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
        return n4.M.X[t4 - 1] = () => {
          nI("Cannot construct " + n4.name + " due to unbound types", o2);
        }, nh([], o2, function(e4) {
          return e4.splice(1, 0, null), n4.M.X[t4 - 1] = nw(r4, e4, null, a3, i3), [];
        }), [];
      });
    }, a: function(n3, t4, r3, e3, a3, i3, o2, s3) {
      var u2 = nS(r3, e3);
      t4 = B(t4), i3 = nb(a3, i3), nh([], [n3], function(n4) {
        function e4() {
          nI("Cannot call " + a4 + " due to unbound types", u2);
        }
        var a4 = (n4 = n4[0]).name + "." + t4;
        t4.startsWith("@@") && (t4 = Symbol[t4.substring(2)]), s3 && n4.M.ia.push(t4);
        var c3 = n4.M.W, f2 = c3[t4];
        return void 0 === f2 || void 0 === f2.R && f2.className !== n4.name && f2.Y === r3 - 2 ? (e4.Y = r3 - 2, e4.className = n4.name, c3[t4] = e4) : (nm(c3, t4, a4), c3[t4].R[r3 - 2] = e4), nh([], u2, function(e5) {
          return e5 = nw(a4, e5, n4, i3, o2), void 0 === c3[t4].R ? (e5.Y = r3 - 2, c3[t4] = e5) : c3[t4].R[r3 - 2] = e5, [];
        }), [];
      });
    }, A: function(n3, t4) {
      nv(n3, { name: t4 = B(t4), fromWireType: function(n4) {
        var t5 = j(n4);
        return nR(n4), t5;
      }, toWireType: function(n4, t5) {
        return G(t5);
      }, argPackAdvance: 8, readValueFromPointer: nc, U: null });
    }, n: function(n3, t4, r3) {
      r3 = np(r3), nv(n3, { name: t4 = B(t4), fromWireType: function(n4) {
        return n4;
      }, toWireType: function(n4, t5) {
        return t5;
      }, argPackAdvance: 8, readValueFromPointer: function(n4, t5) {
        switch (t5) {
          case 2:
            return function(n5) {
              return this.fromWireType(T[n5 >> 2]);
            };
          case 3:
            return function(n5) {
              return this.fromWireType(L[n5 >> 3]);
            };
          default:
            throw TypeError("Unknown float type: " + n4);
        }
      }(t4, r3), U: null });
    }, e: function(n3, t4, r3, e3, a3) {
      t4 = B(t4), -1 === a3 && (a3 = 4294967295), a3 = np(r3);
      var i3 = (n4) => n4;
      if (0 === e3) {
        var o2 = 32 - 8 * r3;
        i3 = (n4) => n4 << o2 >>> o2;
      }
      r3 = t4.includes("unsigned") ? function(n4, t5) {
        return t5 >>> 0;
      } : function(n4, t5) {
        return t5;
      }, nv(n3, { name: t4, fromWireType: i3, toWireType: r3, argPackAdvance: 8, readValueFromPointer: function(n4, t5, r4) {
        switch (t5) {
          case 0:
            return r4 ? function(n5) {
              return d[n5];
            } : function(n5) {
              return y[n5];
            };
          case 1:
            return r4 ? function(n5) {
              return m[n5 >> 1];
            } : function(n5) {
              return E2[n5 >> 1];
            };
          case 2:
            return r4 ? function(n5) {
              return g[n5 >> 2];
            } : function(n5) {
              return _2[n5 >> 2];
            };
          default:
            throw TypeError("Unknown integer type: " + n4);
        }
      }(t4, a3, 0 !== e3), U: null });
    }, b: function(n3, t4, r3) {
      function e3(n4) {
        n4 >>= 2;
        var t5 = _2;
        return new a3(t5.buffer, t5[n4 + 1], t5[n4]);
      }
      var a3 = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array][t4];
      nv(n3, { name: r3 = B(r3), fromWireType: e3, argPackAdvance: 8, readValueFromPointer: e3 }, { ta: true });
    }, o: function(n3, t4) {
      var r3 = "std::string" === (t4 = B(t4));
      nv(n3, { name: t4, fromWireType: function(n4) {
        var t5 = _2[n4 >> 2], e3 = n4 + 4;
        if (r3) for (var a3 = e3, i3 = 0; i3 <= t5; ++i3) {
          var o2 = e3 + i3;
          if (i3 == t5 || 0 == y[o2]) {
            if (a3 = a3 ? p(y, a3, o2 - a3) : "", void 0 === s3) var s3 = a3;
            else s3 += "\0" + a3;
            a3 = o2 + 1;
          }
        }
        else {
          for (i3 = 0, s3 = Array(t5); i3 < t5; ++i3) s3[i3] = String.fromCharCode(y[e3 + i3]);
          s3 = s3.join("");
        }
        return nZ(n4), s3;
      }, toWireType: function(n4, t5) {
        t5 instanceof ArrayBuffer && (t5 = new Uint8Array(t5));
        var e3, a3 = "string" == typeof t5;
        if (a3 || t5 instanceof Uint8Array || t5 instanceof Uint8ClampedArray || t5 instanceof Int8Array || V("Cannot pass non-string to std::string"), r3 && a3) {
          var i3 = 0;
          for (e3 = 0; e3 < t5.length; ++e3) {
            var o2 = t5.charCodeAt(e3);
            127 >= o2 ? i3++ : 2047 >= o2 ? i3 += 2 : 55296 <= o2 && 57343 >= o2 ? (i3 += 4, ++e3) : i3 += 3;
          }
          e3 = i3;
        } else e3 = t5.length;
        if (o2 = (i3 = n$(4 + e3 + 1)) + 4, _2[i3 >> 2] = e3, r3 && a3) {
          if (a3 = o2, o2 = e3 + 1, e3 = y, 0 < o2) {
            o2 = a3 + o2 - 1;
            for (var s3 = 0; s3 < t5.length; ++s3) {
              var u2 = t5.charCodeAt(s3);
              if (55296 <= u2 && 57343 >= u2 && (u2 = 65536 + ((1023 & u2) << 10) | 1023 & t5.charCodeAt(++s3)), 127 >= u2) {
                if (a3 >= o2) break;
                e3[a3++] = u2;
              } else {
                if (2047 >= u2) {
                  if (a3 + 1 >= o2) break;
                  e3[a3++] = 192 | u2 >> 6;
                } else {
                  if (65535 >= u2) {
                    if (a3 + 2 >= o2) break;
                    e3[a3++] = 224 | u2 >> 12;
                  } else {
                    if (a3 + 3 >= o2) break;
                    e3[a3++] = 240 | u2 >> 18, e3[a3++] = 128 | u2 >> 12 & 63;
                  }
                  e3[a3++] = 128 | u2 >> 6 & 63;
                }
                e3[a3++] = 128 | 63 & u2;
              }
            }
            e3[a3] = 0;
          }
        } else if (a3) for (a3 = 0; a3 < e3; ++a3) 255 < (s3 = t5.charCodeAt(a3)) && (nZ(o2), V("String has UTF-16 code units that do not fit in 8 bits")), y[o2 + a3] = s3;
        else for (a3 = 0; a3 < e3; ++a3) y[o2 + a3] = t5[a3];
        return null !== n4 && n4.push(nZ, i3), i3;
      }, argPackAdvance: 8, readValueFromPointer: nc, U: function(n4) {
        nZ(n4);
      } });
    }, k: function(n3, t4, r3) {
      if (r3 = B(r3), 2 === t4) var e3 = nW, a3 = nU, i3 = nM, o2 = () => E2, s3 = 1;
      else 4 === t4 && (e3 = nF, a3 = nD, i3 = nk, o2 = () => _2, s3 = 2);
      nv(n3, { name: r3, fromWireType: function(n4) {
        for (var r4, a4 = _2[n4 >> 2], i4 = o2(), u2 = n4 + 4, c3 = 0; c3 <= a4; ++c3) {
          var f2 = n4 + 4 + c3 * t4;
          (c3 == a4 || 0 == i4[f2 >> s3]) && (u2 = e3(u2, f2 - u2), void 0 === r4 ? r4 = u2 : r4 += "\0" + u2, u2 = f2 + t4);
        }
        return nZ(n4), r4;
      }, toWireType: function(n4, e4) {
        "string" != typeof e4 && V("Cannot pass non-string to C++ string type " + r3);
        var o3 = i3(e4), u2 = n$(4 + o3 + t4);
        return _2[u2 >> 2] = o3 >> s3, a3(e4, u2 + 4, o3 + t4), null !== n4 && n4.push(nZ, u2), u2;
      }, argPackAdvance: 8, readValueFromPointer: nc, U: function(n4) {
        nZ(n4);
      } });
    }, m: function(n3, t4, r3, e3, a3, i3) {
      ns[n3] = { name: B(t4), ea: nb(r3, e3), V: nb(a3, i3), ha: [] };
    }, c: function(n3, t4, r3, e3, a3, i3, o2, s3, u2, c3) {
      ns[n3].ha.push({ na: B(t4), sa: r3, qa: nb(e3, a3), ra: i3, ya: o2, xa: nb(s3, u2), za: c3 });
    }, C: function(n3, t4) {
      nv(n3, { ua: true, name: t4 = B(t4), argPackAdvance: 0, fromWireType: function() {
      }, toWireType: function() {
      } });
    }, t: function(n3, t4, r3, e3, a3) {
      n3 = nG[n3], t4 = j(t4), r3 = nj(r3);
      var i3 = [];
      return _2[e3 >> 2] = G(i3), n3(t4, r3, i3, a3);
    }, j: function(n3, t4, r3, e3) {
      n3 = nG[n3], n3(t4 = j(t4), r3 = nj(r3), null, e3);
    }, f: nR, g: function(n3, t4) {
      var r3, e3, a3 = function(n4, t5) {
        for (var r4 = Array(n4), e4 = 0; e4 < n4; ++e4) r4[e4] = K(_2[t5 + 4 * e4 >> 2], "parameter " + e4);
        return r4;
      }(n3, t4), i3 = a3[0], o2 = nY[t4 = i3.name + "_$" + a3.slice(1).map(function(n4) {
        return n4.name;
      }).join("_") + "$"];
      if (void 0 !== o2) return o2;
      var s3 = Array(n3 - 1);
      return r3 = (t5, r4, e4, o3) => {
        for (var u2 = 0, c3 = 0; c3 < n3 - 1; ++c3) s3[c3] = a3[c3 + 1].readValueFromPointer(o3 + u2), u2 += a3[c3 + 1].argPackAdvance;
        for (c3 = 0, t5 = t5[r4].apply(t5, s3); c3 < n3 - 1; ++c3) a3[c3 + 1].la && a3[c3 + 1].la(s3[c3]);
        if (!i3.ua) return i3.toWireType(e4, t5);
      }, e3 = nG.length, nG.push(r3), o2 = e3, nY[t4] = o2;
    }, r: function(n3) {
      4 < n3 && (M[n3].fa += 1);
    }, s: function(n3) {
      nu(j(n3)), nR(n3);
    }, i: function() {
      w("");
    }, x: function(n3, t4, r3) {
      y.copyWithin(n3, t4, t4 + r3);
    }, w: function(n3) {
      var t4 = y.length;
      if (2147483648 < (n3 >>>= 0)) return false;
      for (var r3 = 1; 4 >= r3; r3 *= 2) {
        var e3 = t4 * (1 + 0.2 / r3);
        e3 = Math.min(e3, n3 + 100663296);
        var a3 = Math, i3 = a3.min;
        e3 = Math.max(n3, e3), e3 += (65536 - e3 % 65536) % 65536;
        n: {
          var o2 = l.buffer;
          try {
            l.grow(i3.call(a3, 2147483648, e3) - o2.byteLength + 65535 >>> 16), v();
            var s3 = 1;
            break n;
          } catch (n4) {
          }
          s3 = void 0;
        }
        if (s3) return true;
      }
      return false;
    }, z: function() {
      return 52;
    }, u: function() {
      return 70;
    }, y: function(n3, t4, r3, e3) {
      for (var a3 = 0, i3 = 0; i3 < r3; i3++) {
        var u2 = _2[t4 >> 2], c3 = _2[t4 + 4 >> 2];
        t4 += 8;
        for (var f2 = 0; f2 < c3; f2++) {
          var l2 = y[u2 + f2], h2 = nX[n3];
          0 === l2 || 10 === l2 ? ((1 === n3 ? o : s2)(p(h2, 0)), h2.length = 0) : h2.push(l2);
        }
        a3 += c3;
      }
      return _2[e3 >> 2] = a3, 0;
    } };
    !function() {
      function n3(n4) {
        u.asm = n4.exports, l = u.asm.D, v(), A = u.asm.I, P.unshift(u.asm.E), 0 == --N && I && (n4 = I, I = null, n4());
      }
      function t4(t5) {
        n3(t5.instance);
      }
      function e3(n4) {
        return ("function" == typeof fetch ? fetch(r2, { credentials: "same-origin" }).then(function(n5) {
          if (!n5.ok) throw "failed to load wasm binary file at '" + r2 + "'";
          return n5.arrayBuffer();
        }).catch(function() {
          return R();
        }) : Promise.resolve().then(function() {
          return R();
        })).then(function(n5) {
          return WebAssembly.instantiate(n5, a3);
        }).then(function(n5) {
          return n5;
        }).then(n4, function(n5) {
          s2("failed to asynchronously prepare wasm: " + n5), w(n5);
        });
      }
      var a3 = { a: nx };
      if (N++, u.instantiateWasm) try {
        return u.instantiateWasm(a3, n3);
      } catch (n4) {
        s2("Module.instantiateWasm callback failed with error: " + n4), f(n4);
      }
      ("function" != typeof WebAssembly.instantiateStreaming || S() || "function" != typeof fetch ? e3(t4) : fetch(r2, { credentials: "same-origin" }).then(function(n4) {
        return WebAssembly.instantiateStreaming(n4, a3).then(t4, function(n5) {
          return s2("wasm streaming compile failed: " + n5), s2("falling back to ArrayBuffer instantiation"), e3(t4);
        });
      })).catch(f);
    }();
    var nz = u.___getTypeName = function() {
      return (nz = u.___getTypeName = u.asm.F).apply(null, arguments);
    };
    function n$() {
      return (n$ = u.asm.H).apply(null, arguments);
    }
    function nZ() {
      return (nZ = u.asm.J).apply(null, arguments);
    }
    function nJ() {
      0 < N || (C(O), 0 < N || e2 || (e2 = true, u.calledRun = true, h || (C(P), c2(u), C(b))));
    }
    return u.__embind_initialize_bindings = function() {
      return (u.__embind_initialize_bindings = u.asm.G).apply(null, arguments);
    }, u.dynCall_jiji = function() {
      return (u.dynCall_jiji = u.asm.K).apply(null, arguments);
    }, I = function n3() {
      e2 || nJ(), e2 || (I = n3);
    }, nJ(), t3.ready;
  };
})();
async function initYoga(t3) {
  let r2 = await yoga({ instantiateWasm(n2, r3) {
    WebAssembly.instantiate(t3, n2).then((n3) => {
      n3 instanceof WebAssembly.Instance ? r3(n3) : r3(n3.instance);
    });
  } });
  return wrapAsm(r2);
}

// ../../node_modules/yoga-wasm-web/dist/node.js
var Yoga = await initYoga(await E(_(import.meta.url).resolve("./yoga.wasm")));

// ../../node_modules/ink/build/reconciler.js
init_esm_shims();
var import_react_reconciler = __toESM(require_react_reconciler(), 1);
var import_constants = __toESM(require_constants(), 1);
import process3 from "node:process";

// ../../node_modules/ink/build/dom.js
init_esm_shims();

// ../../node_modules/ink/build/measure-text.js
init_esm_shims();

// ../../node_modules/widest-line/index.js
init_esm_shims();

// ../../node_modules/widest-line/node_modules/string-width/index.js
init_esm_shims();
var import_eastasianwidth = __toESM(require_eastasianwidth(), 1);
var import_emoji_regex = __toESM(require_emoji_regex(), 1);
function stringWidth(string, options = {}) {
  if (typeof string !== "string" || string.length === 0) {
    return 0;
  }
  options = {
    ambiguousIsNarrow: true,
    ...options
  };
  string = stripAnsi(string);
  if (string.length === 0) {
    return 0;
  }
  string = string.replace((0, import_emoji_regex.default)(), "  ");
  const ambiguousCharacterWidth = options.ambiguousIsNarrow ? 1 : 2;
  let width = 0;
  for (const character of string) {
    const codePoint = character.codePointAt(0);
    if (codePoint <= 31 || codePoint >= 127 && codePoint <= 159) {
      continue;
    }
    if (codePoint >= 768 && codePoint <= 879) {
      continue;
    }
    const code = import_eastasianwidth.default.eastAsianWidth(character);
    switch (code) {
      case "F":
      case "W":
        width += 2;
        break;
      case "A":
        width += ambiguousCharacterWidth;
        break;
      default:
        width += 1;
    }
  }
  return width;
}

// ../../node_modules/widest-line/index.js
function widestLine(string) {
  let lineWidth = 0;
  for (const line of string.split("\n")) {
    lineWidth = Math.max(lineWidth, stringWidth(line));
  }
  return lineWidth;
}

// ../../node_modules/ink/build/measure-text.js
var cache = {};
var measureText = (text) => {
  if (text.length === 0) {
    return {
      width: 0,
      height: 0
    };
  }
  const cachedDimensions = cache[text];
  if (cachedDimensions) {
    return cachedDimensions;
  }
  const width = widestLine(text);
  const height = text.split("\n").length;
  cache[text] = { width, height };
  return { width, height };
};
var measure_text_default = measureText;

// ../../node_modules/ink/build/wrap-text.js
init_esm_shims();

// ../../node_modules/ink/node_modules/wrap-ansi/index.js
init_esm_shims();

// ../../node_modules/ink/node_modules/string-width/index.js
init_esm_shims();
var import_eastasianwidth2 = __toESM(require_eastasianwidth(), 1);
var import_emoji_regex2 = __toESM(require_emoji_regex2(), 1);
function stringWidth2(string, options = {}) {
  if (typeof string !== "string" || string.length === 0) {
    return 0;
  }
  options = {
    ambiguousIsNarrow: true,
    ...options
  };
  string = stripAnsi(string);
  if (string.length === 0) {
    return 0;
  }
  string = string.replace((0, import_emoji_regex2.default)(), "  ");
  const ambiguousCharacterWidth = options.ambiguousIsNarrow ? 1 : 2;
  let width = 0;
  for (const character of string) {
    const codePoint = character.codePointAt(0);
    if (codePoint <= 31 || codePoint >= 127 && codePoint <= 159) {
      continue;
    }
    if (codePoint >= 768 && codePoint <= 879) {
      continue;
    }
    const code = import_eastasianwidth2.default.eastAsianWidth(character);
    switch (code) {
      case "F":
      case "W":
        width += 2;
        break;
      case "A":
        width += ambiguousCharacterWidth;
        break;
      default:
        width += 1;
    }
  }
  return width;
}

// ../../node_modules/ansi-styles/index.js
init_esm_shims();
var ANSI_BACKGROUND_OFFSET = 10;
var wrapAnsi16 = (offset = 0) => (code) => `\x1B[${code + offset}m`;
var wrapAnsi256 = (offset = 0) => (code) => `\x1B[${38 + offset};5;${code}m`;
var wrapAnsi16m = (offset = 0) => (red, green, blue) => `\x1B[${38 + offset};2;${red};${green};${blue}m`;
var styles = {
  modifier: {
    reset: [0, 0],
    // 21 isn't widely supported and 22 does the same thing
    bold: [1, 22],
    dim: [2, 22],
    italic: [3, 23],
    underline: [4, 24],
    overline: [53, 55],
    inverse: [7, 27],
    hidden: [8, 28],
    strikethrough: [9, 29]
  },
  color: {
    black: [30, 39],
    red: [31, 39],
    green: [32, 39],
    yellow: [33, 39],
    blue: [34, 39],
    magenta: [35, 39],
    cyan: [36, 39],
    white: [37, 39],
    // Bright color
    blackBright: [90, 39],
    gray: [90, 39],
    // Alias of `blackBright`
    grey: [90, 39],
    // Alias of `blackBright`
    redBright: [91, 39],
    greenBright: [92, 39],
    yellowBright: [93, 39],
    blueBright: [94, 39],
    magentaBright: [95, 39],
    cyanBright: [96, 39],
    whiteBright: [97, 39]
  },
  bgColor: {
    bgBlack: [40, 49],
    bgRed: [41, 49],
    bgGreen: [42, 49],
    bgYellow: [43, 49],
    bgBlue: [44, 49],
    bgMagenta: [45, 49],
    bgCyan: [46, 49],
    bgWhite: [47, 49],
    // Bright color
    bgBlackBright: [100, 49],
    bgGray: [100, 49],
    // Alias of `bgBlackBright`
    bgGrey: [100, 49],
    // Alias of `bgBlackBright`
    bgRedBright: [101, 49],
    bgGreenBright: [102, 49],
    bgYellowBright: [103, 49],
    bgBlueBright: [104, 49],
    bgMagentaBright: [105, 49],
    bgCyanBright: [106, 49],
    bgWhiteBright: [107, 49]
  }
};
var modifierNames = Object.keys(styles.modifier);
var foregroundColorNames = Object.keys(styles.color);
var backgroundColorNames = Object.keys(styles.bgColor);
var colorNames = [...foregroundColorNames, ...backgroundColorNames];
function assembleStyles() {
  const codes = /* @__PURE__ */ new Map();
  for (const [groupName, group] of Object.entries(styles)) {
    for (const [styleName, style] of Object.entries(group)) {
      styles[styleName] = {
        open: `\x1B[${style[0]}m`,
        close: `\x1B[${style[1]}m`
      };
      group[styleName] = styles[styleName];
      codes.set(style[0], style[1]);
    }
    Object.defineProperty(styles, groupName, {
      value: group,
      enumerable: false
    });
  }
  Object.defineProperty(styles, "codes", {
    value: codes,
    enumerable: false
  });
  styles.color.close = "\x1B[39m";
  styles.bgColor.close = "\x1B[49m";
  styles.color.ansi = wrapAnsi16();
  styles.color.ansi256 = wrapAnsi256();
  styles.color.ansi16m = wrapAnsi16m();
  styles.bgColor.ansi = wrapAnsi16(ANSI_BACKGROUND_OFFSET);
  styles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);
  styles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);
  Object.defineProperties(styles, {
    rgbToAnsi256: {
      value: (red, green, blue) => {
        if (red === green && green === blue) {
          if (red < 8) {
            return 16;
          }
          if (red > 248) {
            return 231;
          }
          return Math.round((red - 8) / 247 * 24) + 232;
        }
        return 16 + 36 * Math.round(red / 255 * 5) + 6 * Math.round(green / 255 * 5) + Math.round(blue / 255 * 5);
      },
      enumerable: false
    },
    hexToRgb: {
      value: (hex) => {
        const matches = /[a-f\d]{6}|[a-f\d]{3}/i.exec(hex.toString(16));
        if (!matches) {
          return [0, 0, 0];
        }
        let [colorString] = matches;
        if (colorString.length === 3) {
          colorString = [...colorString].map((character) => character + character).join("");
        }
        const integer = Number.parseInt(colorString, 16);
        return [
          /* eslint-disable no-bitwise */
          integer >> 16 & 255,
          integer >> 8 & 255,
          integer & 255
          /* eslint-enable no-bitwise */
        ];
      },
      enumerable: false
    },
    hexToAnsi256: {
      value: (hex) => styles.rgbToAnsi256(...styles.hexToRgb(hex)),
      enumerable: false
    },
    ansi256ToAnsi: {
      value: (code) => {
        if (code < 8) {
          return 30 + code;
        }
        if (code < 16) {
          return 90 + (code - 8);
        }
        let red;
        let green;
        let blue;
        if (code >= 232) {
          red = ((code - 232) * 10 + 8) / 255;
          green = red;
          blue = red;
        } else {
          code -= 16;
          const remainder = code % 36;
          red = Math.floor(code / 36) / 5;
          green = Math.floor(remainder / 6) / 5;
          blue = remainder % 6 / 5;
        }
        const value2 = Math.max(red, green, blue) * 2;
        if (value2 === 0) {
          return 30;
        }
        let result = 30 + (Math.round(blue) << 2 | Math.round(green) << 1 | Math.round(red));
        if (value2 === 2) {
          result += 60;
        }
        return result;
      },
      enumerable: false
    },
    rgbToAnsi: {
      value: (red, green, blue) => styles.ansi256ToAnsi(styles.rgbToAnsi256(red, green, blue)),
      enumerable: false
    },
    hexToAnsi: {
      value: (hex) => styles.ansi256ToAnsi(styles.hexToAnsi256(hex)),
      enumerable: false
    }
  });
  return styles;
}
var ansiStyles = assembleStyles();
var ansi_styles_default = ansiStyles;

// ../../node_modules/ink/node_modules/wrap-ansi/index.js
var ESCAPES = /* @__PURE__ */ new Set([
  "\x1B",
  "\x9B"
]);
var END_CODE = 39;
var ANSI_ESCAPE_BELL = "\x07";
var ANSI_CSI = "[";
var ANSI_OSC = "]";
var ANSI_SGR_TERMINATOR = "m";
var ANSI_ESCAPE_LINK = `${ANSI_OSC}8;;`;
var wrapAnsiCode = (code) => `${ESCAPES.values().next().value}${ANSI_CSI}${code}${ANSI_SGR_TERMINATOR}`;
var wrapAnsiHyperlink = (uri) => `${ESCAPES.values().next().value}${ANSI_ESCAPE_LINK}${uri}${ANSI_ESCAPE_BELL}`;
var wordLengths = (string) => string.split(" ").map((character) => stringWidth2(character));
var wrapWord = (rows, word, columns) => {
  const characters = [...word];
  let isInsideEscape = false;
  let isInsideLinkEscape = false;
  let visible = stringWidth2(stripAnsi(rows[rows.length - 1]));
  for (const [index, character] of characters.entries()) {
    const characterLength = stringWidth2(character);
    if (visible + characterLength <= columns) {
      rows[rows.length - 1] += character;
    } else {
      rows.push(character);
      visible = 0;
    }
    if (ESCAPES.has(character)) {
      isInsideEscape = true;
      isInsideLinkEscape = characters.slice(index + 1).join("").startsWith(ANSI_ESCAPE_LINK);
    }
    if (isInsideEscape) {
      if (isInsideLinkEscape) {
        if (character === ANSI_ESCAPE_BELL) {
          isInsideEscape = false;
          isInsideLinkEscape = false;
        }
      } else if (character === ANSI_SGR_TERMINATOR) {
        isInsideEscape = false;
      }
      continue;
    }
    visible += characterLength;
    if (visible === columns && index < characters.length - 1) {
      rows.push("");
      visible = 0;
    }
  }
  if (!visible && rows[rows.length - 1].length > 0 && rows.length > 1) {
    rows[rows.length - 2] += rows.pop();
  }
};
var stringVisibleTrimSpacesRight = (string) => {
  const words = string.split(" ");
  let last = words.length;
  while (last > 0) {
    if (stringWidth2(words[last - 1]) > 0) {
      break;
    }
    last--;
  }
  if (last === words.length) {
    return string;
  }
  return words.slice(0, last).join(" ") + words.slice(last).join("");
};
var exec = (string, columns, options = {}) => {
  if (options.trim !== false && string.trim() === "") {
    return "";
  }
  let returnValue = "";
  let escapeCode;
  let escapeUrl;
  const lengths = wordLengths(string);
  let rows = [""];
  for (const [index, word] of string.split(" ").entries()) {
    if (options.trim !== false) {
      rows[rows.length - 1] = rows[rows.length - 1].trimStart();
    }
    let rowLength = stringWidth2(rows[rows.length - 1]);
    if (index !== 0) {
      if (rowLength >= columns && (options.wordWrap === false || options.trim === false)) {
        rows.push("");
        rowLength = 0;
      }
      if (rowLength > 0 || options.trim === false) {
        rows[rows.length - 1] += " ";
        rowLength++;
      }
    }
    if (options.hard && lengths[index] > columns) {
      const remainingColumns = columns - rowLength;
      const breaksStartingThisLine = 1 + Math.floor((lengths[index] - remainingColumns - 1) / columns);
      const breaksStartingNextLine = Math.floor((lengths[index] - 1) / columns);
      if (breaksStartingNextLine < breaksStartingThisLine) {
        rows.push("");
      }
      wrapWord(rows, word, columns);
      continue;
    }
    if (rowLength + lengths[index] > columns && rowLength > 0 && lengths[index] > 0) {
      if (options.wordWrap === false && rowLength < columns) {
        wrapWord(rows, word, columns);
        continue;
      }
      rows.push("");
    }
    if (rowLength + lengths[index] > columns && options.wordWrap === false) {
      wrapWord(rows, word, columns);
      continue;
    }
    rows[rows.length - 1] += word;
  }
  if (options.trim !== false) {
    rows = rows.map((row) => stringVisibleTrimSpacesRight(row));
  }
  const pre = [...rows.join("\n")];
  for (const [index, character] of pre.entries()) {
    returnValue += character;
    if (ESCAPES.has(character)) {
      const { groups } = new RegExp(`(?:\\${ANSI_CSI}(?<code>\\d+)m|\\${ANSI_ESCAPE_LINK}(?<uri>.*)${ANSI_ESCAPE_BELL})`).exec(pre.slice(index).join("")) || { groups: {} };
      if (groups.code !== void 0) {
        const code2 = Number.parseFloat(groups.code);
        escapeCode = code2 === END_CODE ? void 0 : code2;
      } else if (groups.uri !== void 0) {
        escapeUrl = groups.uri.length === 0 ? void 0 : groups.uri;
      }
    }
    const code = ansi_styles_default.codes.get(Number(escapeCode));
    if (pre[index + 1] === "\n") {
      if (escapeUrl) {
        returnValue += wrapAnsiHyperlink("");
      }
      if (escapeCode && code) {
        returnValue += wrapAnsiCode(code);
      }
    } else if (character === "\n") {
      if (escapeCode && code) {
        returnValue += wrapAnsiCode(escapeCode);
      }
      if (escapeUrl) {
        returnValue += wrapAnsiHyperlink(escapeUrl);
      }
    }
  }
  return returnValue;
};
function wrapAnsi(string, columns, options) {
  return String(string).normalize().replace(/\r\n/g, "\n").split("\n").map((line) => exec(line, columns, options)).join("\n");
}

// ../../node_modules/ink/node_modules/cli-truncate/index.js
init_esm_shims();

// ../../node_modules/ink/node_modules/cli-truncate/node_modules/slice-ansi/index.js
init_esm_shims();

// ../../node_modules/is-fullwidth-code-point/index.js
init_esm_shims();
function isFullwidthCodePoint(codePoint) {
  if (!Number.isInteger(codePoint)) {
    return false;
  }
  return codePoint >= 4352 && (codePoint <= 4447 || // Hangul Jamo
  codePoint === 9001 || // LEFT-POINTING ANGLE BRACKET
  codePoint === 9002 || // RIGHT-POINTING ANGLE BRACKET
  // CJK Radicals Supplement .. Enclosed CJK Letters and Months
  11904 <= codePoint && codePoint <= 12871 && codePoint !== 12351 || // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A
  12880 <= codePoint && codePoint <= 19903 || // CJK Unified Ideographs .. Yi Radicals
  19968 <= codePoint && codePoint <= 42182 || // Hangul Jamo Extended-A
  43360 <= codePoint && codePoint <= 43388 || // Hangul Syllables
  44032 <= codePoint && codePoint <= 55203 || // CJK Compatibility Ideographs
  63744 <= codePoint && codePoint <= 64255 || // Vertical Forms
  65040 <= codePoint && codePoint <= 65049 || // CJK Compatibility Forms .. Small Form Variants
  65072 <= codePoint && codePoint <= 65131 || // Halfwidth and Fullwidth Forms
  65281 <= codePoint && codePoint <= 65376 || 65504 <= codePoint && codePoint <= 65510 || // Kana Supplement
  110592 <= codePoint && codePoint <= 110593 || // Enclosed Ideographic Supplement
  127488 <= codePoint && codePoint <= 127569 || // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane
  131072 <= codePoint && codePoint <= 262141);
}

// ../../node_modules/ink/node_modules/cli-truncate/node_modules/slice-ansi/index.js
var astralRegex = /^[\uD800-\uDBFF][\uDC00-\uDFFF]$/;
var ESCAPES2 = [
  "\x1B",
  "\x9B"
];
var wrapAnsi2 = (code) => `${ESCAPES2[0]}[${code}m`;
var checkAnsi = (ansiCodes, isEscapes, endAnsiCode) => {
  let output = [];
  ansiCodes = [...ansiCodes];
  for (let ansiCode of ansiCodes) {
    const ansiCodeOrigin = ansiCode;
    if (ansiCode.includes(";")) {
      ansiCode = ansiCode.split(";")[0][0] + "0";
    }
    const item = ansi_styles_default.codes.get(Number.parseInt(ansiCode, 10));
    if (item) {
      const indexEscape = ansiCodes.indexOf(item.toString());
      if (indexEscape === -1) {
        output.push(wrapAnsi2(isEscapes ? item : ansiCodeOrigin));
      } else {
        ansiCodes.splice(indexEscape, 1);
      }
    } else if (isEscapes) {
      output.push(wrapAnsi2(0));
      break;
    } else {
      output.push(wrapAnsi2(ansiCodeOrigin));
    }
  }
  if (isEscapes) {
    output = output.filter((element, index) => output.indexOf(element) === index);
    if (endAnsiCode !== void 0) {
      const fistEscapeCode = wrapAnsi2(ansi_styles_default.codes.get(Number.parseInt(endAnsiCode, 10)));
      output = output.reduce((current, next) => next === fistEscapeCode ? [next, ...current] : [...current, next], []);
    }
  }
  return output.join("");
};
function sliceAnsi(string, begin, end) {
  const characters = [...string];
  const ansiCodes = [];
  let stringEnd = typeof end === "number" ? end : characters.length;
  let isInsideEscape = false;
  let ansiCode;
  let visible = 0;
  let output = "";
  for (const [index, character] of characters.entries()) {
    let leftEscape = false;
    if (ESCAPES2.includes(character)) {
      const code = /\d[^m]*/.exec(string.slice(index, index + 18));
      ansiCode = code && code.length > 0 ? code[0] : void 0;
      if (visible < stringEnd) {
        isInsideEscape = true;
        if (ansiCode !== void 0) {
          ansiCodes.push(ansiCode);
        }
      }
    } else if (isInsideEscape && character === "m") {
      isInsideEscape = false;
      leftEscape = true;
    }
    if (!isInsideEscape && !leftEscape) {
      visible++;
    }
    if (!astralRegex.test(character) && isFullwidthCodePoint(character.codePointAt())) {
      visible++;
      if (typeof end !== "number") {
        stringEnd++;
      }
    }
    if (visible > begin && visible <= stringEnd) {
      output += character;
    } else if (visible === begin && !isInsideEscape && ansiCode !== void 0) {
      output = checkAnsi(ansiCodes);
    } else if (visible >= stringEnd) {
      output += checkAnsi(ansiCodes, true, ansiCode);
      break;
    }
  }
  return output;
}

// ../../node_modules/ink/node_modules/cli-truncate/index.js
function getIndexOfNearestSpace(string, wantedIndex, shouldSearchRight) {
  if (string.charAt(wantedIndex) === " ") {
    return wantedIndex;
  }
  for (let index = 1; index <= 3; index++) {
    if (shouldSearchRight) {
      if (string.charAt(wantedIndex + index) === " ") {
        return wantedIndex + index;
      }
    } else if (string.charAt(wantedIndex - index) === " ") {
      return wantedIndex - index;
    }
  }
  return wantedIndex;
}
function cliTruncate(text, columns, options) {
  options = {
    position: "end",
    preferTruncationOnSpace: false,
    truncationCharacter: "\u2026",
    ...options
  };
  const { position, space, preferTruncationOnSpace } = options;
  let { truncationCharacter } = options;
  if (typeof text !== "string") {
    throw new TypeError(`Expected \`input\` to be a string, got ${typeof text}`);
  }
  if (typeof columns !== "number") {
    throw new TypeError(`Expected \`columns\` to be a number, got ${typeof columns}`);
  }
  if (columns < 1) {
    return "";
  }
  if (columns === 1) {
    return truncationCharacter;
  }
  const length = stringWidth2(text);
  if (length <= columns) {
    return text;
  }
  if (position === "start") {
    if (preferTruncationOnSpace) {
      const nearestSpace = getIndexOfNearestSpace(text, length - columns + 1, true);
      return truncationCharacter + sliceAnsi(text, nearestSpace, length).trim();
    }
    if (space === true) {
      truncationCharacter += " ";
    }
    return truncationCharacter + sliceAnsi(text, length - columns + stringWidth2(truncationCharacter), length);
  }
  if (position === "middle") {
    if (space === true) {
      truncationCharacter = ` ${truncationCharacter} `;
    }
    const half = Math.floor(columns / 2);
    if (preferTruncationOnSpace) {
      const spaceNearFirstBreakPoint = getIndexOfNearestSpace(text, half);
      const spaceNearSecondBreakPoint = getIndexOfNearestSpace(text, length - (columns - half) + 1, true);
      return sliceAnsi(text, 0, spaceNearFirstBreakPoint) + truncationCharacter + sliceAnsi(text, spaceNearSecondBreakPoint, length).trim();
    }
    return sliceAnsi(text, 0, half) + truncationCharacter + sliceAnsi(text, length - (columns - half) + stringWidth2(truncationCharacter), length);
  }
  if (position === "end") {
    if (preferTruncationOnSpace) {
      const nearestSpace = getIndexOfNearestSpace(text, columns - 1);
      return sliceAnsi(text, 0, nearestSpace) + truncationCharacter;
    }
    if (space === true) {
      truncationCharacter = ` ${truncationCharacter}`;
    }
    return sliceAnsi(text, 0, columns - stringWidth2(truncationCharacter)) + truncationCharacter;
  }
  throw new Error(`Expected \`options.position\` to be either \`start\`, \`middle\` or \`end\`, got ${position}`);
}

// ../../node_modules/ink/build/wrap-text.js
var cache2 = {};
var wrapText = (text, maxWidth, wrapType) => {
  const cacheKey = text + String(maxWidth) + String(wrapType);
  const cachedText = cache2[cacheKey];
  if (cachedText) {
    return cachedText;
  }
  let wrappedText = text;
  if (wrapType === "wrap") {
    wrappedText = wrapAnsi(text, maxWidth, {
      trim: false,
      hard: true
    });
  }
  if (wrapType.startsWith("truncate")) {
    let position = "end";
    if (wrapType === "truncate-middle") {
      position = "middle";
    }
    if (wrapType === "truncate-start") {
      position = "start";
    }
    wrappedText = cliTruncate(text, maxWidth, { position });
  }
  cache2[cacheKey] = wrappedText;
  return wrappedText;
};
var wrap_text_default = wrapText;

// ../../node_modules/ink/build/squash-text-nodes.js
init_esm_shims();
var squashTextNodes = (node) => {
  let text = "";
  if (node.childNodes.length > 0) {
    for (const childNode of node.childNodes) {
      let nodeText = "";
      if (childNode.nodeName === "#text") {
        nodeText = childNode.nodeValue;
      } else {
        if (childNode.nodeName === "ink-text" || childNode.nodeName === "ink-virtual-text") {
          nodeText = squashTextNodes(childNode);
        }
        if (nodeText.length > 0 && typeof childNode.internal_transform === "function") {
          nodeText = childNode.internal_transform(nodeText);
        }
      }
      text += nodeText;
    }
  }
  return text;
};
var squash_text_nodes_default = squashTextNodes;

// ../../node_modules/ink/build/dom.js
var createNode = (nodeName) => {
  const node = {
    nodeName,
    style: {},
    attributes: {},
    childNodes: [],
    parentNode: void 0,
    yogaNode: nodeName === "ink-virtual-text" ? void 0 : Yoga.Node.create()
  };
  if (nodeName === "ink-text") {
    node.yogaNode?.setMeasureFunc(measureTextNode.bind(null, node));
  }
  return node;
};
var appendChildNode = (node, childNode) => {
  if (childNode.parentNode) {
    removeChildNode(childNode.parentNode, childNode);
  }
  childNode.parentNode = node;
  node.childNodes.push(childNode);
  if (childNode.yogaNode) {
    node.yogaNode?.insertChild(childNode.yogaNode, node.yogaNode.getChildCount());
  }
  if (node.nodeName === "ink-text" || node.nodeName === "ink-virtual-text") {
    markNodeAsDirty(node);
  }
};
var insertBeforeNode = (node, newChildNode, beforeChildNode) => {
  if (newChildNode.parentNode) {
    removeChildNode(newChildNode.parentNode, newChildNode);
  }
  newChildNode.parentNode = node;
  const index = node.childNodes.indexOf(beforeChildNode);
  if (index >= 0) {
    node.childNodes.splice(index, 0, newChildNode);
    if (newChildNode.yogaNode) {
      node.yogaNode?.insertChild(newChildNode.yogaNode, index);
    }
    return;
  }
  node.childNodes.push(newChildNode);
  if (newChildNode.yogaNode) {
    node.yogaNode?.insertChild(newChildNode.yogaNode, node.yogaNode.getChildCount());
  }
  if (node.nodeName === "ink-text" || node.nodeName === "ink-virtual-text") {
    markNodeAsDirty(node);
  }
};
var removeChildNode = (node, removeNode) => {
  if (removeNode.yogaNode) {
    removeNode.parentNode?.yogaNode?.removeChild(removeNode.yogaNode);
  }
  removeNode.parentNode = void 0;
  const index = node.childNodes.indexOf(removeNode);
  if (index >= 0) {
    node.childNodes.splice(index, 1);
  }
  if (node.nodeName === "ink-text" || node.nodeName === "ink-virtual-text") {
    markNodeAsDirty(node);
  }
};
var setAttribute = (node, key, value2) => {
  node.attributes[key] = value2;
};
var setStyle = (node, style) => {
  node.style = style;
};
var createTextNode = (text) => {
  const node = {
    nodeName: "#text",
    nodeValue: text,
    yogaNode: void 0,
    parentNode: void 0,
    style: {}
  };
  setTextNodeValue(node, text);
  return node;
};
var measureTextNode = function(node, width) {
  const text = node.nodeName === "#text" ? node.nodeValue : squash_text_nodes_default(node);
  const dimensions = measure_text_default(text);
  if (dimensions.width <= width) {
    return dimensions;
  }
  if (dimensions.width >= 1 && width > 0 && width < 1) {
    return dimensions;
  }
  const textWrap = node.style?.textWrap ?? "wrap";
  const wrappedText = wrap_text_default(text, width, textWrap);
  return measure_text_default(wrappedText);
};
var findClosestYogaNode = (node) => {
  if (!node?.parentNode) {
    return void 0;
  }
  return node.yogaNode ?? findClosestYogaNode(node.parentNode);
};
var markNodeAsDirty = (node) => {
  const yogaNode = findClosestYogaNode(node);
  yogaNode?.markDirty();
};
var setTextNodeValue = (node, text) => {
  if (typeof text !== "string") {
    text = String(text);
  }
  node.nodeValue = text;
  markNodeAsDirty(node);
};

// ../../node_modules/ink/build/styles.js
init_esm_shims();
var applyPositionStyles = (node, style) => {
  if ("position" in style) {
    node.setPositionType(style.position === "absolute" ? Yoga.POSITION_TYPE_ABSOLUTE : Yoga.POSITION_TYPE_RELATIVE);
  }
};
var applyMarginStyles = (node, style) => {
  if ("margin" in style) {
    node.setMargin(Yoga.EDGE_ALL, style.margin ?? 0);
  }
  if ("marginX" in style) {
    node.setMargin(Yoga.EDGE_HORIZONTAL, style.marginX ?? 0);
  }
  if ("marginY" in style) {
    node.setMargin(Yoga.EDGE_VERTICAL, style.marginY ?? 0);
  }
  if ("marginLeft" in style) {
    node.setMargin(Yoga.EDGE_START, style.marginLeft || 0);
  }
  if ("marginRight" in style) {
    node.setMargin(Yoga.EDGE_END, style.marginRight || 0);
  }
  if ("marginTop" in style) {
    node.setMargin(Yoga.EDGE_TOP, style.marginTop || 0);
  }
  if ("marginBottom" in style) {
    node.setMargin(Yoga.EDGE_BOTTOM, style.marginBottom || 0);
  }
};
var applyPaddingStyles = (node, style) => {
  if ("padding" in style) {
    node.setPadding(Yoga.EDGE_ALL, style.padding ?? 0);
  }
  if ("paddingX" in style) {
    node.setPadding(Yoga.EDGE_HORIZONTAL, style.paddingX ?? 0);
  }
  if ("paddingY" in style) {
    node.setPadding(Yoga.EDGE_VERTICAL, style.paddingY ?? 0);
  }
  if ("paddingLeft" in style) {
    node.setPadding(Yoga.EDGE_LEFT, style.paddingLeft || 0);
  }
  if ("paddingRight" in style) {
    node.setPadding(Yoga.EDGE_RIGHT, style.paddingRight || 0);
  }
  if ("paddingTop" in style) {
    node.setPadding(Yoga.EDGE_TOP, style.paddingTop || 0);
  }
  if ("paddingBottom" in style) {
    node.setPadding(Yoga.EDGE_BOTTOM, style.paddingBottom || 0);
  }
};
var applyFlexStyles = (node, style) => {
  if ("flexGrow" in style) {
    node.setFlexGrow(style.flexGrow ?? 0);
  }
  if ("flexShrink" in style) {
    node.setFlexShrink(typeof style.flexShrink === "number" ? style.flexShrink : 1);
  }
  if ("flexWrap" in style) {
    if (style.flexWrap === "nowrap") {
      node.setFlexWrap(Yoga.WRAP_NO_WRAP);
    }
    if (style.flexWrap === "wrap") {
      node.setFlexWrap(Yoga.WRAP_WRAP);
    }
    if (style.flexWrap === "wrap-reverse") {
      node.setFlexWrap(Yoga.WRAP_WRAP_REVERSE);
    }
  }
  if ("flexDirection" in style) {
    if (style.flexDirection === "row") {
      node.setFlexDirection(Yoga.FLEX_DIRECTION_ROW);
    }
    if (style.flexDirection === "row-reverse") {
      node.setFlexDirection(Yoga.FLEX_DIRECTION_ROW_REVERSE);
    }
    if (style.flexDirection === "column") {
      node.setFlexDirection(Yoga.FLEX_DIRECTION_COLUMN);
    }
    if (style.flexDirection === "column-reverse") {
      node.setFlexDirection(Yoga.FLEX_DIRECTION_COLUMN_REVERSE);
    }
  }
  if ("flexBasis" in style) {
    if (typeof style.flexBasis === "number") {
      node.setFlexBasis(style.flexBasis);
    } else if (typeof style.flexBasis === "string") {
      node.setFlexBasisPercent(Number.parseInt(style.flexBasis, 10));
    } else {
      node.setFlexBasis(Number.NaN);
    }
  }
  if ("alignItems" in style) {
    if (style.alignItems === "stretch" || !style.alignItems) {
      node.setAlignItems(Yoga.ALIGN_STRETCH);
    }
    if (style.alignItems === "flex-start") {
      node.setAlignItems(Yoga.ALIGN_FLEX_START);
    }
    if (style.alignItems === "center") {
      node.setAlignItems(Yoga.ALIGN_CENTER);
    }
    if (style.alignItems === "flex-end") {
      node.setAlignItems(Yoga.ALIGN_FLEX_END);
    }
  }
  if ("alignSelf" in style) {
    if (style.alignSelf === "auto" || !style.alignSelf) {
      node.setAlignSelf(Yoga.ALIGN_AUTO);
    }
    if (style.alignSelf === "flex-start") {
      node.setAlignSelf(Yoga.ALIGN_FLEX_START);
    }
    if (style.alignSelf === "center") {
      node.setAlignSelf(Yoga.ALIGN_CENTER);
    }
    if (style.alignSelf === "flex-end") {
      node.setAlignSelf(Yoga.ALIGN_FLEX_END);
    }
  }
  if ("justifyContent" in style) {
    if (style.justifyContent === "flex-start" || !style.justifyContent) {
      node.setJustifyContent(Yoga.JUSTIFY_FLEX_START);
    }
    if (style.justifyContent === "center") {
      node.setJustifyContent(Yoga.JUSTIFY_CENTER);
    }
    if (style.justifyContent === "flex-end") {
      node.setJustifyContent(Yoga.JUSTIFY_FLEX_END);
    }
    if (style.justifyContent === "space-between") {
      node.setJustifyContent(Yoga.JUSTIFY_SPACE_BETWEEN);
    }
    if (style.justifyContent === "space-around") {
      node.setJustifyContent(Yoga.JUSTIFY_SPACE_AROUND);
    }
  }
};
var applyDimensionStyles = (node, style) => {
  if ("width" in style) {
    if (typeof style.width === "number") {
      node.setWidth(style.width);
    } else if (typeof style.width === "string") {
      node.setWidthPercent(Number.parseInt(style.width, 10));
    } else {
      node.setWidthAuto();
    }
  }
  if ("height" in style) {
    if (typeof style.height === "number") {
      node.setHeight(style.height);
    } else if (typeof style.height === "string") {
      node.setHeightPercent(Number.parseInt(style.height, 10));
    } else {
      node.setHeightAuto();
    }
  }
  if ("minWidth" in style) {
    if (typeof style.minWidth === "string") {
      node.setMinWidthPercent(Number.parseInt(style.minWidth, 10));
    } else {
      node.setMinWidth(style.minWidth ?? 0);
    }
  }
  if ("minHeight" in style) {
    if (typeof style.minHeight === "string") {
      node.setMinHeightPercent(Number.parseInt(style.minHeight, 10));
    } else {
      node.setMinHeight(style.minHeight ?? 0);
    }
  }
};
var applyDisplayStyles = (node, style) => {
  if ("display" in style) {
    node.setDisplay(style.display === "flex" ? Yoga.DISPLAY_FLEX : Yoga.DISPLAY_NONE);
  }
};
var applyBorderStyles = (node, style) => {
  if ("borderStyle" in style) {
    const borderWidth = style.borderStyle ? 1 : 0;
    if (style.borderTop !== false) {
      node.setBorder(Yoga.EDGE_TOP, borderWidth);
    }
    if (style.borderBottom !== false) {
      node.setBorder(Yoga.EDGE_BOTTOM, borderWidth);
    }
    if (style.borderLeft !== false) {
      node.setBorder(Yoga.EDGE_LEFT, borderWidth);
    }
    if (style.borderRight !== false) {
      node.setBorder(Yoga.EDGE_RIGHT, borderWidth);
    }
  }
};
var applyGapStyles = (node, style) => {
  if ("gap" in style) {
    node.setGap(Yoga.GUTTER_ALL, style.gap ?? 0);
  }
  if ("columnGap" in style) {
    node.setGap(Yoga.GUTTER_COLUMN, style.columnGap ?? 0);
  }
  if ("rowGap" in style) {
    node.setGap(Yoga.GUTTER_ROW, style.rowGap ?? 0);
  }
};
var styles2 = (node, style = {}) => {
  applyPositionStyles(node, style);
  applyMarginStyles(node, style);
  applyPaddingStyles(node, style);
  applyFlexStyles(node, style);
  applyDimensionStyles(node, style);
  applyDisplayStyles(node, style);
  applyBorderStyles(node, style);
  applyGapStyles(node, style);
};
var styles_default = styles2;

// ../../node_modules/ink/build/reconciler.js
if (process3.env["DEV"] === "true") {
  try {
    await import("./devtools-YPSDP32D.js");
  } catch (error) {
    if (error.code === "MODULE_NOT_FOUND") {
      console.warn(`
Debugging with React Devtools requires \`react-devtools-core\` dependency to be installed.

$ npm install --save-dev react-devtools-core
				`.trim() + "\n");
    } else {
      throw error;
    }
  }
}
var diff = (before, after) => {
  if (before === after) {
    return;
  }
  if (!before) {
    return after;
  }
  const changed = {};
  let isChanged = false;
  for (const key of Object.keys(before)) {
    const isDeleted = after ? !Object.hasOwnProperty.call(after, key) : true;
    if (isDeleted) {
      changed[key] = void 0;
      isChanged = true;
    }
  }
  if (after) {
    for (const key of Object.keys(after)) {
      if (after[key] !== before[key]) {
        changed[key] = after[key];
        isChanged = true;
      }
    }
  }
  return isChanged ? changed : void 0;
};
var cleanupYogaNode = (node) => {
  node?.unsetMeasureFunc();
  node?.freeRecursive();
};
var reconciler_default = (0, import_react_reconciler.default)({
  getRootHostContext: () => ({
    isInsideText: false
  }),
  prepareForCommit: () => null,
  preparePortalMount: () => null,
  clearContainer: () => false,
  resetAfterCommit(rootNode) {
    if (typeof rootNode.onComputeLayout === "function") {
      rootNode.onComputeLayout();
    }
    if (rootNode.isStaticDirty) {
      rootNode.isStaticDirty = false;
      if (typeof rootNode.onImmediateRender === "function") {
        rootNode.onImmediateRender();
      }
      return;
    }
    if (typeof rootNode.onRender === "function") {
      rootNode.onRender();
    }
  },
  getChildHostContext(parentHostContext, type) {
    const previousIsInsideText = parentHostContext.isInsideText;
    const isInsideText = type === "ink-text" || type === "ink-virtual-text";
    if (previousIsInsideText === isInsideText) {
      return parentHostContext;
    }
    return { isInsideText };
  },
  shouldSetTextContent: () => false,
  createInstance(originalType, newProps, _root, hostContext) {
    if (hostContext.isInsideText && originalType === "ink-box") {
      throw new Error(`<Box> can\u2019t be nested inside <Text> component`);
    }
    const type = originalType === "ink-text" && hostContext.isInsideText ? "ink-virtual-text" : originalType;
    const node = createNode(type);
    for (const [key, value2] of Object.entries(newProps)) {
      if (key === "children") {
        continue;
      }
      if (key === "style") {
        setStyle(node, value2);
        if (node.yogaNode) {
          styles_default(node.yogaNode, value2);
        }
        continue;
      }
      if (key === "internal_transform") {
        node.internal_transform = value2;
        continue;
      }
      if (key === "internal_static") {
        node.internal_static = true;
        continue;
      }
      setAttribute(node, key, value2);
    }
    return node;
  },
  createTextInstance(text, _root, hostContext) {
    if (!hostContext.isInsideText) {
      throw new Error(`Text string "${text}" must be rendered inside <Text> component`);
    }
    return createTextNode(text);
  },
  resetTextContent() {
  },
  hideTextInstance(node) {
    setTextNodeValue(node, "");
  },
  unhideTextInstance(node, text) {
    setTextNodeValue(node, text);
  },
  getPublicInstance: (instance2) => instance2,
  hideInstance(node) {
    node.yogaNode?.setDisplay(Yoga.DISPLAY_NONE);
  },
  unhideInstance(node) {
    node.yogaNode?.setDisplay(Yoga.DISPLAY_FLEX);
  },
  appendInitialChild: appendChildNode,
  appendChild: appendChildNode,
  insertBefore: insertBeforeNode,
  finalizeInitialChildren(node, _type, _props, rootNode) {
    if (node.internal_static) {
      rootNode.isStaticDirty = true;
      rootNode.staticNode = node;
    }
    return false;
  },
  isPrimaryRenderer: true,
  supportsMutation: true,
  supportsPersistence: false,
  supportsHydration: false,
  scheduleTimeout: setTimeout,
  cancelTimeout: clearTimeout,
  noTimeout: -1,
  getCurrentEventPriority: () => import_constants.DefaultEventPriority,
  beforeActiveInstanceBlur() {
  },
  afterActiveInstanceBlur() {
  },
  detachDeletedInstance() {
  },
  getInstanceFromNode: () => null,
  prepareScopeUpdate() {
  },
  getInstanceFromScope: () => null,
  appendChildToContainer: appendChildNode,
  insertInContainerBefore: insertBeforeNode,
  removeChildFromContainer(node, removeNode) {
    removeChildNode(node, removeNode);
    cleanupYogaNode(removeNode.yogaNode);
  },
  prepareUpdate(node, _type, oldProps, newProps, rootNode) {
    if (node.internal_static) {
      rootNode.isStaticDirty = true;
    }
    const props = diff(oldProps, newProps);
    const style = diff(oldProps["style"], newProps["style"]);
    if (!props && !style) {
      return null;
    }
    return { props, style };
  },
  commitUpdate(node, { props, style }) {
    if (props) {
      for (const [key, value2] of Object.entries(props)) {
        if (key === "style") {
          setStyle(node, value2);
          continue;
        }
        if (key === "internal_transform") {
          node.internal_transform = value2;
          continue;
        }
        if (key === "internal_static") {
          node.internal_static = true;
          continue;
        }
        setAttribute(node, key, value2);
      }
    }
    if (style && node.yogaNode) {
      styles_default(node.yogaNode, style);
    }
  },
  commitTextUpdate(node, _oldText, newText) {
    setTextNodeValue(node, newText);
  },
  removeChild(node, removeNode) {
    removeChildNode(node, removeNode);
    cleanupYogaNode(removeNode.yogaNode);
  }
});

// ../../node_modules/ink/build/renderer.js
init_esm_shims();

// ../../node_modules/ink/build/render-node-to-output.js
init_esm_shims();

// ../../node_modules/ink/node_modules/indent-string/index.js
init_esm_shims();
function indentString(string, count = 1, options = {}) {
  const {
    indent = " ",
    includeEmptyLines = false
  } = options;
  if (typeof string !== "string") {
    throw new TypeError(
      `Expected \`input\` to be a \`string\`, got \`${typeof string}\``
    );
  }
  if (typeof count !== "number") {
    throw new TypeError(
      `Expected \`count\` to be a \`number\`, got \`${typeof count}\``
    );
  }
  if (count < 0) {
    throw new RangeError(
      `Expected \`count\` to be at least 0, got \`${count}\``
    );
  }
  if (typeof indent !== "string") {
    throw new TypeError(
      `Expected \`options.indent\` to be a \`string\`, got \`${typeof indent}\``
    );
  }
  if (count === 0) {
    return string;
  }
  const regex = includeEmptyLines ? /^/gm : /^(?!\s*$)/gm;
  return string.replace(regex, indent.repeat(count));
}

// ../../node_modules/ink/build/get-max-width.js
init_esm_shims();
var getMaxWidth = (yogaNode) => {
  return yogaNode.getComputedWidth() - yogaNode.getComputedPadding(Yoga.EDGE_LEFT) - yogaNode.getComputedPadding(Yoga.EDGE_RIGHT) - yogaNode.getComputedBorder(Yoga.EDGE_LEFT) - yogaNode.getComputedBorder(Yoga.EDGE_RIGHT);
};
var get_max_width_default = getMaxWidth;

// ../../node_modules/ink/build/render-border.js
init_esm_shims();
var import_cli_boxes = __toESM(require_cli_boxes(), 1);

// ../../node_modules/ink/build/colorize.js
init_esm_shims();
var rgbRegex = /^rgb\(\s?(\d+),\s?(\d+),\s?(\d+)\s?\)$/;
var ansiRegex = /^ansi256\(\s?(\d+)\s?\)$/;
var isNamedColor = (color) => {
  return color in source_default;
};
var colorize = (str, color, type) => {
  if (!color) {
    return str;
  }
  if (isNamedColor(color)) {
    if (type === "foreground") {
      return source_default[color](str);
    }
    const methodName = `bg${color[0].toUpperCase() + color.slice(1)}`;
    return source_default[methodName](str);
  }
  if (color.startsWith("#")) {
    return type === "foreground" ? source_default.hex(color)(str) : source_default.bgHex(color)(str);
  }
  if (color.startsWith("ansi256")) {
    const matches = ansiRegex.exec(color);
    if (!matches) {
      return str;
    }
    const value2 = Number(matches[1]);
    return type === "foreground" ? source_default.ansi256(value2)(str) : source_default.bgAnsi256(value2)(str);
  }
  if (color.startsWith("rgb")) {
    const matches = rgbRegex.exec(color);
    if (!matches) {
      return str;
    }
    const firstValue = Number(matches[1]);
    const secondValue = Number(matches[2]);
    const thirdValue = Number(matches[3]);
    return type === "foreground" ? source_default.rgb(firstValue, secondValue, thirdValue)(str) : source_default.bgRgb(firstValue, secondValue, thirdValue)(str);
  }
  return str;
};
var colorize_default = colorize;

// ../../node_modules/ink/build/render-border.js
var renderBorder = (x, y, node, output) => {
  if (node.style.borderStyle) {
    const width = node.yogaNode.getComputedWidth();
    const height = node.yogaNode.getComputedHeight();
    const box = typeof node.style.borderStyle === "string" ? import_cli_boxes.default[node.style.borderStyle] : node.style.borderStyle;
    const topBorderColor = node.style.borderTopColor ?? node.style.borderColor;
    const bottomBorderColor = node.style.borderBottomColor ?? node.style.borderColor;
    const leftBorderColor = node.style.borderLeftColor ?? node.style.borderColor;
    const rightBorderColor = node.style.borderRightColor ?? node.style.borderColor;
    const showTopBorder = node.style.borderTop !== false;
    const showBottomBorder = node.style.borderBottom !== false;
    const showLeftBorder = node.style.borderLeft !== false;
    const showRightBorder = node.style.borderRight !== false;
    const contentWidth = width - (showLeftBorder ? 1 : 0) - (showRightBorder ? 1 : 0);
    const topBorder = showTopBorder ? colorize_default((showLeftBorder ? box.topLeft : "") + box.top.repeat(contentWidth) + (showRightBorder ? box.topRight : ""), topBorderColor, "foreground") : void 0;
    let verticalBorderHeight = height;
    if (showTopBorder) {
      verticalBorderHeight -= 1;
    }
    if (showBottomBorder) {
      verticalBorderHeight -= 1;
    }
    const leftBorder = (colorize_default(box.left, leftBorderColor, "foreground") + "\n").repeat(verticalBorderHeight);
    const rightBorder = (colorize_default(box.right, rightBorderColor, "foreground") + "\n").repeat(verticalBorderHeight);
    const bottomBorder = showBottomBorder ? colorize_default((showLeftBorder ? box.bottomLeft : "") + box.bottom.repeat(contentWidth) + (showRightBorder ? box.bottomRight : ""), bottomBorderColor, "foreground") : void 0;
    const offsetY = showTopBorder ? 1 : 0;
    if (topBorder) {
      output.write(x, y, topBorder, { transformers: [] });
    }
    if (showLeftBorder) {
      output.write(x, y + offsetY, leftBorder, { transformers: [] });
    }
    if (showRightBorder) {
      output.write(x + width - 1, y + offsetY, rightBorder, {
        transformers: []
      });
    }
    if (bottomBorder) {
      output.write(x, y + height - 1, bottomBorder, { transformers: [] });
    }
  }
};
var render_border_default = renderBorder;

// ../../node_modules/ink/build/render-node-to-output.js
var applyPaddingToText = (node, text) => {
  const yogaNode = node.childNodes[0]?.yogaNode;
  if (yogaNode) {
    const offsetX = yogaNode.getComputedLeft();
    const offsetY = yogaNode.getComputedTop();
    text = "\n".repeat(offsetY) + indentString(text, offsetX);
  }
  return text;
};
var renderNodeToOutput = (node, output, options) => {
  const { offsetX = 0, offsetY = 0, transformers = [], skipStaticElements } = options;
  if (skipStaticElements && node.internal_static) {
    return;
  }
  const { yogaNode } = node;
  if (yogaNode) {
    if (yogaNode.getDisplay() === Yoga.DISPLAY_NONE) {
      return;
    }
    const x = offsetX + yogaNode.getComputedLeft();
    const y = offsetY + yogaNode.getComputedTop();
    let newTransformers = transformers;
    if (typeof node.internal_transform === "function") {
      newTransformers = [node.internal_transform, ...transformers];
    }
    if (node.nodeName === "ink-text") {
      let text = squash_text_nodes_default(node);
      if (text.length > 0) {
        const currentWidth = widestLine(text);
        const maxWidth = get_max_width_default(yogaNode);
        if (currentWidth > maxWidth) {
          const textWrap = node.style.textWrap ?? "wrap";
          text = wrap_text_default(text, maxWidth, textWrap);
        }
        text = applyPaddingToText(node, text);
        output.write(x, y, text, { transformers: newTransformers });
      }
      return;
    }
    let clipped = false;
    if (node.nodeName === "ink-box") {
      render_border_default(x, y, node, output);
      const clipHorizontally = node.style.overflowX === "hidden" || node.style.overflow === "hidden";
      const clipVertically = node.style.overflowY === "hidden" || node.style.overflow === "hidden";
      if (clipHorizontally || clipVertically) {
        const x1 = clipHorizontally ? x + yogaNode.getComputedBorder(Yoga.EDGE_LEFT) : void 0;
        const x2 = clipHorizontally ? x + yogaNode.getComputedWidth() - yogaNode.getComputedBorder(Yoga.EDGE_RIGHT) : void 0;
        const y1 = clipVertically ? y + yogaNode.getComputedBorder(Yoga.EDGE_TOP) : void 0;
        const y2 = clipVertically ? y + yogaNode.getComputedHeight() - yogaNode.getComputedBorder(Yoga.EDGE_BOTTOM) : void 0;
        output.clip({ x1, x2, y1, y2 });
        clipped = true;
      }
    }
    if (node.nodeName === "ink-root" || node.nodeName === "ink-box") {
      for (const childNode of node.childNodes) {
        renderNodeToOutput(childNode, output, {
          offsetX: x,
          offsetY: y,
          transformers: newTransformers,
          skipStaticElements
        });
      }
      if (clipped) {
        output.unclip();
      }
    }
  }
};
var render_node_to_output_default = renderNodeToOutput;

// ../../node_modules/ink/build/output.js
init_esm_shims();

// ../../node_modules/ink/node_modules/slice-ansi/index.js
init_esm_shims();
var ESCAPES3 = /* @__PURE__ */ new Set([27, 155]);
var CODE_POINT_0 = "0".codePointAt(0);
var CODE_POINT_9 = "9".codePointAt(0);
var endCodesSet = /* @__PURE__ */ new Set();
var endCodesMap = /* @__PURE__ */ new Map();
for (const [start, end] of ansi_styles_default.codes) {
  endCodesSet.add(ansi_styles_default.color.ansi(end));
  endCodesMap.set(ansi_styles_default.color.ansi(start), ansi_styles_default.color.ansi(end));
}
function getEndCode(code) {
  if (endCodesSet.has(code)) {
    return code;
  }
  if (endCodesMap.has(code)) {
    return endCodesMap.get(code);
  }
  code = code.slice(2);
  if (code.includes(";")) {
    code = code[0] + "0";
  }
  const returnValue = ansi_styles_default.codes.get(Number.parseInt(code, 10));
  if (returnValue) {
    return ansi_styles_default.color.ansi(returnValue);
  }
  return ansi_styles_default.reset.open;
}
function findNumberIndex(string) {
  for (let index = 0; index < string.length; index++) {
    const codePoint = string.codePointAt(index);
    if (codePoint >= CODE_POINT_0 && codePoint <= CODE_POINT_9) {
      return index;
    }
  }
  return -1;
}
function parseAnsiCode(string, offset) {
  string = string.slice(offset, offset + 19);
  const startIndex = findNumberIndex(string);
  if (startIndex !== -1) {
    let endIndex = string.indexOf("m", startIndex);
    if (endIndex === -1) {
      endIndex = string.length;
    }
    return string.slice(0, endIndex + 1);
  }
}
function tokenize(string, endCharacter = Number.POSITIVE_INFINITY) {
  const returnValue = [];
  let index = 0;
  let visibleCount = 0;
  while (index < string.length) {
    const codePoint = string.codePointAt(index);
    if (ESCAPES3.has(codePoint)) {
      const code = parseAnsiCode(string, index);
      if (code) {
        returnValue.push({
          type: "ansi",
          code,
          endCode: getEndCode(code)
        });
        index += code.length;
        continue;
      }
    }
    const isFullWidth = isFullwidthCodePoint(codePoint);
    const character = String.fromCodePoint(codePoint);
    returnValue.push({
      type: "character",
      value: character,
      isFullWidth
    });
    index += character.length;
    visibleCount += isFullWidth ? 2 : character.length;
    if (visibleCount >= endCharacter) {
      break;
    }
  }
  return returnValue;
}
function reduceAnsiCodes(codes) {
  let returnValue = [];
  for (const code of codes) {
    if (code.code === ansi_styles_default.reset.open) {
      returnValue = [];
    } else if (endCodesSet.has(code.code)) {
      returnValue = returnValue.filter((returnValueCode) => returnValueCode.endCode !== code.code);
    } else {
      returnValue = returnValue.filter((returnValueCode) => returnValueCode.endCode !== code.endCode);
      returnValue.push(code);
    }
  }
  return returnValue;
}
function undoAnsiCodes(codes) {
  const reduced = reduceAnsiCodes(codes);
  const endCodes = reduced.map(({ endCode }) => endCode);
  return endCodes.reverse().join("");
}
function sliceAnsi2(string, start, end) {
  const tokens = tokenize(string, end);
  let activeCodes = [];
  let position = 0;
  let returnValue = "";
  let include = false;
  for (const token of tokens) {
    if (end !== void 0 && position >= end) {
      break;
    }
    if (token.type === "ansi") {
      activeCodes.push(token);
      if (include) {
        returnValue += token.code;
      }
    } else {
      if (!include && position >= start) {
        include = true;
        activeCodes = reduceAnsiCodes(activeCodes);
        returnValue = activeCodes.map(({ code }) => code).join("");
      }
      if (include) {
        returnValue += token.value;
      }
      position += token.isFullWidth ? 2 : token.value.length;
    }
  }
  returnValue += undoAnsiCodes(activeCodes);
  return returnValue;
}

// ../../node_modules/ink/build/output.js
var Output = class {
  constructor(options) {
    Object.defineProperty(this, "width", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "height", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "operations", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: []
    });
    const { width, height } = options;
    this.width = width;
    this.height = height;
  }
  write(x, y, text, options) {
    const { transformers } = options;
    if (!text) {
      return;
    }
    this.operations.push({
      type: "write",
      x,
      y,
      text,
      transformers
    });
  }
  clip(clip) {
    this.operations.push({
      type: "clip",
      clip
    });
  }
  unclip() {
    this.operations.push({
      type: "unclip"
    });
  }
  get() {
    const output = [];
    for (let y = 0; y < this.height; y++) {
      output.push(" ".repeat(this.width));
    }
    const clips = [];
    for (const operation of this.operations) {
      if (operation.type === "clip") {
        clips.push(operation.clip);
      }
      if (operation.type === "unclip") {
        clips.pop();
      }
      if (operation.type === "write") {
        const { text, transformers } = operation;
        let { x, y } = operation;
        let lines = text.split("\n");
        const clip = clips[clips.length - 1];
        if (clip) {
          const clipHorizontally = typeof clip?.x1 === "number" && typeof clip?.x2 === "number";
          const clipVertically = typeof clip?.y1 === "number" && typeof clip?.y2 === "number";
          if (clipHorizontally) {
            const width = widestLine(text);
            if (x + width < clip.x1 || x > clip.x2) {
              continue;
            }
          }
          if (clipVertically) {
            const height = lines.length;
            if (y + height < clip.y1 || y > clip.y2) {
              continue;
            }
          }
          if (clipHorizontally) {
            lines = lines.map((line) => {
              const from = x < clip.x1 ? clip.x1 - x : 0;
              const width = stringWidth2(line);
              const to = x + width > clip.x2 ? clip.x2 - x : width;
              return sliceAnsi2(line, from, to);
            });
            if (x < clip.x1) {
              x = clip.x1;
            }
          }
          if (clipVertically) {
            const from = y < clip.y1 ? clip.y1 - y : 0;
            const height = lines.length;
            const to = y + height > clip.y2 ? clip.y2 - y : height;
            lines = lines.slice(from, to);
            if (y < clip.y1) {
              y = clip.y1;
            }
          }
        }
        let offsetY = 0;
        for (let line of lines) {
          const currentLine = output[y + offsetY];
          if (!currentLine) {
            continue;
          }
          const width = stringWidth2(line);
          for (const transformer of transformers) {
            line = transformer(line);
          }
          output[y + offsetY] = sliceAnsi2(currentLine, 0, x) + line + sliceAnsi2(currentLine, x + width);
          offsetY++;
        }
      }
    }
    const generatedOutput = output.map((line) => line.trimEnd()).join("\n");
    return {
      output: generatedOutput,
      height: output.length
    };
  }
};

// ../../node_modules/ink/build/renderer.js
var renderer = (node) => {
  if (node.yogaNode) {
    const output = new Output({
      width: node.yogaNode.getComputedWidth(),
      height: node.yogaNode.getComputedHeight()
    });
    render_node_to_output_default(node, output, { skipStaticElements: true });
    let staticOutput;
    if (node.staticNode?.yogaNode) {
      staticOutput = new Output({
        width: node.staticNode.yogaNode.getComputedWidth(),
        height: node.staticNode.yogaNode.getComputedHeight()
      });
      render_node_to_output_default(node.staticNode, staticOutput, {
        skipStaticElements: false
      });
    }
    const { output: generatedOutput, height: outputHeight } = output.get();
    return {
      output: generatedOutput,
      outputHeight,
      // Newline at the end is needed, because static output doesn't have one, so
      // interactive output will override last line of static output
      staticOutput: staticOutput ? `${staticOutput.get().output}
` : ""
    };
  }
  return {
    output: "",
    outputHeight: 0,
    staticOutput: ""
  };
};
var renderer_default = renderer;

// ../../node_modules/ink/build/log-update.js
init_esm_shims();

// ../../node_modules/ink/node_modules/cli-cursor/index.js
init_esm_shims();
import process5 from "node:process";

// ../../node_modules/ink/node_modules/restore-cursor/index.js
init_esm_shims();
var import_onetime = __toESM(require_onetime(), 1);
var import_signal_exit = __toESM(require_signal_exit(), 1);
import process4 from "node:process";
var restoreCursor = (0, import_onetime.default)(() => {
  (0, import_signal_exit.default)(() => {
    process4.stderr.write("\x1B[?25h");
  }, { alwaysLast: true });
});
var restore_cursor_default = restoreCursor;

// ../../node_modules/ink/node_modules/cli-cursor/index.js
var isHidden = false;
var cliCursor = {};
cliCursor.show = (writableStream = process5.stderr) => {
  if (!writableStream.isTTY) {
    return;
  }
  isHidden = false;
  writableStream.write("\x1B[?25h");
};
cliCursor.hide = (writableStream = process5.stderr) => {
  if (!writableStream.isTTY) {
    return;
  }
  restore_cursor_default();
  isHidden = true;
  writableStream.write("\x1B[?25l");
};
cliCursor.toggle = (force, writableStream) => {
  if (force !== void 0) {
    isHidden = force;
  }
  if (isHidden) {
    cliCursor.show(writableStream);
  } else {
    cliCursor.hide(writableStream);
  }
};
var cli_cursor_default = cliCursor;

// ../../node_modules/ink/build/log-update.js
var create = (stream, { showCursor = false } = {}) => {
  let previousLineCount = 0;
  let previousOutput = "";
  let hasHiddenCursor = false;
  const render3 = (str) => {
    if (!showCursor && !hasHiddenCursor) {
      cli_cursor_default.hide();
      hasHiddenCursor = true;
    }
    const output = str + "\n";
    if (output === previousOutput) {
      return;
    }
    previousOutput = output;
    stream.write(ansi_escapes_default.eraseLines(previousLineCount) + output);
    previousLineCount = output.split("\n").length;
  };
  render3.clear = () => {
    stream.write(ansi_escapes_default.eraseLines(previousLineCount));
    previousOutput = "";
    previousLineCount = 0;
  };
  render3.done = () => {
    previousOutput = "";
    previousLineCount = 0;
    if (!showCursor) {
      cli_cursor_default.show();
      hasHiddenCursor = false;
    }
  };
  return render3;
};
var logUpdate = { create };
var log_update_default = logUpdate;

// ../../node_modules/ink/build/instances.js
init_esm_shims();
var instances = /* @__PURE__ */ new WeakMap();
var instances_default = instances;

// ../../node_modules/ink/build/components/App.js
init_esm_shims();
var import_react9 = __toESM(require_react(), 1);
import process9 from "node:process";

// ../../node_modules/ink/build/components/AppContext.js
init_esm_shims();
var import_react2 = __toESM(require_react(), 1);
var AppContext = (0, import_react2.createContext)({
  exit() {
  }
});
AppContext.displayName = "InternalAppContext";
var AppContext_default = AppContext;

// ../../node_modules/ink/build/components/StdinContext.js
init_esm_shims();
var import_react3 = __toESM(require_react(), 1);
import process6 from "node:process";
var StdinContext = (0, import_react3.createContext)({
  stdin: process6.stdin,
  setRawMode() {
  },
  isRawModeSupported: false,
  // eslint-disable-next-line @typescript-eslint/naming-convention
  internal_exitOnCtrlC: true
});
StdinContext.displayName = "InternalStdinContext";
var StdinContext_default = StdinContext;

// ../../node_modules/ink/build/components/StdoutContext.js
init_esm_shims();
var import_react4 = __toESM(require_react(), 1);
import process7 from "node:process";
var StdoutContext = (0, import_react4.createContext)({
  stdout: process7.stdout,
  write() {
  }
});
StdoutContext.displayName = "InternalStdoutContext";
var StdoutContext_default = StdoutContext;

// ../../node_modules/ink/build/components/StderrContext.js
init_esm_shims();
var import_react5 = __toESM(require_react(), 1);
import process8 from "node:process";
var StderrContext = (0, import_react5.createContext)({
  stderr: process8.stderr,
  write() {
  }
});
StderrContext.displayName = "InternalStderrContext";
var StderrContext_default = StderrContext;

// ../../node_modules/ink/build/components/FocusContext.js
init_esm_shims();
var import_react6 = __toESM(require_react(), 1);
var FocusContext = (0, import_react6.createContext)({
  activeId: void 0,
  add() {
  },
  remove() {
  },
  activate() {
  },
  deactivate() {
  },
  enableFocus() {
  },
  disableFocus() {
  },
  focusNext() {
  },
  focusPrevious() {
  },
  focus() {
  }
});
FocusContext.displayName = "InternalFocusContext";
var FocusContext_default = FocusContext;

// ../../node_modules/ink/build/components/ErrorOverview.js
init_esm_shims();
var import_react8 = __toESM(require_react(), 1);
var import_stack_utils = __toESM(require_stack_utils(), 1);
import * as fs from "node:fs";
import { cwd } from "node:process";

// ../../node_modules/code-excerpt/dist/index.js
init_esm_shims();

// ../../node_modules/convert-to-spaces/dist/index.js
init_esm_shims();
var convertToSpaces = (input, spaces = 2) => {
  return input.replace(/^\t+/gm, ($1) => " ".repeat($1.length * spaces));
};
var dist_default2 = convertToSpaces;

// ../../node_modules/code-excerpt/dist/index.js
var generateLineNumbers = (line, around) => {
  const lineNumbers = [];
  const min = line - around;
  const max = line + around;
  for (let lineNumber = min; lineNumber <= max; lineNumber++) {
    lineNumbers.push(lineNumber);
  }
  return lineNumbers;
};
var codeExcerpt = (source, line, options = {}) => {
  var _a2;
  if (typeof source !== "string") {
    throw new TypeError("Source code is missing.");
  }
  if (!line || line < 1) {
    throw new TypeError("Line number must start from `1`.");
  }
  const lines = dist_default2(source).split(/\r?\n/);
  if (line > lines.length) {
    return;
  }
  return generateLineNumbers(line, (_a2 = options.around) !== null && _a2 !== void 0 ? _a2 : 3).filter((line2) => lines[line2 - 1] !== void 0).map((line2) => ({ line: line2, value: lines[line2 - 1] }));
};
var dist_default3 = codeExcerpt;

// ../../node_modules/ink/build/components/Text.js
init_esm_shims();
var import_react7 = __toESM(require_react(), 1);
function Text({ color, backgroundColor, dimColor = false, bold = false, italic = false, underline = false, strikethrough = false, inverse = false, wrap = "wrap", children }) {
  if (children === void 0 || children === null) {
    return null;
  }
  const transform = (children2) => {
    if (dimColor) {
      children2 = source_default.dim(children2);
    }
    if (color) {
      children2 = colorize_default(children2, color, "foreground");
    }
    if (backgroundColor) {
      children2 = colorize_default(children2, backgroundColor, "background");
    }
    if (bold) {
      children2 = source_default.bold(children2);
    }
    if (italic) {
      children2 = source_default.italic(children2);
    }
    if (underline) {
      children2 = source_default.underline(children2);
    }
    if (strikethrough) {
      children2 = source_default.strikethrough(children2);
    }
    if (inverse) {
      children2 = source_default.inverse(children2);
    }
    return children2;
  };
  return import_react7.default.createElement("ink-text", { style: { flexGrow: 0, flexShrink: 1, flexDirection: "row", textWrap: wrap }, internal_transform: transform }, children);
}

// ../../node_modules/ink/build/components/ErrorOverview.js
var cleanupPath = (path) => {
  return path?.replace(`file://${cwd()}/`, "");
};
var stackUtils = new import_stack_utils.default({
  cwd: cwd(),
  internals: import_stack_utils.default.nodeInternals()
});
function ErrorOverview({ error }) {
  const stack = error.stack ? error.stack.split("\n").slice(1) : void 0;
  const origin = stack ? stackUtils.parseLine(stack[0]) : void 0;
  const filePath = cleanupPath(origin?.file);
  let excerpt;
  let lineWidth = 0;
  if (filePath && origin?.line && fs.existsSync(filePath)) {
    const sourceCode = fs.readFileSync(filePath, "utf8");
    excerpt = dist_default3(sourceCode, origin.line);
    if (excerpt) {
      for (const { line } of excerpt) {
        lineWidth = Math.max(lineWidth, String(line).length);
      }
    }
  }
  return import_react8.default.createElement(
    Box_default,
    { flexDirection: "column", padding: 1 },
    import_react8.default.createElement(
      Box_default,
      null,
      import_react8.default.createElement(
        Text,
        { backgroundColor: "red", color: "white" },
        " ",
        "ERROR",
        " "
      ),
      import_react8.default.createElement(
        Text,
        null,
        " ",
        error.message
      )
    ),
    origin && filePath && import_react8.default.createElement(
      Box_default,
      { marginTop: 1 },
      import_react8.default.createElement(
        Text,
        { dimColor: true },
        filePath,
        ":",
        origin.line,
        ":",
        origin.column
      )
    ),
    origin && excerpt && import_react8.default.createElement(Box_default, { marginTop: 1, flexDirection: "column" }, excerpt.map(({ line, value: value2 }) => import_react8.default.createElement(
      Box_default,
      { key: line },
      import_react8.default.createElement(
        Box_default,
        { width: lineWidth + 1 },
        import_react8.default.createElement(
          Text,
          { dimColor: line !== origin.line, backgroundColor: line === origin.line ? "red" : void 0, color: line === origin.line ? "white" : void 0 },
          String(line).padStart(lineWidth, " "),
          ":"
        )
      ),
      import_react8.default.createElement(Text, { key: line, backgroundColor: line === origin.line ? "red" : void 0, color: line === origin.line ? "white" : void 0 }, " " + value2)
    ))),
    error.stack && import_react8.default.createElement(Box_default, { marginTop: 1, flexDirection: "column" }, error.stack.split("\n").slice(1).map((line) => {
      const parsedLine = stackUtils.parseLine(line);
      if (!parsedLine) {
        return import_react8.default.createElement(
          Box_default,
          { key: line },
          import_react8.default.createElement(Text, { dimColor: true }, "- "),
          import_react8.default.createElement(Text, { dimColor: true, bold: true }, line)
        );
      }
      return import_react8.default.createElement(
        Box_default,
        { key: line },
        import_react8.default.createElement(Text, { dimColor: true }, "- "),
        import_react8.default.createElement(Text, { dimColor: true, bold: true }, parsedLine.function),
        import_react8.default.createElement(
          Text,
          { dimColor: true, color: "gray" },
          " ",
          "(",
          cleanupPath(parsedLine.file) ?? "",
          ":",
          parsedLine.line,
          ":",
          parsedLine.column,
          ")"
        )
      );
    }))
  );
}

// ../../node_modules/ink/build/components/App.js
var tab = "	";
var shiftTab = "\x1B[Z";
var escape = "\x1B";
var App = class extends import_react9.PureComponent {
  constructor() {
    super(...arguments);
    Object.defineProperty(this, "state", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: {
        isFocusEnabled: true,
        activeFocusId: void 0,
        focusables: [],
        error: void 0
      }
    });
    Object.defineProperty(this, "rawModeEnabledCount", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: 0
    });
    Object.defineProperty(this, "handleSetRawMode", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: (isEnabled) => {
        const { stdin } = this.props;
        if (!this.isRawModeSupported()) {
          if (stdin === process9.stdin) {
            throw new Error("Raw mode is not supported on the current process.stdin, which Ink uses as input stream by default.\nRead about how to prevent this error on https://github.com/vadimdemedes/ink/#israwmodesupported");
          } else {
            throw new Error("Raw mode is not supported on the stdin provided to Ink.\nRead about how to prevent this error on https://github.com/vadimdemedes/ink/#israwmodesupported");
          }
        }
        stdin.setEncoding("utf8");
        if (isEnabled) {
          if (this.rawModeEnabledCount === 0) {
            stdin.addListener("data", this.handleInput);
            stdin.resume();
            stdin.setRawMode(true);
          }
          this.rawModeEnabledCount++;
          return;
        }
        if (--this.rawModeEnabledCount === 0) {
          stdin.setRawMode(false);
          stdin.removeListener("data", this.handleInput);
          stdin.pause();
        }
      }
    });
    Object.defineProperty(this, "handleInput", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: (input) => {
        if (input === "" && this.props.exitOnCtrlC) {
          this.handleExit();
        }
        if (input === escape && this.state.activeFocusId) {
          this.setState({
            activeFocusId: void 0
          });
        }
        if (this.state.isFocusEnabled && this.state.focusables.length > 0) {
          if (input === tab) {
            this.focusNext();
          }
          if (input === shiftTab) {
            this.focusPrevious();
          }
        }
      }
    });
    Object.defineProperty(this, "handleExit", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: (error) => {
        if (this.isRawModeSupported()) {
          this.handleSetRawMode(false);
        }
        this.props.onExit(error);
      }
    });
    Object.defineProperty(this, "enableFocus", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: () => {
        this.setState({
          isFocusEnabled: true
        });
      }
    });
    Object.defineProperty(this, "disableFocus", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: () => {
        this.setState({
          isFocusEnabled: false
        });
      }
    });
    Object.defineProperty(this, "focus", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: (id) => {
        this.setState((previousState) => {
          const hasFocusableId = previousState.focusables.some((focusable) => focusable?.id === id);
          if (!hasFocusableId) {
            return previousState;
          }
          return { activeFocusId: id };
        });
      }
    });
    Object.defineProperty(this, "focusNext", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: () => {
        this.setState((previousState) => {
          const firstFocusableId = previousState.focusables[0]?.id;
          const nextFocusableId = this.findNextFocusable(previousState);
          return {
            activeFocusId: nextFocusableId ?? firstFocusableId
          };
        });
      }
    });
    Object.defineProperty(this, "focusPrevious", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: () => {
        this.setState((previousState) => {
          const lastFocusableId = previousState.focusables[previousState.focusables.length - 1]?.id;
          const previousFocusableId = this.findPreviousFocusable(previousState);
          return {
            activeFocusId: previousFocusableId ?? lastFocusableId
          };
        });
      }
    });
    Object.defineProperty(this, "addFocusable", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: (id, { autoFocus }) => {
        this.setState((previousState) => {
          let nextFocusId = previousState.activeFocusId;
          if (!nextFocusId && autoFocus) {
            nextFocusId = id;
          }
          return {
            activeFocusId: nextFocusId,
            focusables: [
              ...previousState.focusables,
              {
                id,
                isActive: true
              }
            ]
          };
        });
      }
    });
    Object.defineProperty(this, "removeFocusable", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: (id) => {
        this.setState((previousState) => ({
          activeFocusId: previousState.activeFocusId === id ? void 0 : previousState.activeFocusId,
          focusables: previousState.focusables.filter((focusable) => {
            return focusable.id !== id;
          })
        }));
      }
    });
    Object.defineProperty(this, "activateFocusable", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: (id) => {
        this.setState((previousState) => ({
          focusables: previousState.focusables.map((focusable) => {
            if (focusable.id !== id) {
              return focusable;
            }
            return {
              id,
              isActive: true
            };
          })
        }));
      }
    });
    Object.defineProperty(this, "deactivateFocusable", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: (id) => {
        this.setState((previousState) => ({
          activeFocusId: previousState.activeFocusId === id ? void 0 : previousState.activeFocusId,
          focusables: previousState.focusables.map((focusable) => {
            if (focusable.id !== id) {
              return focusable;
            }
            return {
              id,
              isActive: false
            };
          })
        }));
      }
    });
    Object.defineProperty(this, "findNextFocusable", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: (state) => {
        const activeIndex = state.focusables.findIndex((focusable) => {
          return focusable.id === state.activeFocusId;
        });
        for (let index = activeIndex + 1; index < state.focusables.length; index++) {
          const focusable = state.focusables[index];
          if (focusable?.isActive) {
            return focusable.id;
          }
        }
        return void 0;
      }
    });
    Object.defineProperty(this, "findPreviousFocusable", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: (state) => {
        const activeIndex = state.focusables.findIndex((focusable) => {
          return focusable.id === state.activeFocusId;
        });
        for (let index = activeIndex - 1; index >= 0; index--) {
          const focusable = state.focusables[index];
          if (focusable?.isActive) {
            return focusable.id;
          }
        }
        return void 0;
      }
    });
  }
  static getDerivedStateFromError(error) {
    return { error };
  }
  // Determines if TTY is supported on the provided stdin
  isRawModeSupported() {
    return this.props.stdin.isTTY;
  }
  render() {
    return import_react9.default.createElement(
      AppContext_default.Provider,
      {
        // eslint-disable-next-line react/jsx-no-constructed-context-values
        value: {
          exit: this.handleExit
        }
      },
      import_react9.default.createElement(
        StdinContext_default.Provider,
        {
          // eslint-disable-next-line react/jsx-no-constructed-context-values
          value: {
            stdin: this.props.stdin,
            setRawMode: this.handleSetRawMode,
            isRawModeSupported: this.isRawModeSupported(),
            // eslint-disable-next-line @typescript-eslint/naming-convention
            internal_exitOnCtrlC: this.props.exitOnCtrlC
          }
        },
        import_react9.default.createElement(
          StdoutContext_default.Provider,
          {
            // eslint-disable-next-line react/jsx-no-constructed-context-values
            value: {
              stdout: this.props.stdout,
              write: this.props.writeToStdout
            }
          },
          import_react9.default.createElement(
            StderrContext_default.Provider,
            {
              // eslint-disable-next-line react/jsx-no-constructed-context-values
              value: {
                stderr: this.props.stderr,
                write: this.props.writeToStderr
              }
            },
            import_react9.default.createElement(
              FocusContext_default.Provider,
              {
                // eslint-disable-next-line react/jsx-no-constructed-context-values
                value: {
                  activeId: this.state.activeFocusId,
                  add: this.addFocusable,
                  remove: this.removeFocusable,
                  activate: this.activateFocusable,
                  deactivate: this.deactivateFocusable,
                  enableFocus: this.enableFocus,
                  disableFocus: this.disableFocus,
                  focusNext: this.focusNext,
                  focusPrevious: this.focusPrevious,
                  focus: this.focus
                }
              },
              this.state.error ? import_react9.default.createElement(ErrorOverview, { error: this.state.error }) : this.props.children
            )
          )
        )
      )
    );
  }
  componentDidMount() {
    cli_cursor_default.hide(this.props.stdout);
  }
  componentWillUnmount() {
    cli_cursor_default.show(this.props.stdout);
    if (this.isRawModeSupported()) {
      this.handleSetRawMode(false);
    }
  }
  componentDidCatch(error) {
    this.handleExit(error);
  }
};
Object.defineProperty(App, "displayName", {
  enumerable: true,
  configurable: true,
  writable: true,
  value: "InternalApp"
});

// ../../node_modules/ink/build/ink.js
var isCi = process10.env["CI"] === "false" ? false : import_is_ci.default;
var noop = () => {
};
var Ink = class {
  constructor(options) {
    Object.defineProperty(this, "options", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "log", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "throttledLog", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "isUnmounted", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "lastOutput", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "container", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "rootNode", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "fullStaticOutput", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "exitPromise", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "restoreConsole", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "unsubscribeResize", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, "resized", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: () => {
        this.calculateLayout();
        this.onRender();
      }
    });
    Object.defineProperty(this, "resolveExitPromise", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: () => {
      }
    });
    Object.defineProperty(this, "rejectExitPromise", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: () => {
      }
    });
    Object.defineProperty(this, "unsubscribeExit", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: () => {
      }
    });
    Object.defineProperty(this, "calculateLayout", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: () => {
        const terminalWidth = this.options.stdout.columns || 80;
        this.rootNode.yogaNode.setWidth(terminalWidth);
        this.rootNode.yogaNode.calculateLayout(void 0, void 0, Yoga.DIRECTION_LTR);
      }
    });
    Object.defineProperty(this, "onRender", {
      enumerable: true,
      configurable: true,
      writable: true,
      value: () => {
        if (this.isUnmounted) {
          return;
        }
        const { output, outputHeight, staticOutput } = renderer_default(this.rootNode);
        const hasStaticOutput = staticOutput && staticOutput !== "\n";
        if (this.options.debug) {
          if (hasStaticOutput) {
            this.fullStaticOutput += staticOutput;
          }
          this.options.stdout.write(this.fullStaticOutput + output);
          return;
        }
        if (isCi) {
          if (hasStaticOutput) {
            this.options.stdout.write(staticOutput);
          }
          this.lastOutput = output;
          return;
        }
        if (hasStaticOutput) {
          this.fullStaticOutput += staticOutput;
        }
        if (outputHeight >= this.options.stdout.rows) {
          this.options.stdout.write(ansi_escapes_default.clearTerminal + this.fullStaticOutput + output);
          this.lastOutput = output;
          return;
        }
        if (hasStaticOutput) {
          this.log.clear();
          this.options.stdout.write(staticOutput);
          this.log(output);
        }
        if (!hasStaticOutput && output !== this.lastOutput) {
          this.throttledLog(output);
        }
        this.lastOutput = output;
      }
    });
    autoBind(this);
    this.options = options;
    this.rootNode = createNode("ink-root");
    this.rootNode.onComputeLayout = this.calculateLayout;
    this.rootNode.onRender = options.debug ? this.onRender : (0, import_throttle.default)(this.onRender, 32, {
      leading: true,
      trailing: true
    });
    this.rootNode.onImmediateRender = this.onRender;
    this.log = log_update_default.create(options.stdout);
    this.throttledLog = options.debug ? this.log : (0, import_throttle.default)(this.log, void 0, {
      leading: true,
      trailing: true
    });
    this.isUnmounted = false;
    this.lastOutput = "";
    this.fullStaticOutput = "";
    this.container = reconciler_default.createContainer(
      this.rootNode,
      // Legacy mode
      0,
      null,
      false,
      null,
      "id",
      () => {
      },
      null
    );
    this.unsubscribeExit = (0, import_signal_exit2.default)(this.unmount, { alwaysLast: false });
    if (process10.env["DEV"] === "true") {
      reconciler_default.injectIntoDevTools({
        bundleType: 0,
        // Reporting React DOM's version, not Ink's
        // See https://github.com/facebook/react/issues/16666#issuecomment-532639905
        version: "16.13.1",
        rendererPackageName: "ink"
      });
    }
    if (options.patchConsole) {
      this.patchConsole();
    }
    if (!isCi) {
      options.stdout.on("resize", this.resized);
      this.unsubscribeResize = () => {
        options.stdout.off("resize", this.resized);
      };
    }
  }
  render(node) {
    const tree = import_react10.default.createElement(App, { stdin: this.options.stdin, stdout: this.options.stdout, stderr: this.options.stderr, writeToStdout: this.writeToStdout, writeToStderr: this.writeToStderr, exitOnCtrlC: this.options.exitOnCtrlC, onExit: this.unmount }, node);
    reconciler_default.updateContainer(tree, this.container, null, noop);
  }
  writeToStdout(data) {
    if (this.isUnmounted) {
      return;
    }
    if (this.options.debug) {
      this.options.stdout.write(data + this.fullStaticOutput + this.lastOutput);
      return;
    }
    if (isCi) {
      this.options.stdout.write(data);
      return;
    }
    this.log.clear();
    this.options.stdout.write(data);
    this.log(this.lastOutput);
  }
  writeToStderr(data) {
    if (this.isUnmounted) {
      return;
    }
    if (this.options.debug) {
      this.options.stderr.write(data);
      this.options.stdout.write(this.fullStaticOutput + this.lastOutput);
      return;
    }
    if (isCi) {
      this.options.stderr.write(data);
      return;
    }
    this.log.clear();
    this.options.stderr.write(data);
    this.log(this.lastOutput);
  }
  // eslint-disable-next-line @typescript-eslint/ban-types
  unmount(error) {
    if (this.isUnmounted) {
      return;
    }
    this.calculateLayout();
    this.onRender();
    this.unsubscribeExit();
    if (typeof this.restoreConsole === "function") {
      this.restoreConsole();
    }
    if (typeof this.unsubscribeResize === "function") {
      this.unsubscribeResize();
    }
    if (isCi) {
      this.options.stdout.write(this.lastOutput + "\n");
    } else if (!this.options.debug) {
      this.log.done();
    }
    this.isUnmounted = true;
    reconciler_default.updateContainer(null, this.container, null, noop);
    instances_default.delete(this.options.stdout);
    if (error instanceof Error) {
      this.rejectExitPromise(error);
    } else {
      this.resolveExitPromise();
    }
  }
  async waitUntilExit() {
    if (!this.exitPromise) {
      this.exitPromise = new Promise((resolve, reject) => {
        this.resolveExitPromise = resolve;
        this.rejectExitPromise = reject;
      });
    }
    return this.exitPromise;
  }
  clear() {
    if (!isCi && !this.options.debug) {
      this.log.clear();
    }
  }
  patchConsole() {
    if (this.options.debug) {
      return;
    }
    this.restoreConsole = dist_default((stream, data) => {
      if (stream === "stdout") {
        this.writeToStdout(data);
      }
      if (stream === "stderr") {
        const isReactMessage = data.startsWith("The above error occurred");
        if (!isReactMessage) {
          this.writeToStderr(data);
        }
      }
    });
  }
};

// ../../node_modules/ink/build/render.js
var render = (node, options) => {
  const inkOptions = {
    stdout: process11.stdout,
    stdin: process11.stdin,
    stderr: process11.stderr,
    debug: false,
    exitOnCtrlC: true,
    patchConsole: true,
    ...getOptions(options)
  };
  const instance2 = getInstance(inkOptions.stdout, () => new Ink(inkOptions));
  instance2.render(node);
  return {
    rerender: instance2.render,
    unmount() {
      instance2.unmount();
    },
    waitUntilExit: instance2.waitUntilExit,
    cleanup: () => instances_default.delete(inkOptions.stdout),
    clear: instance2.clear
  };
};
var render_default = render;
var getOptions = (stdout = {}) => {
  if (stdout instanceof Stream) {
    return {
      stdout,
      stdin: process11.stdin
    };
  }
  return stdout;
};
var getInstance = (stdout, createInstance2) => {
  let instance2 = instances_default.get(stdout);
  if (!instance2) {
    instance2 = createInstance2();
    instances_default.set(stdout, instance2);
  }
  return instance2;
};

// ../../node_modules/ink/build/components/Static.js
init_esm_shims();
var import_react11 = __toESM(require_react(), 1);

// ../../node_modules/ink/build/components/Transform.js
init_esm_shims();
var import_react12 = __toESM(require_react(), 1);
function Transform({ children, transform }) {
  if (children === void 0 || children === null) {
    return null;
  }
  return import_react12.default.createElement("ink-text", { style: { flexGrow: 0, flexShrink: 1, flexDirection: "row" }, internal_transform: transform }, children);
}

// ../../node_modules/ink/build/components/Newline.js
init_esm_shims();
var import_react13 = __toESM(require_react(), 1);
function Newline({ count = 1 }) {
  return import_react13.default.createElement("ink-text", null, "\n".repeat(count));
}

// ../../node_modules/ink/build/components/Spacer.js
init_esm_shims();
var import_react14 = __toESM(require_react(), 1);

// ../../node_modules/ink/build/hooks/use-input.js
init_esm_shims();
var import_react16 = __toESM(require_react(), 1);

// ../../node_modules/is-upper-case/dist.es2015/index.js
init_esm_shims();
function isUpperCase(input) {
  return input.toUpperCase() === input && input.toLowerCase() !== input;
}

// ../../node_modules/ink/build/parse-keypress.js
init_esm_shims();
import { Buffer } from "node:buffer";
var metaKeyCodeRe = /^(?:\x1b)([a-zA-Z0-9])$/;
var fnKeyRe = /^(?:\x1b+)(O|N|\[|\[\[)(?:(\d+)(?:;(\d+))?([~^$])|(?:1;)?(\d+)?([a-zA-Z]))/;
var keyName = {
  /* xterm/gnome ESC O letter */
  OP: "f1",
  OQ: "f2",
  OR: "f3",
  OS: "f4",
  /* xterm/rxvt ESC [ number ~ */
  "[11~": "f1",
  "[12~": "f2",
  "[13~": "f3",
  "[14~": "f4",
  /* from Cygwin and used in libuv */
  "[[A": "f1",
  "[[B": "f2",
  "[[C": "f3",
  "[[D": "f4",
  "[[E": "f5",
  /* common */
  "[15~": "f5",
  "[17~": "f6",
  "[18~": "f7",
  "[19~": "f8",
  "[20~": "f9",
  "[21~": "f10",
  "[23~": "f11",
  "[24~": "f12",
  /* xterm ESC [ letter */
  "[A": "up",
  "[B": "down",
  "[C": "right",
  "[D": "left",
  "[E": "clear",
  "[F": "end",
  "[H": "home",
  /* xterm/gnome ESC O letter */
  OA: "up",
  OB: "down",
  OC: "right",
  OD: "left",
  OE: "clear",
  OF: "end",
  OH: "home",
  /* xterm/rxvt ESC [ number ~ */
  "[1~": "home",
  "[2~": "insert",
  "[3~": "delete",
  "[4~": "end",
  "[5~": "pageup",
  "[6~": "pagedown",
  /* putty */
  "[[5~": "pageup",
  "[[6~": "pagedown",
  /* rxvt */
  "[7~": "home",
  "[8~": "end",
  /* rxvt keys with modifiers */
  "[a": "up",
  "[b": "down",
  "[c": "right",
  "[d": "left",
  "[e": "clear",
  "[2$": "insert",
  "[3$": "delete",
  "[5$": "pageup",
  "[6$": "pagedown",
  "[7$": "home",
  "[8$": "end",
  Oa: "up",
  Ob: "down",
  Oc: "right",
  Od: "left",
  Oe: "clear",
  "[2^": "insert",
  "[3^": "delete",
  "[5^": "pageup",
  "[6^": "pagedown",
  "[7^": "home",
  "[8^": "end",
  /* misc. */
  "[Z": "tab"
};
var nonAlphanumericKeys = [...Object.values(keyName), "backspace"];
var isShiftKey = (code) => {
  return [
    "[a",
    "[b",
    "[c",
    "[d",
    "[e",
    "[2$",
    "[3$",
    "[5$",
    "[6$",
    "[7$",
    "[8$",
    "[Z"
  ].includes(code);
};
var isCtrlKey = (code) => {
  return [
    "Oa",
    "Ob",
    "Oc",
    "Od",
    "Oe",
    "[2^",
    "[3^",
    "[5^",
    "[6^",
    "[7^",
    "[8^"
  ].includes(code);
};
var parseKeypress = (s2 = "") => {
  let parts;
  if (Buffer.isBuffer(s2)) {
    if (s2[0] > 127 && s2[1] === void 0) {
      s2[0] -= 128;
      s2 = "\x1B" + String(s2);
    } else {
      s2 = String(s2);
    }
  } else if (s2 !== void 0 && typeof s2 !== "string") {
    s2 = String(s2);
  } else if (!s2) {
    s2 = "";
  }
  const key = {
    name: "",
    ctrl: false,
    meta: false,
    shift: false,
    option: false,
    sequence: s2,
    raw: s2
  };
  key.sequence = key.sequence || s2 || key.name;
  if (s2 === "\r") {
    key.raw = void 0;
    key.name = "return";
  } else if (s2 === "\n") {
    key.name = "enter";
  } else if (s2 === "	") {
    key.name = "tab";
  } else if (s2 === "\b" || s2 === "\x1B\b") {
    key.name = "backspace";
    key.meta = s2.charAt(0) === "\x1B";
  } else if (s2 === "\x7F" || s2 === "\x1B\x7F") {
    key.name = "delete";
    key.meta = s2.charAt(0) === "\x1B";
  } else if (s2 === "\x1B" || s2 === "\x1B\x1B") {
    key.name = "escape";
    key.meta = s2.length === 2;
  } else if (s2 === " " || s2 === "\x1B ") {
    key.name = "space";
    key.meta = s2.length === 2;
  } else if (s2 <= "") {
    key.name = String.fromCharCode(s2.charCodeAt(0) + "a".charCodeAt(0) - 1);
    key.ctrl = true;
  } else if (s2.length === 1 && s2 >= "0" && s2 <= "9") {
    key.name = "number";
  } else if (s2.length === 1 && s2 >= "a" && s2 <= "z") {
    key.name = s2;
  } else if (s2.length === 1 && s2 >= "A" && s2 <= "Z") {
    key.name = s2.toLowerCase();
    key.shift = true;
  } else if (parts = metaKeyCodeRe.exec(s2)) {
    key.meta = true;
    key.shift = /^[A-Z]$/.test(parts[1]);
  } else if (parts = fnKeyRe.exec(s2)) {
    const segs = [...s2];
    if (segs[0] === "\x1B" && segs[1] === "\x1B") {
      key.option = true;
    }
    const code = [parts[1], parts[2], parts[4], parts[6]].filter(Boolean).join("");
    const modifier = (parts[3] || parts[5] || 1) - 1;
    key.ctrl = !!(modifier & 4);
    key.meta = !!(modifier & 10);
    key.shift = !!(modifier & 1);
    key.code = code;
    key.name = keyName[code];
    key.shift = isShiftKey(code) || key.shift;
    key.ctrl = isCtrlKey(code) || key.ctrl;
  }
  return key;
};
var parse_keypress_default = parseKeypress;

// ../../node_modules/ink/build/hooks/use-stdin.js
init_esm_shims();
var import_react15 = __toESM(require_react(), 1);
var useStdin = () => (0, import_react15.useContext)(StdinContext_default);
var use_stdin_default = useStdin;

// ../../node_modules/ink/build/hooks/use-input.js
var useInput = (inputHandler, options = {}) => {
  const { stdin, setRawMode, internal_exitOnCtrlC } = use_stdin_default();
  (0, import_react16.useEffect)(() => {
    if (options.isActive === false) {
      return;
    }
    setRawMode(true);
    return () => {
      setRawMode(false);
    };
  }, [options.isActive, setRawMode]);
  (0, import_react16.useEffect)(() => {
    if (options.isActive === false) {
      return;
    }
    const handleData = (data) => {
      const keypress = parse_keypress_default(data);
      const key = {
        upArrow: keypress.name === "up",
        downArrow: keypress.name === "down",
        leftArrow: keypress.name === "left",
        rightArrow: keypress.name === "right",
        pageDown: keypress.name === "pagedown",
        pageUp: keypress.name === "pageup",
        return: keypress.name === "return",
        escape: keypress.name === "escape",
        ctrl: keypress.ctrl,
        shift: keypress.shift,
        tab: keypress.name === "tab",
        backspace: keypress.name === "backspace",
        delete: keypress.name === "delete",
        // `parseKeypress` parses \u001B\u001B[A (meta + up arrow) as meta = false
        // but with option = true, so we need to take this into account here
        // to avoid breaking changes in Ink.
        // TODO(vadimdemedes): consider removing this in the next major version.
        meta: keypress.meta || keypress.name === "escape" || keypress.option
      };
      let input = keypress.ctrl ? keypress.name : keypress.sequence;
      if (nonAlphanumericKeys.includes(keypress.name)) {
        input = "";
      }
      if (input.startsWith("\x1B")) {
        input = input.slice(1);
      }
      if (input.length === 1 && typeof input[0] === "string" && isUpperCase(input[0])) {
        key.shift = true;
      }
      if (!(input === "c" && key.ctrl) || !internal_exitOnCtrlC) {
        inputHandler(input, key);
      }
    };
    stdin?.on("data", handleData);
    return () => {
      stdin?.off("data", handleData);
    };
  }, [options.isActive, stdin, internal_exitOnCtrlC, inputHandler]);
};
var use_input_default = useInput;

// ../../node_modules/ink/build/hooks/use-app.js
init_esm_shims();
var import_react17 = __toESM(require_react(), 1);
var useApp = () => (0, import_react17.useContext)(AppContext_default);
var use_app_default = useApp;

// ../../node_modules/ink/build/hooks/use-stdout.js
init_esm_shims();
var import_react18 = __toESM(require_react(), 1);

// ../../node_modules/ink/build/hooks/use-stderr.js
init_esm_shims();
var import_react19 = __toESM(require_react(), 1);

// ../../node_modules/ink/build/hooks/use-focus.js
init_esm_shims();
var import_react20 = __toESM(require_react(), 1);

// ../../node_modules/ink/build/hooks/use-focus-manager.js
init_esm_shims();
var import_react21 = __toESM(require_react(), 1);

// ../../node_modules/ink/build/measure-element.js
init_esm_shims();

// ../cli-ui-kit/src/components/Text.tsx
init_esm_shims();
var import_react22 = __toESM(require_react(), 1);
var skins = {
  standard: {},
  secondary: { color: "gray" },
  success: { color: "green" },
  question: { color: "blue" },
  info: { color: "blueBright" },
  error: { color: "red" },
  warning: { color: "yellow" },
  code: { color: "yellowBright" }
};
var Text2 = ({
  children,
  skin = "standard",
  bold,
  underline,
  strikethrough
}) => {
  return /* @__PURE__ */ import_react22.default.createElement(
    Text,
    {
      ...skins[skin],
      bold,
      underline,
      strikethrough
    },
    children
  );
};

// ../cli-ui-kit/src/components/ConfirmInput/ConfirmInput.tsx
init_esm_shims();
var import_react33 = __toESM(require_react(), 1);
var import_variant3 = __toESM(require_lib(), 1);

// ../cli-ui-kit/src/input-state.ts
init_esm_shims();
var import_variant = __toESM(require_lib(), 1);
var InputState = (0, import_variant.variant)(
  (0, import_variant.onTerms)(({ T: _T }) => ({
    NotSubmitted: (value2) => ({ value: value2 }),
    Submitted: (value2) => ({ value: value2 })
  }))
);

// ../cli-ui-kit/src/components/InputLabel.tsx
init_esm_shims();
var import_react29 = __toESM(require_react(), 1);

// ../cli-ui-kit/src/icons/index.ts
init_esm_shims();

// ../cli-ui-kit/src/icons/Error.tsx
init_esm_shims();
var import_react23 = __toESM(require_react(), 1);
var ErrorIcon = () => {
  return /* @__PURE__ */ import_react23.default.createElement(Text2, null, isUnicodeSupported() ? "\u2716" : "\xD7");
};

// ../cli-ui-kit/src/icons/Pointer.tsx
init_esm_shims();
var import_react24 = __toESM(require_react(), 1);
var PointerIcon = ({ appearance }) => {
  switch (appearance) {
    case "exclamation":
      return /* @__PURE__ */ import_react24.default.createElement(Text2, null, "!");
    case "triangle":
      return /* @__PURE__ */ import_react24.default.createElement(Text2, null, isUnicodeSupported() ? "\u25B6" : ">");
    default:
      return /* @__PURE__ */ import_react24.default.createElement(Text2, null, isUnicodeSupported() ? "\u276F" : ">");
  }
};

// ../cli-ui-kit/src/icons/QuestionMark.tsx
init_esm_shims();
var import_react25 = __toESM(require_react(), 1);
var QuestionMarkIcon = () => {
  return /* @__PURE__ */ import_react25.default.createElement(Text2, null, "?");
};

// ../cli-ui-kit/src/icons/Success.tsx
init_esm_shims();
var import_react26 = __toESM(require_react(), 1);
var SuccessIcon = () => {
  return /* @__PURE__ */ import_react26.default.createElement(Text2, null, isUnicodeSupported() ? "\u2714" : "\u221A");
};

// ../cli-ui-kit/src/icons/Warning.tsx
init_esm_shims();
var import_react27 = __toESM(require_react(), 1);
var WarningIcon = () => {
  return /* @__PURE__ */ import_react27.default.createElement(Text2, null, isUnicodeSupported() ? "\u26A0" : "\u203C");
};

// ../cli-ui-kit/src/icons/Insight.tsx
init_esm_shims();
var import_react28 = __toESM(require_react(), 1);
var InsightIcon = () => {
  return /* @__PURE__ */ import_react28.default.createElement(Text2, null, isUnicodeSupported() ? "\u{1F4A1}" : "!");
};

// ../cli-ui-kit/src/components/InputLabel.tsx
var InputLabel = ({ children, icon }) => {
  return /* @__PURE__ */ import_react29.default.createElement(Text2, null, icon ?? /* @__PURE__ */ import_react29.default.createElement(Text2, { skin: "question", bold: true }, /* @__PURE__ */ import_react29.default.createElement(QuestionMarkIcon, null)), " ", /* @__PURE__ */ import_react29.default.createElement(Text2, { skin: "question", bold: true }, children));
};

// ../cli-ui-kit/src/components/ConfirmInput/Placeholder.tsx
init_esm_shims();
var import_react30 = __toESM(require_react(), 1);
var import_variant2 = __toESM(require_lib(), 1);
var Placeholder = ({ inputState }) => {
  return (0, import_variant2.match)(inputState, {
    NotSubmitted: ({ value: value2 }) => /* @__PURE__ */ import_react30.default.createElement(Text2, { skin: "secondary" }, "(", value2 ? "Y/n" : "y/N", ")"),
    Submitted: ({ value: value2 }) => /* @__PURE__ */ import_react30.default.createElement(Text2, null, value2 ? "Yes" : "No")
  });
};

// ../cli-ui-kit/src/components/ConfirmInput/Input.tsx
init_esm_shims();
var import_react32 = __toESM(require_react(), 1);

// ../../node_modules/ink-text-input/build/index.js
init_esm_shims();
var import_react31 = __toESM(require_react(), 1);
function TextInput({ value: originalValue, placeholder = "", focus = true, mask, highlightPastedText = false, showCursor = true, onChange, onSubmit }) {
  const [state, setState] = (0, import_react31.useState)({
    cursorOffset: (originalValue || "").length,
    cursorWidth: 0
  });
  const { cursorOffset, cursorWidth } = state;
  (0, import_react31.useEffect)(() => {
    setState((previousState) => {
      if (!focus || !showCursor) {
        return previousState;
      }
      const newValue = originalValue || "";
      if (previousState.cursorOffset > newValue.length - 1) {
        return {
          cursorOffset: newValue.length,
          cursorWidth: 0
        };
      }
      return previousState;
    });
  }, [originalValue, focus, showCursor]);
  const cursorActualWidth = highlightPastedText ? cursorWidth : 0;
  const value2 = mask ? mask.repeat(originalValue.length) : originalValue;
  let renderedValue = value2;
  let renderedPlaceholder = placeholder ? source_default.grey(placeholder) : void 0;
  if (showCursor && focus) {
    renderedPlaceholder = placeholder.length > 0 ? source_default.inverse(placeholder[0]) + source_default.grey(placeholder.slice(1)) : source_default.inverse(" ");
    renderedValue = value2.length > 0 ? "" : source_default.inverse(" ");
    let i2 = 0;
    for (const char of value2) {
      renderedValue += i2 >= cursorOffset - cursorActualWidth && i2 <= cursorOffset ? source_default.inverse(char) : char;
      i2++;
    }
    if (value2.length > 0 && cursorOffset === value2.length) {
      renderedValue += source_default.inverse(" ");
    }
  }
  use_input_default((input, key) => {
    if (key.upArrow || key.downArrow || key.ctrl && input === "c" || key.tab || key.shift && key.tab) {
      return;
    }
    if (key.return) {
      if (onSubmit) {
        onSubmit(originalValue);
      }
      return;
    }
    let nextCursorOffset = cursorOffset;
    let nextValue = originalValue;
    let nextCursorWidth = 0;
    if (key.leftArrow) {
      if (showCursor) {
        nextCursorOffset--;
      }
    } else if (key.rightArrow) {
      if (showCursor) {
        nextCursorOffset++;
      }
    } else if (key.backspace || key.delete) {
      if (cursorOffset > 0) {
        nextValue = originalValue.slice(0, cursorOffset - 1) + originalValue.slice(cursorOffset, originalValue.length);
        nextCursorOffset--;
      }
    } else {
      nextValue = originalValue.slice(0, cursorOffset) + input + originalValue.slice(cursorOffset, originalValue.length);
      nextCursorOffset += input.length;
      if (input.length > 1) {
        nextCursorWidth = input.length;
      }
    }
    if (cursorOffset < 0) {
      nextCursorOffset = 0;
    }
    if (cursorOffset > originalValue.length) {
      nextCursorOffset = originalValue.length;
    }
    setState({
      cursorOffset: nextCursorOffset,
      cursorWidth: nextCursorWidth
    });
    if (nextValue !== originalValue) {
      onChange(nextValue);
    }
  }, { isActive: focus });
  return import_react31.default.createElement(Text, null, placeholder ? value2.length > 0 ? renderedValue : renderedPlaceholder : renderedValue);
}
var build_default = TextInput;

// ../cli-ui-kit/src/components/ConfirmInput/Input.tsx
var Input = ({ initialValue, onSubmit }) => {
  const handleChange = (0, import_react32.useCallback)(
    (rawKey) => {
      const key = rawKey.toLowerCase();
      if (["y", "n"].includes(key)) {
        onSubmit(key === "y");
      }
    },
    [onSubmit]
  );
  return /* @__PURE__ */ import_react32.default.createElement(
    build_default,
    {
      value: "",
      showCursor: false,
      onChange: handleChange,
      onSubmit: () => onSubmit(initialValue)
    }
  );
};

// ../cli-ui-kit/src/components/ConfirmInput/ConfirmInput.tsx
var ConfirmInput = ({
  label,
  info,
  initialValue = true,
  onSubmit
}) => {
  const [inputState, setInputState] = (0, import_react33.useState)(
    () => InputState.NotSubmitted(initialValue)
  );
  const handleSubmit = (0, import_react33.useCallback)(
    (value2) => {
      setInputState(InputState.Submitted(value2));
      onSubmit(value2);
    },
    [onSubmit]
  );
  return /* @__PURE__ */ import_react33.default.createElement(Text2, null, /* @__PURE__ */ import_react33.default.createElement(InputLabel, null, label), " ", info && (0, import_variant3.isType)(inputState, InputState.NotSubmitted) && /* @__PURE__ */ import_react33.default.createElement(Text2, { skin: "secondary" }, info, " "), /* @__PURE__ */ import_react33.default.createElement(Placeholder, { inputState }), (0, import_variant3.isType)(inputState, InputState.NotSubmitted) && /* @__PURE__ */ import_react33.default.createElement(Input, { initialValue, onSubmit: handleSubmit }));
};

// ../cli-ui-kit/src/components/ConfirmInput/index.ts
init_esm_shims();

// ../cli-ui-kit/src/components/Alert.tsx
init_esm_shims();
var import_react34 = __toESM(require_react(), 1);
var import_variant4 = __toESM(require_lib(), 1);
var Alert = ({ type, children }) => {
  const icon = (0, import_variant4.match)(type, {
    error: (0, import_variant4.constant)(
      /* @__PURE__ */ import_react34.default.createElement(Text2, { skin: "error" }, /* @__PURE__ */ import_react34.default.createElement(ErrorIcon, null))
    ),
    warning: (0, import_variant4.constant)(
      /* @__PURE__ */ import_react34.default.createElement(Text2, { skin: "warning" }, /* @__PURE__ */ import_react34.default.createElement(WarningIcon, null))
    ),
    success: (0, import_variant4.constant)(
      /* @__PURE__ */ import_react34.default.createElement(Text2, { skin: "success" }, /* @__PURE__ */ import_react34.default.createElement(SuccessIcon, null))
    ),
    insight: (0, import_variant4.constant)(/* @__PURE__ */ import_react34.default.createElement(InsightIcon, null))
  });
  return /* @__PURE__ */ import_react34.default.createElement(Text2, null, icon, " ", children);
};

// ../cli-ui-kit/src/components/Badge.tsx
init_esm_shims();
var import_react35 = __toESM(require_react(), 1);
var skins2 = {
  success: { backgroundColor: "green" }
};
var Badge = ({ children, skin }) => {
  return /* @__PURE__ */ import_react35.default.createElement(Text, { ...skins2[skin] }, " ", children, " ");
};

// ../cli-ui-kit/src/components/Link.tsx
init_esm_shims();
var import_react36 = __toESM(require_react(), 1);

// ../../node_modules/terminal-link/index.js
init_esm_shims();

// ../../node_modules/terminal-link/node_modules/ansi-escapes/index.js
init_esm_shims();
var ESC2 = "\x1B[";
var OSC2 = "\x1B]";
var BEL2 = "\x07";
var SEP2 = ";";
var isTerminalApp2 = process.env.TERM_PROGRAM === "Apple_Terminal";
var ansiEscapes2 = {};
ansiEscapes2.cursorTo = (x, y) => {
  if (typeof x !== "number") {
    throw new TypeError("The `x` argument is required");
  }
  if (typeof y !== "number") {
    return ESC2 + (x + 1) + "G";
  }
  return ESC2 + (y + 1) + ";" + (x + 1) + "H";
};
ansiEscapes2.cursorMove = (x, y) => {
  if (typeof x !== "number") {
    throw new TypeError("The `x` argument is required");
  }
  let returnValue = "";
  if (x < 0) {
    returnValue += ESC2 + -x + "D";
  } else if (x > 0) {
    returnValue += ESC2 + x + "C";
  }
  if (y < 0) {
    returnValue += ESC2 + -y + "A";
  } else if (y > 0) {
    returnValue += ESC2 + y + "B";
  }
  return returnValue;
};
ansiEscapes2.cursorUp = (count = 1) => ESC2 + count + "A";
ansiEscapes2.cursorDown = (count = 1) => ESC2 + count + "B";
ansiEscapes2.cursorForward = (count = 1) => ESC2 + count + "C";
ansiEscapes2.cursorBackward = (count = 1) => ESC2 + count + "D";
ansiEscapes2.cursorLeft = ESC2 + "G";
ansiEscapes2.cursorSavePosition = isTerminalApp2 ? "\x1B7" : ESC2 + "s";
ansiEscapes2.cursorRestorePosition = isTerminalApp2 ? "\x1B8" : ESC2 + "u";
ansiEscapes2.cursorGetPosition = ESC2 + "6n";
ansiEscapes2.cursorNextLine = ESC2 + "E";
ansiEscapes2.cursorPrevLine = ESC2 + "F";
ansiEscapes2.cursorHide = ESC2 + "?25l";
ansiEscapes2.cursorShow = ESC2 + "?25h";
ansiEscapes2.eraseLines = (count) => {
  let clear = "";
  for (let i2 = 0; i2 < count; i2++) {
    clear += ansiEscapes2.eraseLine + (i2 < count - 1 ? ansiEscapes2.cursorUp() : "");
  }
  if (count) {
    clear += ansiEscapes2.cursorLeft;
  }
  return clear;
};
ansiEscapes2.eraseEndLine = ESC2 + "K";
ansiEscapes2.eraseStartLine = ESC2 + "1K";
ansiEscapes2.eraseLine = ESC2 + "2K";
ansiEscapes2.eraseDown = ESC2 + "J";
ansiEscapes2.eraseUp = ESC2 + "1J";
ansiEscapes2.eraseScreen = ESC2 + "2J";
ansiEscapes2.scrollUp = ESC2 + "S";
ansiEscapes2.scrollDown = ESC2 + "T";
ansiEscapes2.clearScreen = "\x1Bc";
ansiEscapes2.clearTerminal = process.platform === "win32" ? `${ansiEscapes2.eraseScreen}${ESC2}0f` : (
  // 1. Erases the screen (Only done in case `2` is not supported)
  // 2. Erases the whole screen including scrollback buffer
  // 3. Moves cursor to the top-left position
  // More info: https://www.real-world-systems.com/docs/ANSIcode.html
  `${ansiEscapes2.eraseScreen}${ESC2}3J${ESC2}H`
);
ansiEscapes2.beep = BEL2;
ansiEscapes2.link = (text, url) => {
  return [
    OSC2,
    "8",
    SEP2,
    SEP2,
    url,
    BEL2,
    text,
    OSC2,
    "8",
    SEP2,
    SEP2,
    BEL2
  ].join("");
};
ansiEscapes2.image = (buffer, options = {}) => {
  let returnValue = `${OSC2}1337;File=inline=1`;
  if (options.width) {
    returnValue += `;width=${options.width}`;
  }
  if (options.height) {
    returnValue += `;height=${options.height}`;
  }
  if (options.preserveAspectRatio === false) {
    returnValue += ";preserveAspectRatio=0";
  }
  return returnValue + ":" + buffer.toString("base64") + BEL2;
};
ansiEscapes2.iTerm = {
  setCwd: (cwd2 = process.cwd()) => `${OSC2}50;CurrentDir=${cwd2}${BEL2}`,
  annotation: (message, options = {}) => {
    let returnValue = `${OSC2}1337;`;
    const hasX = typeof options.x !== "undefined";
    const hasY = typeof options.y !== "undefined";
    if ((hasX || hasY) && !(hasX && hasY && typeof options.length !== "undefined")) {
      throw new Error("`x`, `y` and `length` must be defined when `x` or `y` is defined");
    }
    message = message.replace(/\|/g, "");
    returnValue += options.isHidden ? "AddHiddenAnnotation=" : "AddAnnotation=";
    if (options.length > 0) {
      returnValue += (hasX ? [message, options.length, options.x, options.y] : [options.length, message]).join("|");
    } else {
      returnValue += message;
    }
    return returnValue + BEL2;
  }
};
var ansi_escapes_default2 = ansiEscapes2;

// ../../node_modules/terminal-link/index.js
var import_supports_hyperlinks = __toESM(require_supports_hyperlinks(), 1);
function terminalLink(text, url, { target = "stdout", ...options } = {}) {
  if (!import_supports_hyperlinks.default[target]) {
    if (options.fallback === false) {
      return text;
    }
    return typeof options.fallback === "function" ? options.fallback(text, url) : `${text} (\u200B${url}\u200B)`;
  }
  return ansi_escapes_default2.link(text, url);
}
terminalLink.isSupported = import_supports_hyperlinks.default.stdout;
terminalLink.stderr = (text, url, options = {}) => terminalLink(text, url, { target: "stderr", ...options });
terminalLink.stderr.isSupported = import_supports_hyperlinks.default.stderr;

// ../cli-ui-kit/src/components/Link.tsx
var Link = ({ skin, children, url }) => {
  if (children) {
    if (terminalLink.isSupported) {
      return /* @__PURE__ */ import_react36.default.createElement(
        Transform,
        {
          transform: (childrenAsString) => terminalLink(childrenAsString, url, { fallback: false })
        },
        /* @__PURE__ */ import_react36.default.createElement(Text2, { skin }, children)
      );
    }
    return /* @__PURE__ */ import_react36.default.createElement(Text2, null, /* @__PURE__ */ import_react36.default.createElement(Text2, { skin }, children), " (", url, ")");
  }
  return /* @__PURE__ */ import_react36.default.createElement(Text2, { skin: "info" }, url);
};

// ../cli-ui-kit/src/components/Spinner.tsx
init_esm_shims();
var import_react38 = __toESM(require_react(), 1);

// ../../node_modules/ink-spinner/build/index.js
init_esm_shims();
var import_react37 = __toESM(require_react(), 1);
var import_cli_spinners = __toESM(require_cli_spinners(), 1);
function Spinner({ type = "dots" }) {
  const [frame, setFrame] = (0, import_react37.useState)(0);
  const spinner = import_cli_spinners.default[type];
  (0, import_react37.useEffect)(() => {
    const timer = setInterval(() => {
      setFrame((previousFrame) => {
        const isLastFrame = previousFrame === spinner.frames.length - 1;
        return isLastFrame ? 0 : previousFrame + 1;
      });
    }, spinner.interval);
    return () => {
      clearInterval(timer);
    };
  }, [spinner]);
  return import_react37.default.createElement(Text, null, spinner.frames[frame]);
}
var build_default2 = Spinner;

// ../cli-ui-kit/src/components/Spinner.tsx
var Spinner2 = ({ text }) => {
  const spinnerNode = /* @__PURE__ */ import_react38.default.createElement(Text2, { skin: "info" }, /* @__PURE__ */ import_react38.default.createElement(build_default2, { type: "dots" }));
  if (text) {
    return /* @__PURE__ */ import_react38.default.createElement(Box_default, { gap: 1 }, spinnerNode, typeof text === "string" ? /* @__PURE__ */ import_react38.default.createElement(Text2, null, text) : text);
  }
  return spinnerNode;
};

// ../cli-ui-kit/src/hooks/use-async.ts
init_esm_shims();
var import_variant5 = __toESM(require_lib(), 1);

// ../../node_modules/react-async-hook/dist/react-async-hook.esm.js
init_esm_shims();
var import_react39 = __toESM(require_react());
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var _iteratorSymbol = typeof Symbol !== "undefined" ? Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator")) : "@@iterator";
var _asyncIteratorSymbol = typeof Symbol !== "undefined" ? Symbol.asyncIterator || (Symbol.asyncIterator = Symbol("Symbol.asyncIterator")) : "@@asyncIterator";
var useIsomorphicLayoutEffect = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined" ? import_react39.useLayoutEffect : import_react39.useEffect;
var useGetter = function useGetter2(t3) {
  var ref = (0, import_react39.useRef)(t3);
  useIsomorphicLayoutEffect(function() {
    ref.current = t3;
  });
  return (0, import_react39.useCallback)(function() {
    return ref.current;
  }, [ref]);
};
var InitialAsyncState = {
  status: "not-requested",
  loading: false,
  result: void 0,
  error: void 0
};
var InitialAsyncLoadingState = {
  status: "loading",
  loading: true,
  result: void 0,
  error: void 0
};
var defaultSetLoading = function defaultSetLoading2(_asyncState) {
  return InitialAsyncLoadingState;
};
var defaultSetResult = function defaultSetResult2(result, _asyncState) {
  return {
    status: "success",
    loading: false,
    result,
    error: void 0
  };
};
var defaultSetError = function defaultSetError2(error, _asyncState) {
  return {
    status: "error",
    loading: false,
    result: void 0,
    error
  };
};
var noop2 = function noop3() {
};
var DefaultOptions = {
  initialState: function initialState(options) {
    return options && options.executeOnMount ? InitialAsyncLoadingState : InitialAsyncState;
  },
  executeOnMount: true,
  executeOnUpdate: true,
  setLoading: defaultSetLoading,
  setResult: defaultSetResult,
  setError: defaultSetError,
  onSuccess: noop2,
  onError: noop2
};
var normalizeOptions = function normalizeOptions2(options) {
  return _extends({}, DefaultOptions, {}, options);
};
var useAsyncState = function useAsyncState2(options) {
  var _useState = (0, import_react39.useState)(function() {
    return options.initialState(options);
  }), value2 = _useState[0], setValue = _useState[1];
  var reset = (0, import_react39.useCallback)(function() {
    return setValue(options.initialState(options));
  }, [setValue, options]);
  var setLoading = (0, import_react39.useCallback)(function() {
    return setValue(options.setLoading(value2));
  }, [value2, setValue]);
  var setResult = (0, import_react39.useCallback)(function(result) {
    return setValue(options.setResult(result, value2));
  }, [value2, setValue]);
  var setError = (0, import_react39.useCallback)(function(error) {
    return setValue(options.setError(error, value2));
  }, [value2, setValue]);
  var merge = (0, import_react39.useCallback)(function(state) {
    return setValue(_extends({}, value2, {}, state));
  }, [value2, setValue]);
  return {
    value: value2,
    set: setValue,
    merge,
    reset,
    setLoading,
    setResult,
    setError
  };
};
var useIsMounted = function useIsMounted2() {
  var ref = (0, import_react39.useRef)(false);
  (0, import_react39.useEffect)(function() {
    ref.current = true;
    return function() {
      ref.current = false;
    };
  }, []);
  return function() {
    return ref.current;
  };
};
var useCurrentPromise = function useCurrentPromise2() {
  var ref = (0, import_react39.useRef)(null);
  return {
    set: function set(promise) {
      return ref.current = promise;
    },
    get: function get2() {
      return ref.current;
    },
    is: function is(promise) {
      return ref.current === promise;
    }
  };
};
var useAsyncInternal = function useAsyncInternal2(asyncFunction, params, options) {
  !params && (params = []);
  var normalizedOptions = normalizeOptions(options);
  var _useState2 = (0, import_react39.useState)(null), currentParams = _useState2[0], setCurrentParams = _useState2[1];
  var AsyncState = useAsyncState(normalizedOptions);
  var isMounted = useIsMounted();
  var CurrentPromise = useCurrentPromise();
  var shouldHandlePromise = function shouldHandlePromise2(p) {
    return isMounted() && CurrentPromise.is(p);
  };
  var executeAsyncOperation = function executeAsyncOperation2() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var promise = function() {
      try {
        return Promise.resolve(asyncFunction.apply(void 0, args));
      } catch (e2) {
        return Promise.reject(e2);
      }
    }();
    setCurrentParams(args);
    CurrentPromise.set(promise);
    AsyncState.setLoading();
    promise.then(function(result) {
      if (shouldHandlePromise(promise)) {
        AsyncState.setResult(result);
      }
      normalizedOptions.onSuccess(result, {
        isCurrent: function isCurrent() {
          return CurrentPromise.is(promise);
        }
      });
    }, function(error) {
      if (shouldHandlePromise(promise)) {
        AsyncState.setError(error);
      }
      normalizedOptions.onError(error, {
        isCurrent: function isCurrent() {
          return CurrentPromise.is(promise);
        }
      });
    });
    return promise;
  };
  var getLatestExecuteAsyncOperation = useGetter(executeAsyncOperation);
  var executeAsyncOperationMemo = (0, import_react39.useCallback)(function() {
    return getLatestExecuteAsyncOperation().apply(void 0, arguments);
  }, [getLatestExecuteAsyncOperation]);
  var isMounting = !isMounted();
  (0, import_react39.useEffect)(function() {
    var execute = function execute2() {
      return getLatestExecuteAsyncOperation().apply(void 0, params);
    };
    isMounting && normalizedOptions.executeOnMount && execute();
    !isMounting && normalizedOptions.executeOnUpdate && execute();
  }, params);
  return _extends({}, AsyncState.value, {
    set: AsyncState.set,
    merge: AsyncState.merge,
    reset: AsyncState.reset,
    execute: executeAsyncOperationMemo,
    currentPromise: CurrentPromise.get(),
    currentParams
  });
};
function useAsync(asyncFunction, params, options) {
  return useAsyncInternal(asyncFunction, params, options);
}
var useAsyncCallback = function useAsyncCallback2(asyncFunction, options) {
  return useAsyncInternal(
    asyncFunction,
    // Hacky but in such case we don't need the params,
    // because async function is only executed manually
    [],
    _extends({}, options, {
      executeOnMount: false,
      executeOnUpdate: false
    })
  );
};

// ../cli-ui-kit/src/hooks/use-async.ts
var import_react41 = __toESM(require_react(), 1);

// ../cli-ui-kit/src/hooks/use-exit.ts
init_esm_shims();
var import_react40 = __toESM(require_react(), 1);
function useExit() {
  const { exit } = use_app_default();
  return (0, import_react40.useCallback)(
    (error) => {
      if (error instanceof Error) {
        exit(error);
      } else if (error !== void 0) {
        exit(new Error(JSON.stringify(error)));
      } else {
        exit();
      }
    },
    [exit]
  );
}

// ../cli-ui-kit/src/hooks/use-async.ts
var AsyncStatus = (0, import_variant5.variant)(
  (0, import_variant5.onTerms)(({ T: _T }) => ({
    Error: (error) => ({ error }),
    Success: (result) => ({ result }),
    Loading: () => ({})
  }))
);
var AsyncCallbackStatus = (0, import_variant5.variant)(
  (0, import_variant5.onTerms)(({ T: _T }) => ({
    Error: (error) => ({ error }),
    Success: (result) => ({ result }),
    Loading: () => ({}),
    NotRequested: () => ({})
  }))
);
var useAsync2 = (fn, args, options) => {
  const exit = useExit();
  const abortController = (0, import_react41.useMemo)(() => new AbortController(), []);
  const { result, error, status, merge } = useAsync(
    fn.bind(null, { signal: abortController.signal }),
    args,
    {
      onError: (e2) => exit(e2),
      ...options ?? {}
    }
  );
  (0, import_react41.useEffect)(() => {
    return () => {
      abortController.abort();
    };
  }, [abortController]);
  return (0, import_variant5.match)(status, {
    error: () => ({
      status: AsyncStatus.Error(
        error ?? new Error("Unexpected error state in useAsync")
      ),
      merge
    }),
    "not-requested": () => ({ status: AsyncStatus.Loading(), merge }),
    loading: () => ({ status: AsyncStatus.Loading(), merge }),
    // result could be undefined, if async function do not return async. We check all other states and here we just typecast to type from async function.
    success: () => ({ status: AsyncStatus.Success(result), merge })
  });
};
var useAsyncCallback3 = (fn, options) => {
  const exit = useExit();
  const abortController = (0, import_react41.useMemo)(() => new AbortController(), []);
  const { result, error, status, merge, execute } = useAsyncCallback(
    fn.bind(null, { signal: abortController.signal }),
    {
      onError: (e2) => exit(e2),
      ...options ?? {}
    }
  );
  (0, import_react41.useEffect)(() => {
    return () => {
      abortController.abort();
    };
  }, [abortController]);
  return (0, import_variant5.match)(status, {
    error: () => ({
      status: AsyncCallbackStatus.Error(
        error ?? new Error("Unexpected error state in useAsyncCallback")
      ),
      merge,
      execute
    }),
    "not-requested": () => ({
      status: AsyncCallbackStatus.NotRequested(),
      merge,
      execute
    }),
    loading: () => ({ status: AsyncCallbackStatus.Loading(), merge, execute }),
    success: () => ({
      // result could be undefined, if async function do not return async. We check all other states and here we just typecast to type from async function.
      status: AsyncCallbackStatus.Success(result),
      merge,
      execute
    })
  });
};

// ../cli-ui-kit/src/renderer.tsx
init_esm_shims();
var import_react42 = __toESM(require_react(), 1);
var ErrorBoundary = class extends import_react42.Component {
  state = { hasError: false };
  static getDerivedStateFromError(_error) {
    return { hasError: true };
  }
  componentDidCatch(e2) {
    const error = e2 instanceof Error ? e2 : new Error(JSON.stringify(e2));
    if (error.message.includes(
      "Raw mode is not supported on the current process.stdin, which Ink uses as input stream by default"
    )) {
      this.props.onExit(
        new CliError({
          code: CliErrorCode.NonInteractiveTerminal(),
          cause: error
        })
      );
    } else {
      this.props.onExit(error);
    }
  }
  render() {
    return this.state.hasError ? null : this.props.children;
  }
};
var ErrorBoundaryWrapper = ({ children }) => {
  const exit = useExit();
  return /* @__PURE__ */ import_react42.default.createElement(ErrorBoundary, { onExit: exit }, children);
};
var FrameWrapper = ({
  children,
  wrap
}) => {
  return /* @__PURE__ */ import_react42.default.createElement(import_react42.default.Fragment, null, wrap && /* @__PURE__ */ import_react42.default.createElement(Text, null, "----RENDER-FRAME-START----"), children, wrap && /* @__PURE__ */ import_react42.default.createElement(Text, null, "----RENDER-FRAME-END----"));
};
async function render2(tree) {
  const debug = !!getTestOverrides().inkDebug;
  const { waitUntilExit, unmount } = render_default(
    /* @__PURE__ */ import_react42.default.createElement(FrameWrapper, { wrap: debug }, /* @__PURE__ */ import_react42.default.createElement(ErrorBoundaryWrapper, null, tree)),
    { exitOnCtrlC: true, debug }
  );
  process.once("beforeExit", () => {
    unmount();
  });
  process.once("SIGINT", () => {
    unmount();
  });
  await waitUntilExit();
}
function renderSyncInternal(tree, renderOptions) {
  const debug = !!getTestOverrides().inkDebug;
  const { unmount } = render_default(
    /* @__PURE__ */ import_react42.default.createElement(FrameWrapper, { wrap: debug }, tree),
    {
      debug,
      ...renderOptions
    }
  );
  unmount();
}
function renderSync(tree) {
  renderSyncInternal(tree);
}
function renderErrorSync(tree) {
  renderSyncInternal(tree, {
    stdout: process.stderr
  });
}

// ../cli-ui-kit/src/index.ts
init_esm_shims();

// ../cli-ui-kit/src/components/UnorderedList/index.ts
init_esm_shims();

// ../cli-ui-kit/src/components/UnorderedList/UnorderedList.tsx
init_esm_shims();
var import_react46 = __toESM(require_react(), 1);

// ../cli-ui-kit/src/components/UnorderedList/UnorderedListItem.tsx
init_esm_shims();
var import_react44 = __toESM(require_react(), 1);

// ../cli-ui-kit/src/components/UnorderedList/UnorderedListItemContext.ts
init_esm_shims();
var import_react43 = __toESM(require_react(), 1);

// ../cli-ui-kit/src/components/UnorderedList/DefaultMarker.ts
init_esm_shims();
var defaultMarker = isUnicodeSupported() ? "\u25CF" : "*";

// ../cli-ui-kit/src/components/UnorderedList/UnorderedListItemContext.ts
var UnorderedListItemContext = (0, import_react43.createContext)({
  marker: defaultMarker
});

// ../cli-ui-kit/src/components/UnorderedList/UnorderedListItem.tsx
function UnorderedListItem({
  children,
  marker: markerOverride,
  ...style
}) {
  let { marker } = (0, import_react44.useContext)(UnorderedListItemContext);
  if (markerOverride !== void 0) {
    marker = markerOverride;
  }
  return /* @__PURE__ */ import_react44.default.createElement(Box_default, { gap: 1 }, marker && /* @__PURE__ */ import_react44.default.createElement(Text, null, marker), /* @__PURE__ */ import_react44.default.createElement(Box_default, { flexDirection: "column", ...style }, children));
}

// ../cli-ui-kit/src/components/UnorderedList/UnorderedListContext.ts
init_esm_shims();
var import_react45 = __toESM(require_react(), 1);
var UnorderedListContext = (0, import_react45.createContext)({
  depth: 0
});

// ../cli-ui-kit/src/components/UnorderedList/UnorderedList.tsx
function UnorderedList({
  children,
  marker: markerOverride,
  ...style
}) {
  const { depth } = (0, import_react46.useContext)(UnorderedListContext);
  const { marker } = (0, import_react46.useContext)(UnorderedListItemContext);
  const listContext = (0, import_react46.useMemo)(
    () => ({
      depth: depth + 1
    }),
    [depth]
  );
  const listItemContext = (0, import_react46.useMemo)(() => {
    if (typeof markerOverride === "string") {
      return { marker: markerOverride };
    }
    if (typeof marker === "string") {
      return { marker };
    }
    return { marker: defaultMarker };
  }, [marker, markerOverride]);
  return /* @__PURE__ */ import_react46.default.createElement(UnorderedListContext.Provider, { value: listContext }, /* @__PURE__ */ import_react46.default.createElement(UnorderedListItemContext.Provider, { value: listItemContext }, /* @__PURE__ */ import_react46.default.createElement(Box_default, { ...style, flexDirection: "column", marginLeft: depth * 2 }, children)));
}
UnorderedList.Item = UnorderedListItem;

// ../cli-ui-kit/src/components/TextInput/Input.tsx
init_esm_shims();
var import_react47 = __toESM(require_react(), 1);
var Input2 = ({
  onSubmit,
  onChange,
  placeholder,
  showCursor
}) => {
  const [currentValue, setCurrentValue] = (0, import_react47.useState)("");
  return /* @__PURE__ */ import_react47.default.createElement(
    build_default,
    {
      showCursor,
      placeholder,
      value: currentValue,
      onChange: (value2) => {
        setCurrentValue(value2);
        onChange?.(value2);
      },
      onSubmit: () => {
        if (!currentValue && placeholder) {
          onSubmit?.(placeholder);
        } else {
          onSubmit?.(currentValue);
        }
      }
    }
  );
};

// ../cli-ui-kit/src/components/TextInput/index.ts
init_esm_shims();

// ../cli-ui-kit/src/components/TextInput/TextInput.tsx
init_esm_shims();
var import_react48 = __toESM(require_react(), 1);
var import_variant6 = __toESM(require_lib(), 1);
var TextInput2 = ({
  label,
  placeholder,
  onSubmit,
  validate = () => true,
  inCreateFlow = false
}) => {
  const [inputState, setInputState] = (0, import_react48.useState)(
    () => InputState.NotSubmitted(placeholder)
  );
  const [isDirty, setIsDirty] = (0, import_react48.useState)(false);
  const [validationError, setValidationError] = (0, import_react48.useState)();
  const handleSubmit = (0, import_react48.useCallback)(
    async (value2) => {
      setIsDirty(false);
      const validationResult = await validate(value2);
      if (validationResult !== true) {
        setValidationError(validationResult);
      } else {
        setValidationError(void 0);
        setInputState(InputState.Submitted(value2));
        onSubmit(value2);
      }
    },
    [onSubmit, validate]
  );
  const afterValidationError = Boolean(validationError && !isDirty);
  return /* @__PURE__ */ import_react48.default.createElement(import_react48.default.Fragment, null, /* @__PURE__ */ import_react48.default.createElement(Box_default, { marginBottom: 1, marginLeft: inCreateFlow ? -2 : 0 }, /* @__PURE__ */ import_react48.default.createElement(Text2, null, /* @__PURE__ */ import_react48.default.createElement(
    InputLabel,
    {
      icon: /* @__PURE__ */ import_react48.default.createElement(Text2, { skin: "question" }, /* @__PURE__ */ import_react48.default.createElement(PointerIcon, { appearance: "triangle" }))
    },
    label
  ), (0, import_variant6.isType)(inputState, InputState.NotSubmitted) && /* @__PURE__ */ import_react48.default.createElement(import_react48.default.Fragment, null, " ", /* @__PURE__ */ import_react48.default.createElement(Text2, { skin: afterValidationError ? "error" : "standard" }, /* @__PURE__ */ import_react48.default.createElement(
    Input2,
    {
      placeholder: inputState.value,
      onSubmit: handleSubmit,
      onChange: () => setIsDirty(true),
      showCursor: afterValidationError
    }
  ))))), (0, import_variant6.isType)(inputState, InputState.Submitted) && /* @__PURE__ */ import_react48.default.createElement(Box_default, { marginBottom: 1 }, /* @__PURE__ */ import_react48.default.createElement(Text2, { skin: "secondary" }, /* @__PURE__ */ import_react48.default.createElement(SuccessIcon, null), " ", inputState.value)), validationError && /* @__PURE__ */ import_react48.default.createElement(Box_default, { columnGap: 1 }, /* @__PURE__ */ import_react48.default.createElement(Text2, { skin: "error" }, /* @__PURE__ */ import_react48.default.createElement(PointerIcon, { appearance: "exclamation" })), /* @__PURE__ */ import_react48.default.createElement(Text2, { skin: "error" }, validationError)));
};

// ../cli-ui-kit/src/components/Key.tsx
init_esm_shims();
var import_react49 = __toESM(require_react(), 1);
var Key = ({ value: value2, skin }) => {
  if (skin === "secondary") {
    return /* @__PURE__ */ import_react49.default.createElement(Text, null, /* @__PURE__ */ import_react49.default.createElement(Text, { inverse: true }, " ", value2, " "), /* @__PURE__ */ import_react49.default.createElement(Text, null, "\u2591"));
  }
  return /* @__PURE__ */ import_react49.default.createElement(Text, null, /* @__PURE__ */ import_react49.default.createElement(Text, { backgroundColor: "blueBright" }, " ", value2, " "), /* @__PURE__ */ import_react49.default.createElement(Text, { color: "blueBright" }, "\u2591"));
};

// ../cli-ui-kit/src/components/ErrorDetails.tsx
init_esm_shims();
var import_react50 = __toESM(require_react(), 1);
var ErrorDetails = ({
  message,
  explanation,
  hint
}) => /* @__PURE__ */ import_react50.default.createElement(Box_default, { flexDirection: "column" }, /* @__PURE__ */ import_react50.default.createElement(Alert, { type: "error" }, message), explanation && /* @__PURE__ */ import_react50.default.createElement(Alert, { type: "warning" }, explanation), hint && /* @__PURE__ */ import_react50.default.createElement(Box_default, { paddingTop: 1 }, /* @__PURE__ */ import_react50.default.createElement(Alert, { type: "insight" }, hint)));

// ../cli-ui-kit/src/components/Notification.tsx
init_esm_shims();
var import_react51 = __toESM(require_react(), 1);
var Notification = ({ children }) => {
  return /* @__PURE__ */ import_react51.default.createElement(Box_default, null, /* @__PURE__ */ import_react51.default.createElement(
    Box_default,
    {
      padding: 1,
      alignItems: "center",
      flexDirection: "column",
      borderColor: "yellowBright",
      borderStyle: "round"
    },
    children
  ));
};

// ../../node_modules/react-i18next/dist/es/Trans.js
init_esm_shims();
var import_react54 = __toESM(require_react(), 1);

// ../../node_modules/react-i18next/dist/es/TransWithoutContext.js
init_esm_shims();
var import_react52 = __toESM(require_react(), 1);

// ../../node_modules/html-parse-stringify/dist/html-parse-stringify.module.js
init_esm_shims();
var import_void_elements = __toESM(require_void_elements());
var t = /\s([^'"/\s><]+?)[\s/>]|([^\s=]+)=\s?(".*?"|'.*?')/g;
function n(n2) {
  var r2 = { type: "tag", name: "", voidElement: false, attrs: {}, children: [] }, i2 = n2.match(/<\/?([^\s]+?)[/\s>]/);
  if (i2 && (r2.name = i2[1], (import_void_elements.default[i2[1]] || "/" === n2.charAt(n2.length - 2)) && (r2.voidElement = true), r2.name.startsWith("!--"))) {
    var s2 = n2.indexOf("-->");
    return { type: "comment", comment: -1 !== s2 ? n2.slice(4, s2) : "" };
  }
  for (var a2 = new RegExp(t), c2 = null; null !== (c2 = a2.exec(n2)); ) if (c2[0].trim()) if (c2[1]) {
    var o = c2[1].trim(), l = [o, ""];
    o.indexOf("=") > -1 && (l = o.split("=")), r2.attrs[l[0]] = l[1], a2.lastIndex--;
  } else c2[2] && (r2.attrs[c2[2]] = c2[3].trim().substring(1, c2[3].length - 1));
  return r2;
}
var r = /<[a-zA-Z0-9\-\!\/](?:"[^"]*"|'[^']*'|[^'">])*>/g;
var i = /^\s*$/;
var s = /* @__PURE__ */ Object.create(null);
function a(e2, t3) {
  switch (t3.type) {
    case "text":
      return e2 + t3.content;
    case "tag":
      return e2 += "<" + t3.name + (t3.attrs ? function(e3) {
        var t4 = [];
        for (var n2 in e3) t4.push(n2 + '="' + e3[n2] + '"');
        return t4.length ? " " + t4.join(" ") : "";
      }(t3.attrs) : "") + (t3.voidElement ? "/>" : ">"), t3.voidElement ? e2 : e2 + t3.children.reduce(a, "") + "</" + t3.name + ">";
    case "comment":
      return e2 + "<!--" + t3.comment + "-->";
  }
}
var c = { parse: function(e2, t3) {
  t3 || (t3 = {}), t3.components || (t3.components = s);
  var a2, c2 = [], o = [], l = -1, m = false;
  if (0 !== e2.indexOf("<")) {
    var u = e2.indexOf("<");
    c2.push({ type: "text", content: -1 === u ? e2 : e2.substring(0, u) });
  }
  return e2.replace(r, function(r2, s2) {
    if (m) {
      if (r2 !== "</" + a2.name + ">") return;
      m = false;
    }
    var u2, f = "/" !== r2.charAt(1), h = r2.startsWith("<!--"), p = s2 + r2.length, d = e2.charAt(p);
    if (h) {
      var v = n(r2);
      return l < 0 ? (c2.push(v), c2) : ((u2 = o[l]).children.push(v), c2);
    }
    if (f && (l++, "tag" === (a2 = n(r2)).type && t3.components[a2.name] && (a2.type = "component", m = true), a2.voidElement || m || !d || "<" === d || a2.children.push({ type: "text", content: e2.slice(p, e2.indexOf("<", p)) }), 0 === l && c2.push(a2), (u2 = o[l - 1]) && u2.children.push(a2), o[l] = a2), (!f || a2.voidElement) && (l > -1 && (a2.voidElement || a2.name === r2.slice(2, -1)) && (l--, a2 = -1 === l ? c2 : o[l]), !m && "<" !== d && d)) {
      u2 = -1 === l ? c2 : o[l].children;
      var x = e2.indexOf("<", p), g = e2.slice(p, -1 === x ? void 0 : x);
      i.test(g) && (g = " "), (x > -1 && l + u2.length >= 0 || " " !== g) && u2.push({ type: "text", content: g });
    }
  }), c2;
}, stringify: function(e2) {
  return e2.reduce(function(e3, t3) {
    return e3 + a("", t3);
  }, "");
} };
var html_parse_stringify_module_default = c;

// ../../node_modules/react-i18next/dist/es/utils.js
init_esm_shims();
var warn = (i18n, code, msg, rest) => {
  const args = [msg, {
    code,
    ...rest || {}
  }];
  if (i18n?.services?.logger?.forward) {
    return i18n.services.logger.forward(args, "warn", "react-i18next::", true);
  }
  if (isString(args[0])) args[0] = `react-i18next:: ${args[0]}`;
  if (i18n?.services?.logger?.warn) {
    i18n.services.logger.warn(...args);
  } else if (console?.warn) {
    console.warn(...args);
  }
};
var alreadyWarned = {};
var warnOnce = (i18n, code, msg, rest) => {
  if (isString(msg) && alreadyWarned[msg]) return;
  if (isString(msg)) alreadyWarned[msg] = /* @__PURE__ */ new Date();
  warn(i18n, code, msg, rest);
};
var loadedClb = (i18n, cb) => () => {
  if (i18n.isInitialized) {
    cb();
  } else {
    const initialized = () => {
      setTimeout(() => {
        i18n.off("initialized", initialized);
      }, 0);
      cb();
    };
    i18n.on("initialized", initialized);
  }
};
var loadNamespaces = (i18n, ns, cb) => {
  i18n.loadNamespaces(ns, loadedClb(i18n, cb));
};
var loadLanguages = (i18n, lng, ns, cb) => {
  if (isString(ns)) ns = [ns];
  if (i18n.options.preload && i18n.options.preload.indexOf(lng) > -1) return loadNamespaces(i18n, ns, cb);
  ns.forEach((n2) => {
    if (i18n.options.ns.indexOf(n2) < 0) i18n.options.ns.push(n2);
  });
  i18n.loadLanguages(lng, loadedClb(i18n, cb));
};
var hasLoadedNamespace = (ns, i18n, options = {}) => {
  if (!i18n.languages || !i18n.languages.length) {
    warnOnce(i18n, "NO_LANGUAGES", "i18n.languages were undefined or empty", {
      languages: i18n.languages
    });
    return true;
  }
  return i18n.hasLoadedNamespace(ns, {
    lng: options.lng,
    precheck: (i18nInstance2, loadNotPending) => {
      if (options.bindI18n?.indexOf("languageChanging") > -1 && i18nInstance2.services.backendConnector.backend && i18nInstance2.isLanguageChangingTo && !loadNotPending(i18nInstance2.isLanguageChangingTo, ns)) return false;
    }
  });
};
var isString = (obj) => typeof obj === "string";
var isObject = (obj) => typeof obj === "object" && obj !== null;

// ../../node_modules/react-i18next/dist/es/defaults.js
init_esm_shims();

// ../../node_modules/react-i18next/dist/es/unescape.js
init_esm_shims();
var matchHtmlEntity = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g;
var htmlEntities = {
  "&amp;": "&",
  "&#38;": "&",
  "&lt;": "<",
  "&#60;": "<",
  "&gt;": ">",
  "&#62;": ">",
  "&apos;": "'",
  "&#39;": "'",
  "&quot;": '"',
  "&#34;": '"',
  "&nbsp;": " ",
  "&#160;": " ",
  "&copy;": "\xA9",
  "&#169;": "\xA9",
  "&reg;": "\xAE",
  "&#174;": "\xAE",
  "&hellip;": "\u2026",
  "&#8230;": "\u2026",
  "&#x2F;": "/",
  "&#47;": "/"
};
var unescapeHtmlEntity = (m) => htmlEntities[m];
var unescape = (text) => text.replace(matchHtmlEntity, unescapeHtmlEntity);

// ../../node_modules/react-i18next/dist/es/defaults.js
var defaultOptions = {
  bindI18n: "languageChanged",
  bindI18nStore: "",
  transEmptyNodeValue: "",
  transSupportBasicHtmlNodes: true,
  transWrapTextNodes: "",
  transKeepBasicHtmlNodesFor: ["br", "strong", "i", "p"],
  useSuspense: true,
  unescape
};
var setDefaults = (options = {}) => {
  defaultOptions = {
    ...defaultOptions,
    ...options
  };
};
var getDefaults = () => defaultOptions;

// ../../node_modules/react-i18next/dist/es/i18nInstance.js
init_esm_shims();
var i18nInstance;
var setI18n = (instance2) => {
  i18nInstance = instance2;
};
var getI18n = () => i18nInstance;

// ../../node_modules/react-i18next/dist/es/TransWithoutContext.js
var hasChildren = (node, checkLength) => {
  if (!node) return false;
  const base = node.props?.children ?? node.children;
  if (checkLength) return base.length > 0;
  return !!base;
};
var getChildren = (node) => {
  if (!node) return [];
  const children = node.props?.children ?? node.children;
  return node.props?.i18nIsDynamicList ? getAsArray(children) : children;
};
var hasValidReactChildren = (children) => Array.isArray(children) && children.every(import_react52.isValidElement);
var getAsArray = (data) => Array.isArray(data) ? data : [data];
var mergeProps = (source, target) => {
  const newTarget = {
    ...target
  };
  newTarget.props = Object.assign(source.props, target.props);
  return newTarget;
};
var nodesToString = (children, i18nOptions, i18n, i18nKey) => {
  if (!children) return "";
  let stringNode = "";
  const childrenArray = getAsArray(children);
  const keepArray = i18nOptions?.transSupportBasicHtmlNodes ? i18nOptions.transKeepBasicHtmlNodesFor ?? [] : [];
  childrenArray.forEach((child, childIndex) => {
    if (isString(child)) {
      stringNode += `${child}`;
      return;
    }
    if ((0, import_react52.isValidElement)(child)) {
      const {
        props,
        type
      } = child;
      const childPropsCount = Object.keys(props).length;
      const shouldKeepChild = keepArray.indexOf(type) > -1;
      const childChildren = props.children;
      if (!childChildren && shouldKeepChild && !childPropsCount) {
        stringNode += `<${type}/>`;
        return;
      }
      if (!childChildren && (!shouldKeepChild || childPropsCount) || props.i18nIsDynamicList) {
        stringNode += `<${childIndex}></${childIndex}>`;
        return;
      }
      if (shouldKeepChild && childPropsCount === 1 && isString(childChildren)) {
        stringNode += `<${type}>${childChildren}</${type}>`;
        return;
      }
      const content = nodesToString(childChildren, i18nOptions, i18n, i18nKey);
      stringNode += `<${childIndex}>${content}</${childIndex}>`;
      return;
    }
    if (child === null) {
      warn(i18n, "TRANS_NULL_VALUE", `Passed in a null value as child`, {
        i18nKey
      });
      return;
    }
    if (isObject(child)) {
      const {
        format,
        ...clone
      } = child;
      const keys = Object.keys(clone);
      if (keys.length === 1) {
        const value2 = format ? `${keys[0]}, ${format}` : keys[0];
        stringNode += `{{${value2}}}`;
        return;
      }
      warn(i18n, "TRANS_INVALID_OBJ", `Invalid child - Object should only have keys {{ value, format }} (format is optional).`, {
        i18nKey,
        child
      });
      return;
    }
    warn(i18n, "TRANS_INVALID_VAR", `Passed in a variable like {number} - pass variables for interpolation as full objects like {{number}}.`, {
      i18nKey,
      child
    });
  });
  return stringNode;
};
var renderNodes = (children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) => {
  if (targetString === "") return [];
  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];
  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map((keep) => `<${keep}`).join("|")).test(targetString);
  if (!children && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];
  const data = {};
  const getData = (childs) => {
    const childrenArray = getAsArray(childs);
    childrenArray.forEach((child) => {
      if (isString(child)) return;
      if (hasChildren(child)) getData(getChildren(child));
      else if (isObject(child) && !(0, import_react52.isValidElement)(child)) Object.assign(data, child);
    });
  };
  getData(children);
  const ast = html_parse_stringify_module_default.parse(`<0>${targetString}</0>`);
  const opts = {
    ...data,
    ...combinedTOpts
  };
  const renderInner = (child, node, rootReactNode) => {
    const childs = getChildren(child);
    const mappedChildren = mapAST(childs, node.children, rootReactNode);
    return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props?.i18nIsDynamicList ? childs : mappedChildren;
  };
  const pushTranslatedJSX = (child, inner, mem, i2, isVoid) => {
    if (child.dummy) {
      child.children = inner;
      mem.push((0, import_react52.cloneElement)(child, {
        key: i2
      }, isVoid ? void 0 : inner));
    } else {
      mem.push(...import_react52.Children.map([child], (c2) => {
        const props = {
          ...c2.props
        };
        delete props.i18nIsDynamicList;
        return (0, import_react52.createElement)(c2.type, {
          ...props,
          key: i2,
          ref: c2.ref
        }, isVoid ? null : inner);
      }));
    }
  };
  const mapAST = (reactNode, astNode, rootReactNode) => {
    const reactNodes = getAsArray(reactNode);
    const astNodes = getAsArray(astNode);
    return astNodes.reduce((mem, node, i2) => {
      const translationContent = node.children?.[0]?.content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);
      if (node.type === "tag") {
        let tmp = reactNodes[parseInt(node.name, 10)];
        if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];
        if (!tmp) tmp = {};
        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({
          props: node.attrs
        }, tmp) : tmp;
        const isElement = (0, import_react52.isValidElement)(child);
        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;
        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && isObject(child) && child.dummy && !isElement;
        const isKnownComponent = isObject(children) && Object.hasOwnProperty.call(children, node.name);
        if (isString(child)) {
          const value2 = i18n.services.interpolator.interpolate(child, opts, i18n.language);
          mem.push(value2);
        } else if (hasChildren(child) || isValidTranslationWithChildren) {
          const inner = renderInner(child, node, rootReactNode);
          pushTranslatedJSX(child, inner, mem, i2);
        } else if (isEmptyTransWithHTML) {
          const inner = mapAST(reactNodes, node.children, rootReactNode);
          pushTranslatedJSX(child, inner, mem, i2);
        } else if (Number.isNaN(parseFloat(node.name))) {
          if (isKnownComponent) {
            const inner = renderInner(child, node, rootReactNode);
            pushTranslatedJSX(child, inner, mem, i2, node.voidElement);
          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {
            if (node.voidElement) {
              mem.push((0, import_react52.createElement)(node.name, {
                key: `${node.name}-${i2}`
              }));
            } else {
              const inner = mapAST(reactNodes, node.children, rootReactNode);
              mem.push((0, import_react52.createElement)(node.name, {
                key: `${node.name}-${i2}`
              }, inner));
            }
          } else if (node.voidElement) {
            mem.push(`<${node.name} />`);
          } else {
            const inner = mapAST(reactNodes, node.children, rootReactNode);
            mem.push(`<${node.name}>${inner}</${node.name}>`);
          }
        } else if (isObject(child) && !isElement) {
          const content = node.children[0] ? translationContent : null;
          if (content) mem.push(content);
        } else {
          pushTranslatedJSX(child, translationContent, mem, i2, node.children.length !== 1 || !translationContent);
        }
      } else if (node.type === "text") {
        const wrapTextNodes = i18nOptions.transWrapTextNodes;
        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);
        if (wrapTextNodes) {
          mem.push((0, import_react52.createElement)(wrapTextNodes, {
            key: `${node.name}-${i2}`
          }, content));
        } else {
          mem.push(content);
        }
      }
      return mem;
    }, []);
  };
  const result = mapAST([{
    dummy: true,
    children: children || []
  }], ast, getAsArray(children || []));
  return getChildren(result[0]);
};
var fixComponentProps = (component, index, translation) => {
  const componentKey = component.key || index;
  const comp = (0, import_react52.cloneElement)(component, {
    key: componentKey
  });
  if (!comp.props || !comp.props.children || translation.indexOf(`${index}/>`) < 0 && translation.indexOf(`${index} />`) < 0) {
    return comp;
  }
  function Componentized() {
    return (0, import_react52.createElement)(import_react52.Fragment, null, comp);
  }
  return (0, import_react52.createElement)(Componentized);
};
var generateArrayComponents = (components, translation) => components.map((c2, index) => fixComponentProps(c2, index, translation));
var generateObjectComponents = (components, translation) => {
  const componentMap = {};
  Object.keys(components).forEach((c2) => {
    Object.assign(componentMap, {
      [c2]: fixComponentProps(components[c2], c2, translation)
    });
  });
  return componentMap;
};
var generateComponents = (components, translation, i18n, i18nKey) => {
  if (!components) return null;
  if (Array.isArray(components)) {
    return generateArrayComponents(components, translation);
  }
  if (isObject(components)) {
    return generateObjectComponents(components, translation);
  }
  warnOnce(i18n, "TRANS_INVALID_COMPONENTS", `<Trans /> "components" prop expects an object or array`, {
    i18nKey
  });
  return null;
};
function Trans({
  children,
  count,
  parent,
  i18nKey,
  context,
  tOptions = {},
  values,
  defaults: defaults2,
  components,
  ns,
  i18n: i18nFromProps,
  t: tFromProps,
  shouldUnescape,
  ...additionalProps
}) {
  const i18n = i18nFromProps || getI18n();
  if (!i18n) {
    warnOnce(i18n, "NO_I18NEXT_INSTANCE", `Trans: You need to pass in an i18next instance using i18nextReactModule`, {
      i18nKey
    });
    return children;
  }
  const t3 = tFromProps || i18n.t.bind(i18n) || ((k) => k);
  const reactI18nextOptions = {
    ...getDefaults(),
    ...i18n.options?.react
  };
  let namespaces = ns || t3.ns || i18n.options?.defaultNS;
  namespaces = isString(namespaces) ? [namespaces] : namespaces || ["translation"];
  const nodeAsString = nodesToString(children, reactI18nextOptions, i18n, i18nKey);
  const defaultValue = defaults2 || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;
  const {
    hashTransKey
  } = reactI18nextOptions;
  const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);
  if (i18n.options?.interpolation?.defaultVariables) {
    values = values && Object.keys(values).length > 0 ? {
      ...values,
      ...i18n.options.interpolation.defaultVariables
    } : {
      ...i18n.options.interpolation.defaultVariables
    };
  }
  const interpolationOverride = values || count !== void 0 && !i18n.options?.interpolation?.alwaysFormat || !children ? tOptions.interpolation : {
    interpolation: {
      ...tOptions.interpolation,
      prefix: "#$?",
      suffix: "?$#"
    }
  };
  const combinedTOpts = {
    ...tOptions,
    context: context || tOptions.context,
    count,
    ...values,
    ...interpolationOverride,
    defaultValue,
    ns: namespaces
  };
  const translation = key ? t3(key, combinedTOpts) : defaultValue;
  const generatedComponents = generateComponents(components, translation, i18n, i18nKey);
  const content = renderNodes(generatedComponents || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);
  const useAsParent = parent ?? reactI18nextOptions.defaultTransParent;
  return useAsParent ? (0, import_react52.createElement)(useAsParent, additionalProps, content) : content;
}

// ../../node_modules/react-i18next/dist/es/context.js
init_esm_shims();
var import_react53 = __toESM(require_react(), 1);

// ../../node_modules/react-i18next/dist/es/initReactI18next.js
init_esm_shims();
var initReactI18next = {
  type: "3rdParty",
  init(instance2) {
    setDefaults(instance2.options.react);
    setI18n(instance2);
  }
};

// ../../node_modules/react-i18next/dist/es/context.js
var I18nContext = (0, import_react53.createContext)();
var ReportNamespaces = class {
  constructor() {
    this.usedNamespaces = {};
  }
  addUsedNamespaces(namespaces) {
    namespaces.forEach((ns) => {
      if (!this.usedNamespaces[ns]) this.usedNamespaces[ns] = true;
    });
  }
  getUsedNamespaces() {
    return Object.keys(this.usedNamespaces);
  }
};

// ../../node_modules/react-i18next/dist/es/Trans.js
function Trans2({
  children,
  count,
  parent,
  i18nKey,
  context,
  tOptions = {},
  values,
  defaults: defaults2,
  components,
  ns,
  i18n: i18nFromProps,
  t: tFromProps,
  shouldUnescape,
  ...additionalProps
}) {
  const {
    i18n: i18nFromContext,
    defaultNS: defaultNSFromContext
  } = (0, import_react54.useContext)(I18nContext) || {};
  const i18n = i18nFromProps || i18nFromContext || getI18n();
  const t3 = tFromProps || i18n?.t.bind(i18n);
  return Trans({
    children,
    count,
    parent,
    i18nKey,
    context,
    tOptions,
    values,
    defaults: defaults2,
    components,
    ns: ns || t3?.ns || defaultNSFromContext || i18n?.options?.defaultNS,
    i18n,
    t: tFromProps,
    shouldUnescape,
    ...additionalProps
  });
}

// ../../node_modules/react-i18next/dist/es/useTranslation.js
init_esm_shims();
var import_react55 = __toESM(require_react(), 1);
var usePrevious = (value2, ignore) => {
  const ref = (0, import_react55.useRef)();
  (0, import_react55.useEffect)(() => {
    ref.current = ignore ? ref.current : value2;
  }, [value2, ignore]);
  return ref.current;
};
var alwaysNewT = (i18n, language, namespace, keyPrefix) => i18n.getFixedT(language, namespace, keyPrefix);
var useMemoizedT = (i18n, language, namespace, keyPrefix) => (0, import_react55.useCallback)(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);
var useTranslation = (ns, props = {}) => {
  const {
    i18n: i18nFromProps
  } = props;
  const {
    i18n: i18nFromContext,
    defaultNS: defaultNSFromContext
  } = (0, import_react55.useContext)(I18nContext) || {};
  const i18n = i18nFromProps || i18nFromContext || getI18n();
  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();
  if (!i18n) {
    warnOnce(i18n, "NO_I18NEXT_INSTANCE", "useTranslation: You will need to pass in an i18next instance by using initReactI18next");
    const notReadyT = (k, optsOrDefaultValue) => {
      if (isString(optsOrDefaultValue)) return optsOrDefaultValue;
      if (isObject(optsOrDefaultValue) && isString(optsOrDefaultValue.defaultValue)) return optsOrDefaultValue.defaultValue;
      return Array.isArray(k) ? k[k.length - 1] : k;
    };
    const retNotReady = [notReadyT, {}, false];
    retNotReady.t = notReadyT;
    retNotReady.i18n = {};
    retNotReady.ready = false;
    return retNotReady;
  }
  if (i18n.options.react?.wait) warnOnce(i18n, "DEPRECATED_OPTION", "useTranslation: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.");
  const i18nOptions = {
    ...getDefaults(),
    ...i18n.options.react,
    ...props
  };
  const {
    useSuspense,
    keyPrefix
  } = i18nOptions;
  let namespaces = ns || defaultNSFromContext || i18n.options?.defaultNS;
  namespaces = isString(namespaces) ? [namespaces] : namespaces || ["translation"];
  i18n.reportNamespaces.addUsedNamespaces?.(namespaces);
  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every((n2) => hasLoadedNamespace(n2, i18n, i18nOptions));
  const memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === "fallback" ? namespaces : namespaces[0], keyPrefix);
  const getT = () => memoGetT;
  const getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === "fallback" ? namespaces : namespaces[0], keyPrefix);
  const [t3, setT] = (0, import_react55.useState)(getT);
  let joinedNS = namespaces.join();
  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;
  const previousJoinedNS = usePrevious(joinedNS);
  const isMounted = (0, import_react55.useRef)(true);
  (0, import_react55.useEffect)(() => {
    const {
      bindI18n,
      bindI18nStore
    } = i18nOptions;
    isMounted.current = true;
    if (!ready && !useSuspense) {
      if (props.lng) {
        loadLanguages(i18n, props.lng, namespaces, () => {
          if (isMounted.current) setT(getNewT);
        });
      } else {
        loadNamespaces(i18n, namespaces, () => {
          if (isMounted.current) setT(getNewT);
        });
      }
    }
    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {
      setT(getNewT);
    }
    const boundReset = () => {
      if (isMounted.current) setT(getNewT);
    };
    if (bindI18n) i18n?.on(bindI18n, boundReset);
    if (bindI18nStore) i18n?.store.on(bindI18nStore, boundReset);
    return () => {
      isMounted.current = false;
      if (i18n) bindI18n?.split(" ").forEach((e2) => i18n.off(e2, boundReset));
      if (bindI18nStore && i18n) bindI18nStore.split(" ").forEach((e2) => i18n.store.off(e2, boundReset));
    };
  }, [i18n, joinedNS]);
  (0, import_react55.useEffect)(() => {
    if (isMounted.current && ready) {
      setT(getT);
    }
  }, [i18n, keyPrefix, ready]);
  const ret = [t3, i18n, ready];
  ret.t = t3;
  ret.i18n = i18n;
  ret.ready = ready;
  if (ready) return ret;
  if (!ready && !useSuspense) return ret;
  throw new Promise((resolve) => {
    if (props.lng) {
      loadLanguages(i18n, props.lng, namespaces, () => resolve());
    } else {
      loadNamespaces(i18n, namespaces, () => resolve());
    }
  });
};

// ../../node_modules/react-i18next/dist/es/index.js
init_esm_shims();

// ../../node_modules/react-i18next/dist/es/withTranslation.js
init_esm_shims();
var import_react56 = __toESM(require_react(), 1);

// ../../node_modules/react-i18next/dist/es/Translation.js
init_esm_shims();

// ../../node_modules/react-i18next/dist/es/I18nextProvider.js
init_esm_shims();
var import_react57 = __toESM(require_react(), 1);
function I18nextProvider({
  i18n,
  defaultNS,
  children
}) {
  const value2 = (0, import_react57.useMemo)(() => ({
    i18n,
    defaultNS
  }), [i18n, defaultNS]);
  return (0, import_react57.createElement)(I18nContext.Provider, {
    value: value2
  }, children);
}

// ../../node_modules/react-i18next/dist/es/withSSR.js
init_esm_shims();
var import_react59 = __toESM(require_react(), 1);

// ../../node_modules/react-i18next/dist/es/useSSR.js
init_esm_shims();
var import_react58 = __toESM(require_react(), 1);

// ../cli-i18n/src/I18nProvider.tsx
init_esm_shims();
var import_react60 = __toESM(require_react(), 1);

// ../cli-i18n/src/create-i18n.ts
init_esm_shims();

// ../../node_modules/i18next-icu/dist/es/index.js
init_esm_shims();

// ../../node_modules/i18next-icu/dist/es/utils.js
init_esm_shims();
function getLastOfPath(object, path, Empty) {
  function cleanKey2(key2) {
    return key2 && key2.indexOf("###") > -1 ? key2.replace(/###/g, ".") : key2;
  }
  function canNotTraverseDeeper2() {
    return !object || typeof object === "string";
  }
  var stack = typeof path !== "string" ? [].concat(path) : path.split(".");
  while (stack.length > 1) {
    if (canNotTraverseDeeper2()) return {};
    var key = cleanKey2(stack.shift());
    if (!object[key] && Empty) object[key] = new Empty();
    object = object[key];
  }
  if (canNotTraverseDeeper2()) return {};
  return {
    obj: object,
    k: cleanKey2(stack.shift())
  };
}
function setPath(object, path, newValue) {
  var _getLastOfPath = getLastOfPath(object, path, Object), obj = _getLastOfPath.obj, k = _getLastOfPath.k;
  obj[k] = newValue;
}
function getPath(object, path) {
  var _getLastOfPath3 = getLastOfPath(object, path), obj = _getLastOfPath3.obj, k = _getLastOfPath3.k;
  if (!obj) return void 0;
  return obj[k];
}
var arr = [];
var each = arr.forEach;
var slice = arr.slice;
function defaults(obj) {
  each.call(slice.call(arguments, 1), function(source) {
    if (source) {
      for (var prop in source) {
        if (obj[prop] === void 0) obj[prop] = source[prop];
      }
    }
  });
  return obj;
}

// ../../node_modules/intl-messageformat/lib/index.js
init_esm_shims();

// ../../node_modules/intl-messageformat/lib/src/core.js
init_esm_shims();
init_tslib_es6();

// ../../node_modules/@formatjs/fast-memoize/lib/index.js
init_esm_shims();
function memoize(fn, options) {
  var cache3 = options && options.cache ? options.cache : cacheDefault;
  var serializer = options && options.serializer ? options.serializer : serializerDefault;
  var strategy = options && options.strategy ? options.strategy : strategyDefault;
  return strategy(fn, {
    cache: cache3,
    serializer
  });
}
function isPrimitive(value2) {
  return value2 == null || typeof value2 === "number" || typeof value2 === "boolean";
}
function monadic(fn, cache3, serializer, arg) {
  var cacheKey = isPrimitive(arg) ? arg : serializer(arg);
  var computedValue = cache3.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.call(this, arg);
    cache3.set(cacheKey, computedValue);
  }
  return computedValue;
}
function variadic(fn, cache3, serializer) {
  var args = Array.prototype.slice.call(arguments, 3);
  var cacheKey = serializer(args);
  var computedValue = cache3.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.apply(this, args);
    cache3.set(cacheKey, computedValue);
  }
  return computedValue;
}
function assemble(fn, context, strategy, cache3, serialize) {
  return strategy.bind(context, fn, cache3, serialize);
}
function strategyDefault(fn, options) {
  var strategy = fn.length === 1 ? monadic : variadic;
  return assemble(fn, this, strategy, options.cache.create(), options.serializer);
}
function strategyVariadic(fn, options) {
  return assemble(fn, this, variadic, options.cache.create(), options.serializer);
}
function strategyMonadic(fn, options) {
  return assemble(fn, this, monadic, options.cache.create(), options.serializer);
}
var serializerDefault = function() {
  return JSON.stringify(arguments);
};
var ObjectWithoutPrototypeCache = (
  /** @class */
  function() {
    function ObjectWithoutPrototypeCache2() {
      this.cache = /* @__PURE__ */ Object.create(null);
    }
    ObjectWithoutPrototypeCache2.prototype.get = function(key) {
      return this.cache[key];
    };
    ObjectWithoutPrototypeCache2.prototype.set = function(key, value2) {
      this.cache[key] = value2;
    };
    return ObjectWithoutPrototypeCache2;
  }()
);
var cacheDefault = {
  create: function create2() {
    return new ObjectWithoutPrototypeCache();
  }
};
var strategies = {
  variadic: strategyVariadic,
  monadic: strategyMonadic
};

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/index.js
init_esm_shims();
init_tslib_es6();

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/error.js
init_esm_shims();
var ErrorKind;
(function(ErrorKind2) {
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_CLOSING_BRACE"] = 1] = "EXPECT_ARGUMENT_CLOSING_BRACE";
  ErrorKind2[ErrorKind2["EMPTY_ARGUMENT"] = 2] = "EMPTY_ARGUMENT";
  ErrorKind2[ErrorKind2["MALFORMED_ARGUMENT"] = 3] = "MALFORMED_ARGUMENT";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_TYPE"] = 4] = "EXPECT_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["INVALID_ARGUMENT_TYPE"] = 5] = "INVALID_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_STYLE"] = 6] = "EXPECT_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["INVALID_NUMBER_SKELETON"] = 7] = "INVALID_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["INVALID_DATE_TIME_SKELETON"] = 8] = "INVALID_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_NUMBER_SKELETON"] = 9] = "EXPECT_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_DATE_TIME_SKELETON"] = 10] = "EXPECT_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"] = 11] = "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_OPTIONS"] = 12] = "EXPECT_SELECT_ARGUMENT_OPTIONS";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"] = 13] = "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"] = 14] = "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR"] = 15] = "EXPECT_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR"] = 16] = "EXPECT_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"] = 17] = "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"] = 18] = "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_SELECTOR"] = 19] = "INVALID_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_PLURAL_ARGUMENT_SELECTOR"] = 20] = "DUPLICATE_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_SELECT_ARGUMENT_SELECTOR"] = 21] = "DUPLICATE_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["MISSING_OTHER_CLAUSE"] = 22] = "MISSING_OTHER_CLAUSE";
  ErrorKind2[ErrorKind2["INVALID_TAG"] = 23] = "INVALID_TAG";
  ErrorKind2[ErrorKind2["INVALID_TAG_NAME"] = 25] = "INVALID_TAG_NAME";
  ErrorKind2[ErrorKind2["UNMATCHED_CLOSING_TAG"] = 26] = "UNMATCHED_CLOSING_TAG";
  ErrorKind2[ErrorKind2["UNCLOSED_TAG"] = 27] = "UNCLOSED_TAG";
})(ErrorKind || (ErrorKind = {}));

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/parser.js
init_esm_shims();
init_tslib_es6();

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/types.js
init_esm_shims();
var TYPE;
(function(TYPE2) {
  TYPE2[TYPE2["literal"] = 0] = "literal";
  TYPE2[TYPE2["argument"] = 1] = "argument";
  TYPE2[TYPE2["number"] = 2] = "number";
  TYPE2[TYPE2["date"] = 3] = "date";
  TYPE2[TYPE2["time"] = 4] = "time";
  TYPE2[TYPE2["select"] = 5] = "select";
  TYPE2[TYPE2["plural"] = 6] = "plural";
  TYPE2[TYPE2["pound"] = 7] = "pound";
  TYPE2[TYPE2["tag"] = 8] = "tag";
})(TYPE || (TYPE = {}));
var SKELETON_TYPE;
(function(SKELETON_TYPE2) {
  SKELETON_TYPE2[SKELETON_TYPE2["number"] = 0] = "number";
  SKELETON_TYPE2[SKELETON_TYPE2["dateTime"] = 1] = "dateTime";
})(SKELETON_TYPE || (SKELETON_TYPE = {}));
function isLiteralElement(el) {
  return el.type === TYPE.literal;
}
function isArgumentElement(el) {
  return el.type === TYPE.argument;
}
function isNumberElement(el) {
  return el.type === TYPE.number;
}
function isDateElement(el) {
  return el.type === TYPE.date;
}
function isTimeElement(el) {
  return el.type === TYPE.time;
}
function isSelectElement(el) {
  return el.type === TYPE.select;
}
function isPluralElement(el) {
  return el.type === TYPE.plural;
}
function isPoundElement(el) {
  return el.type === TYPE.pound;
}
function isTagElement(el) {
  return el.type === TYPE.tag;
}
function isNumberSkeleton(el) {
  return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.number);
}
function isDateTimeSkeleton(el) {
  return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.dateTime);
}

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js
init_esm_shims();
var SPACE_SEPARATOR_REGEX = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/;

// ../../node_modules/@formatjs/icu-skeleton-parser/lib/index.js
init_esm_shims();

// ../../node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js
init_esm_shims();
var DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
function parseDateTimeSkeleton(skeleton) {
  var result = {};
  skeleton.replace(DATE_TIME_REGEX, function(match4) {
    var len = match4.length;
    switch (match4[0]) {
      case "G":
        result.era = len === 4 ? "long" : len === 5 ? "narrow" : "short";
        break;
      case "y":
        result.year = len === 2 ? "2-digit" : "numeric";
        break;
      case "Y":
      case "u":
      case "U":
      case "r":
        throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");
      case "q":
      case "Q":
        throw new RangeError("`q/Q` (quarter) patterns are not supported");
      case "M":
      case "L":
        result.month = ["numeric", "2-digit", "short", "long", "narrow"][len - 1];
        break;
      case "w":
      case "W":
        throw new RangeError("`w/W` (week) patterns are not supported");
      case "d":
        result.day = ["numeric", "2-digit"][len - 1];
        break;
      case "D":
      case "F":
      case "g":
        throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");
      case "E":
        result.weekday = len === 4 ? "long" : len === 5 ? "narrow" : "short";
        break;
      case "e":
        if (len < 4) {
          throw new RangeError("`e..eee` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "c":
        if (len < 4) {
          throw new RangeError("`c..ccc` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "a":
        result.hour12 = true;
        break;
      case "b":
      case "B":
        throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");
      case "h":
        result.hourCycle = "h12";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "H":
        result.hourCycle = "h23";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "K":
        result.hourCycle = "h11";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "k":
        result.hourCycle = "h24";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "j":
      case "J":
      case "C":
        throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");
      case "m":
        result.minute = ["numeric", "2-digit"][len - 1];
        break;
      case "s":
        result.second = ["numeric", "2-digit"][len - 1];
        break;
      case "S":
      case "A":
        throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");
      case "z":
        result.timeZoneName = len < 4 ? "short" : "long";
        break;
      case "Z":
      case "O":
      case "v":
      case "V":
      case "X":
      case "x":
        throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead");
    }
    return "";
  });
  return result;
}

// ../../node_modules/@formatjs/icu-skeleton-parser/lib/number.js
init_esm_shims();
init_tslib_es6();

// ../../node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js
init_esm_shims();
var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i;

// ../../node_modules/@formatjs/icu-skeleton-parser/lib/number.js
function parseNumberSkeletonFromString(skeleton) {
  if (skeleton.length === 0) {
    throw new Error("Number skeleton cannot be empty");
  }
  var stringTokens = skeleton.split(WHITE_SPACE_REGEX).filter(function(x) {
    return x.length > 0;
  });
  var tokens = [];
  for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {
    var stringToken = stringTokens_1[_i];
    var stemAndOptions = stringToken.split("/");
    if (stemAndOptions.length === 0) {
      throw new Error("Invalid number skeleton");
    }
    var stem = stemAndOptions[0], options = stemAndOptions.slice(1);
    for (var _a2 = 0, options_1 = options; _a2 < options_1.length; _a2++) {
      var option = options_1[_a2];
      if (option.length === 0) {
        throw new Error("Invalid number skeleton");
      }
    }
    tokens.push({ stem, options });
  }
  return tokens;
}
function icuUnitToEcma(unit) {
  return unit.replace(/^(.*?)-/, "");
}
var FRACTION_PRECISION_REGEX = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g;
var SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\+|#+)?[rs]?$/g;
var INTEGER_WIDTH_REGEX = /(\*)(0+)|(#+)(0+)|(0+)/g;
var CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;
function parseSignificantPrecision(str) {
  var result = {};
  if (str[str.length - 1] === "r") {
    result.roundingPriority = "morePrecision";
  } else if (str[str.length - 1] === "s") {
    result.roundingPriority = "lessPrecision";
  }
  str.replace(SIGNIFICANT_PRECISION_REGEX, function(_2, g1, g2) {
    if (typeof g2 !== "string") {
      result.minimumSignificantDigits = g1.length;
      result.maximumSignificantDigits = g1.length;
    } else if (g2 === "+") {
      result.minimumSignificantDigits = g1.length;
    } else if (g1[0] === "#") {
      result.maximumSignificantDigits = g1.length;
    } else {
      result.minimumSignificantDigits = g1.length;
      result.maximumSignificantDigits = g1.length + (typeof g2 === "string" ? g2.length : 0);
    }
    return "";
  });
  return result;
}
function parseSign(str) {
  switch (str) {
    case "sign-auto":
      return {
        signDisplay: "auto"
      };
    case "sign-accounting":
    case "()":
      return {
        currencySign: "accounting"
      };
    case "sign-always":
    case "+!":
      return {
        signDisplay: "always"
      };
    case "sign-accounting-always":
    case "()!":
      return {
        signDisplay: "always",
        currencySign: "accounting"
      };
    case "sign-except-zero":
    case "+?":
      return {
        signDisplay: "exceptZero"
      };
    case "sign-accounting-except-zero":
    case "()?":
      return {
        signDisplay: "exceptZero",
        currencySign: "accounting"
      };
    case "sign-never":
    case "+_":
      return {
        signDisplay: "never"
      };
  }
}
function parseConciseScientificAndEngineeringStem(stem) {
  var result;
  if (stem[0] === "E" && stem[1] === "E") {
    result = {
      notation: "engineering"
    };
    stem = stem.slice(2);
  } else if (stem[0] === "E") {
    result = {
      notation: "scientific"
    };
    stem = stem.slice(1);
  }
  if (result) {
    var signDisplay = stem.slice(0, 2);
    if (signDisplay === "+!") {
      result.signDisplay = "always";
      stem = stem.slice(2);
    } else if (signDisplay === "+?") {
      result.signDisplay = "exceptZero";
      stem = stem.slice(2);
    }
    if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {
      throw new Error("Malformed concise eng/scientific notation");
    }
    result.minimumIntegerDigits = stem.length;
  }
  return result;
}
function parseNotationOptions(opt) {
  var result = {};
  var signOpts = parseSign(opt);
  if (signOpts) {
    return signOpts;
  }
  return result;
}
function parseNumberSkeleton(tokens) {
  var result = {};
  for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
    var token = tokens_1[_i];
    switch (token.stem) {
      case "percent":
      case "%":
        result.style = "percent";
        continue;
      case "%x100":
        result.style = "percent";
        result.scale = 100;
        continue;
      case "currency":
        result.style = "currency";
        result.currency = token.options[0];
        continue;
      case "group-off":
      case ",_":
        result.useGrouping = false;
        continue;
      case "precision-integer":
      case ".":
        result.maximumFractionDigits = 0;
        continue;
      case "measure-unit":
      case "unit":
        result.style = "unit";
        result.unit = icuUnitToEcma(token.options[0]);
        continue;
      case "compact-short":
      case "K":
        result.notation = "compact";
        result.compactDisplay = "short";
        continue;
      case "compact-long":
      case "KK":
        result.notation = "compact";
        result.compactDisplay = "long";
        continue;
      case "scientific":
        result = __assign(__assign(__assign({}, result), { notation: "scientific" }), token.options.reduce(function(all, opt2) {
          return __assign(__assign({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "engineering":
        result = __assign(__assign(__assign({}, result), { notation: "engineering" }), token.options.reduce(function(all, opt2) {
          return __assign(__assign({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "notation-simple":
        result.notation = "standard";
        continue;
      case "unit-width-narrow":
        result.currencyDisplay = "narrowSymbol";
        result.unitDisplay = "narrow";
        continue;
      case "unit-width-short":
        result.currencyDisplay = "code";
        result.unitDisplay = "short";
        continue;
      case "unit-width-full-name":
        result.currencyDisplay = "name";
        result.unitDisplay = "long";
        continue;
      case "unit-width-iso-code":
        result.currencyDisplay = "symbol";
        continue;
      case "scale":
        result.scale = parseFloat(token.options[0]);
        continue;
      case "rounding-mode-floor":
        result.roundingMode = "floor";
        continue;
      case "rounding-mode-ceiling":
        result.roundingMode = "ceil";
        continue;
      case "rounding-mode-down":
        result.roundingMode = "trunc";
        continue;
      case "rounding-mode-up":
        result.roundingMode = "expand";
        continue;
      case "rounding-mode-half-even":
        result.roundingMode = "halfEven";
        continue;
      case "rounding-mode-half-down":
        result.roundingMode = "halfTrunc";
        continue;
      case "rounding-mode-half-up":
        result.roundingMode = "halfExpand";
        continue;
      case "integer-width":
        if (token.options.length > 1) {
          throw new RangeError("integer-width stems only accept a single optional option");
        }
        token.options[0].replace(INTEGER_WIDTH_REGEX, function(_2, g1, g2, g3, g4, g5) {
          if (g1) {
            result.minimumIntegerDigits = g2.length;
          } else if (g3 && g4) {
            throw new Error("We currently do not support maximum integer digits");
          } else if (g5) {
            throw new Error("We currently do not support exact integer digits");
          }
          return "";
        });
        continue;
    }
    if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {
      result.minimumIntegerDigits = token.stem.length;
      continue;
    }
    if (FRACTION_PRECISION_REGEX.test(token.stem)) {
      if (token.options.length > 1) {
        throw new RangeError("Fraction-precision stems only accept a single optional option");
      }
      token.stem.replace(FRACTION_PRECISION_REGEX, function(_2, g1, g2, g3, g4, g5) {
        if (g2 === "*") {
          result.minimumFractionDigits = g1.length;
        } else if (g3 && g3[0] === "#") {
          result.maximumFractionDigits = g3.length;
        } else if (g4 && g5) {
          result.minimumFractionDigits = g4.length;
          result.maximumFractionDigits = g4.length + g5.length;
        } else {
          result.minimumFractionDigits = g1.length;
          result.maximumFractionDigits = g1.length;
        }
        return "";
      });
      var opt = token.options[0];
      if (opt === "w") {
        result = __assign(__assign({}, result), { trailingZeroDisplay: "stripIfInteger" });
      } else if (opt) {
        result = __assign(__assign({}, result), parseSignificantPrecision(opt));
      }
      continue;
    }
    if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {
      result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));
      continue;
    }
    var signOpts = parseSign(token.stem);
    if (signOpts) {
      result = __assign(__assign({}, result), signOpts);
    }
    var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);
    if (conciseScientificAndEngineeringOpts) {
      result = __assign(__assign({}, result), conciseScientificAndEngineeringOpts);
    }
  }
  return result;
}

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js
init_esm_shims();

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/time-data.generated.js
init_esm_shims();
var timeData = {
  "001": [
    "H",
    "h"
  ],
  "419": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "AC": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "AD": [
    "H",
    "hB"
  ],
  "AE": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "AF": [
    "H",
    "hb",
    "hB",
    "h"
  ],
  "AG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "AI": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "AL": [
    "h",
    "H",
    "hB"
  ],
  "AM": [
    "H",
    "hB"
  ],
  "AO": [
    "H",
    "hB"
  ],
  "AR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "AS": [
    "h",
    "H"
  ],
  "AT": [
    "H",
    "hB"
  ],
  "AU": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "AW": [
    "H",
    "hB"
  ],
  "AX": [
    "H"
  ],
  "AZ": [
    "H",
    "hB",
    "h"
  ],
  "BA": [
    "H",
    "hB",
    "h"
  ],
  "BB": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BD": [
    "h",
    "hB",
    "H"
  ],
  "BE": [
    "H",
    "hB"
  ],
  "BF": [
    "H",
    "hB"
  ],
  "BG": [
    "H",
    "hB",
    "h"
  ],
  "BH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "BI": [
    "H",
    "h"
  ],
  "BJ": [
    "H",
    "hB"
  ],
  "BL": [
    "H",
    "hB"
  ],
  "BM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BN": [
    "hb",
    "hB",
    "h",
    "H"
  ],
  "BO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "BQ": [
    "H"
  ],
  "BR": [
    "H",
    "hB"
  ],
  "BS": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BT": [
    "h",
    "H"
  ],
  "BW": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "BY": [
    "H",
    "h"
  ],
  "BZ": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CA": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "CC": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CD": [
    "hB",
    "H"
  ],
  "CF": [
    "H",
    "h",
    "hB"
  ],
  "CG": [
    "H",
    "hB"
  ],
  "CH": [
    "H",
    "hB",
    "h"
  ],
  "CI": [
    "H",
    "hB"
  ],
  "CK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CL": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "CM": [
    "H",
    "h",
    "hB"
  ],
  "CN": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "CO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "CP": [
    "H"
  ],
  "CR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "CU": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "CV": [
    "H",
    "hB"
  ],
  "CW": [
    "H",
    "hB"
  ],
  "CX": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CY": [
    "h",
    "H",
    "hb",
    "hB"
  ],
  "CZ": [
    "H"
  ],
  "DE": [
    "H",
    "hB"
  ],
  "DG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "DJ": [
    "h",
    "H"
  ],
  "DK": [
    "H"
  ],
  "DM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "DO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "DZ": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "EA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "EC": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "EE": [
    "H",
    "hB"
  ],
  "EG": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "EH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "ER": [
    "h",
    "H"
  ],
  "ES": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "ET": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "FI": [
    "H"
  ],
  "FJ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "FK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "FM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "FO": [
    "H",
    "h"
  ],
  "FR": [
    "H",
    "hB"
  ],
  "GA": [
    "H",
    "hB"
  ],
  "GB": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GD": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GE": [
    "H",
    "hB",
    "h"
  ],
  "GF": [
    "H",
    "hB"
  ],
  "GG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GH": [
    "h",
    "H"
  ],
  "GI": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GL": [
    "H",
    "h"
  ],
  "GM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GN": [
    "H",
    "hB"
  ],
  "GP": [
    "H",
    "hB"
  ],
  "GQ": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "GR": [
    "h",
    "H",
    "hb",
    "hB"
  ],
  "GT": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "GU": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GW": [
    "H",
    "hB"
  ],
  "GY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "HK": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "HN": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "HR": [
    "H",
    "hB"
  ],
  "HU": [
    "H",
    "h"
  ],
  "IC": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "ID": [
    "H"
  ],
  "IE": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IL": [
    "H",
    "hB"
  ],
  "IM": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IN": [
    "h",
    "H"
  ],
  "IO": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IQ": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "IR": [
    "hB",
    "H"
  ],
  "IS": [
    "H"
  ],
  "IT": [
    "H",
    "hB"
  ],
  "JE": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "JM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "JO": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "JP": [
    "H",
    "K",
    "h"
  ],
  "KE": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "KG": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "KH": [
    "hB",
    "h",
    "H",
    "hb"
  ],
  "KI": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KM": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "KN": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KP": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "KR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "KW": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "KY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KZ": [
    "H",
    "hB"
  ],
  "LA": [
    "H",
    "hb",
    "hB",
    "h"
  ],
  "LB": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "LC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "LI": [
    "H",
    "hB",
    "h"
  ],
  "LK": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "LR": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "LS": [
    "h",
    "H"
  ],
  "LT": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "LU": [
    "H",
    "h",
    "hB"
  ],
  "LV": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "LY": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "MC": [
    "H",
    "hB"
  ],
  "MD": [
    "H",
    "hB"
  ],
  "ME": [
    "H",
    "hB",
    "h"
  ],
  "MF": [
    "H",
    "hB"
  ],
  "MG": [
    "H",
    "h"
  ],
  "MH": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "ML": [
    "H"
  ],
  "MM": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "MN": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MO": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MP": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MQ": [
    "H",
    "hB"
  ],
  "MR": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MS": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MT": [
    "H",
    "h"
  ],
  "MU": [
    "H",
    "h"
  ],
  "MV": [
    "H",
    "h"
  ],
  "MW": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MX": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "MY": [
    "hb",
    "hB",
    "h",
    "H"
  ],
  "MZ": [
    "H",
    "hB"
  ],
  "NA": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "NC": [
    "H",
    "hB"
  ],
  "NE": [
    "H"
  ],
  "NF": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NI": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "NL": [
    "H",
    "hB"
  ],
  "NO": [
    "H",
    "h"
  ],
  "NP": [
    "H",
    "h",
    "hB"
  ],
  "NR": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NU": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NZ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "OM": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PA": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PE": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PF": [
    "H",
    "h",
    "hB"
  ],
  "PG": [
    "h",
    "H"
  ],
  "PH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PK": [
    "h",
    "hB",
    "H"
  ],
  "PL": [
    "H",
    "h"
  ],
  "PM": [
    "H",
    "hB"
  ],
  "PN": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "PR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PS": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PT": [
    "H",
    "hB"
  ],
  "PW": [
    "h",
    "H"
  ],
  "PY": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "QA": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "RE": [
    "H",
    "hB"
  ],
  "RO": [
    "H",
    "hB"
  ],
  "RS": [
    "H",
    "hB",
    "h"
  ],
  "RU": [
    "H"
  ],
  "RW": [
    "H",
    "h"
  ],
  "SA": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SB": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SC": [
    "H",
    "h",
    "hB"
  ],
  "SD": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SE": [
    "H"
  ],
  "SG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SH": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "SI": [
    "H",
    "hB"
  ],
  "SJ": [
    "H"
  ],
  "SK": [
    "H"
  ],
  "SL": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SM": [
    "H",
    "h",
    "hB"
  ],
  "SN": [
    "H",
    "h",
    "hB"
  ],
  "SO": [
    "h",
    "H"
  ],
  "SR": [
    "H",
    "hB"
  ],
  "SS": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "ST": [
    "H",
    "hB"
  ],
  "SV": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "SX": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "SY": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SZ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TA": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "TC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TD": [
    "h",
    "H",
    "hB"
  ],
  "TF": [
    "H",
    "h",
    "hB"
  ],
  "TG": [
    "H",
    "hB"
  ],
  "TH": [
    "H",
    "h"
  ],
  "TJ": [
    "H",
    "h"
  ],
  "TL": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "TM": [
    "H",
    "h"
  ],
  "TN": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "TO": [
    "h",
    "H"
  ],
  "TR": [
    "H",
    "hB"
  ],
  "TT": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TW": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "TZ": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "UA": [
    "H",
    "hB",
    "h"
  ],
  "UG": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "UM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "US": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "UY": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "UZ": [
    "H",
    "hB",
    "h"
  ],
  "VA": [
    "H",
    "h",
    "hB"
  ],
  "VC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VE": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "VG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VI": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VN": [
    "H",
    "h"
  ],
  "VU": [
    "h",
    "H"
  ],
  "WF": [
    "H",
    "hB"
  ],
  "WS": [
    "h",
    "H"
  ],
  "XK": [
    "H",
    "hB",
    "h"
  ],
  "YE": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "YT": [
    "H",
    "hB"
  ],
  "ZA": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "ZM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "ZW": [
    "H",
    "h"
  ],
  "af-ZA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "ar-001": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "ca-ES": [
    "H",
    "h",
    "hB"
  ],
  "en-001": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "en-HK": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "en-IL": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "en-MY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "es-BR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-ES": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-GQ": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "fr-CA": [
    "H",
    "h",
    "hB"
  ],
  "gl-ES": [
    "H",
    "h",
    "hB"
  ],
  "gu-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "hi-IN": [
    "hB",
    "h",
    "H"
  ],
  "it-CH": [
    "H",
    "h",
    "hB"
  ],
  "it-IT": [
    "H",
    "h",
    "hB"
  ],
  "kn-IN": [
    "hB",
    "h",
    "H"
  ],
  "ml-IN": [
    "hB",
    "h",
    "H"
  ],
  "mr-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "pa-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "ta-IN": [
    "hB",
    "h",
    "hb",
    "H"
  ],
  "te-IN": [
    "hB",
    "h",
    "H"
  ],
  "zu-ZA": [
    "H",
    "hB",
    "hb",
    "h"
  ]
};

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js
function getBestPattern(skeleton, locale) {
  var skeletonCopy = "";
  for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {
    var patternChar = skeleton.charAt(patternPos);
    if (patternChar === "j") {
      var extraLength = 0;
      while (patternPos + 1 < skeleton.length && skeleton.charAt(patternPos + 1) === patternChar) {
        extraLength++;
        patternPos++;
      }
      var hourLen = 1 + (extraLength & 1);
      var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);
      var dayPeriodChar = "a";
      var hourChar = getDefaultHourSymbolFromLocale(locale);
      if (hourChar == "H" || hourChar == "k") {
        dayPeriodLen = 0;
      }
      while (dayPeriodLen-- > 0) {
        skeletonCopy += dayPeriodChar;
      }
      while (hourLen-- > 0) {
        skeletonCopy = hourChar + skeletonCopy;
      }
    } else if (patternChar === "J") {
      skeletonCopy += "H";
    } else {
      skeletonCopy += patternChar;
    }
  }
  return skeletonCopy;
}
function getDefaultHourSymbolFromLocale(locale) {
  var hourCycle = locale.hourCycle;
  if (hourCycle === void 0 && // @ts-ignore hourCycle(s) is not identified yet
  locale.hourCycles && // @ts-ignore
  locale.hourCycles.length) {
    hourCycle = locale.hourCycles[0];
  }
  if (hourCycle) {
    switch (hourCycle) {
      case "h24":
        return "k";
      case "h23":
        return "H";
      case "h12":
        return "h";
      case "h11":
        return "K";
      default:
        throw new Error("Invalid hourCycle");
    }
  }
  var languageTag = locale.language;
  var regionTag;
  if (languageTag !== "root") {
    regionTag = locale.maximize().region;
  }
  var hourCycles = timeData[regionTag || ""] || timeData[languageTag || ""] || timeData["".concat(languageTag, "-001")] || timeData["001"];
  return hourCycles[0];
}

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/parser.js
var _a;
var SPACE_SEPARATOR_START_REGEX = new RegExp("^".concat(SPACE_SEPARATOR_REGEX.source, "*"));
var SPACE_SEPARATOR_END_REGEX = new RegExp("".concat(SPACE_SEPARATOR_REGEX.source, "*$"));
function createLocation(start, end) {
  return { start, end };
}
var hasNativeStartsWith = !!String.prototype.startsWith && "_a".startsWith("a", 1);
var hasNativeFromCodePoint = !!String.fromCodePoint;
var hasNativeFromEntries = !!Object.fromEntries;
var hasNativeCodePointAt = !!String.prototype.codePointAt;
var hasTrimStart = !!String.prototype.trimStart;
var hasTrimEnd = !!String.prototype.trimEnd;
var hasNativeIsSafeInteger = !!Number.isSafeInteger;
var isSafeInteger = hasNativeIsSafeInteger ? Number.isSafeInteger : function(n2) {
  return typeof n2 === "number" && isFinite(n2) && Math.floor(n2) === n2 && Math.abs(n2) <= 9007199254740991;
};
var REGEX_SUPPORTS_U_AND_Y = true;
try {
  re = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec("a")) === null || _a === void 0 ? void 0 : _a[0]) === "a";
} catch (_2) {
  REGEX_SUPPORTS_U_AND_Y = false;
}
var re;
var startsWith = hasNativeStartsWith ? (
  // Native
  function startsWith2(s2, search, position) {
    return s2.startsWith(search, position);
  }
) : (
  // For IE11
  function startsWith3(s2, search, position) {
    return s2.slice(position, position + search.length) === search;
  }
);
var fromCodePoint = hasNativeFromCodePoint ? String.fromCodePoint : (
  // IE11
  function fromCodePoint2() {
    var codePoints = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      codePoints[_i] = arguments[_i];
    }
    var elements = "";
    var length = codePoints.length;
    var i2 = 0;
    var code;
    while (length > i2) {
      code = codePoints[i2++];
      if (code > 1114111)
        throw RangeError(code + " is not a valid code point");
      elements += code < 65536 ? String.fromCharCode(code) : String.fromCharCode(((code -= 65536) >> 10) + 55296, code % 1024 + 56320);
    }
    return elements;
  }
);
var fromEntries = (
  // native
  hasNativeFromEntries ? Object.fromEntries : (
    // Ponyfill
    function fromEntries2(entries) {
      var obj = {};
      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var _a2 = entries_1[_i], k = _a2[0], v = _a2[1];
        obj[k] = v;
      }
      return obj;
    }
  )
);
var codePointAt = hasNativeCodePointAt ? (
  // Native
  function codePointAt2(s2, index) {
    return s2.codePointAt(index);
  }
) : (
  // IE 11
  function codePointAt3(s2, index) {
    var size = s2.length;
    if (index < 0 || index >= size) {
      return void 0;
    }
    var first = s2.charCodeAt(index);
    var second;
    return first < 55296 || first > 56319 || index + 1 === size || (second = s2.charCodeAt(index + 1)) < 56320 || second > 57343 ? first : (first - 55296 << 10) + (second - 56320) + 65536;
  }
);
var trimStart = hasTrimStart ? (
  // Native
  function trimStart2(s2) {
    return s2.trimStart();
  }
) : (
  // Ponyfill
  function trimStart3(s2) {
    return s2.replace(SPACE_SEPARATOR_START_REGEX, "");
  }
);
var trimEnd = hasTrimEnd ? (
  // Native
  function trimEnd2(s2) {
    return s2.trimEnd();
  }
) : (
  // Ponyfill
  function trimEnd3(s2) {
    return s2.replace(SPACE_SEPARATOR_END_REGEX, "");
  }
);
function RE(s2, flag) {
  return new RegExp(s2, flag);
}
var matchIdentifierAtIndex;
if (REGEX_SUPPORTS_U_AND_Y) {
  IDENTIFIER_PREFIX_RE_1 = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s2, index) {
    var _a2;
    IDENTIFIER_PREFIX_RE_1.lastIndex = index;
    var match4 = IDENTIFIER_PREFIX_RE_1.exec(s2);
    return (_a2 = match4[1]) !== null && _a2 !== void 0 ? _a2 : "";
  };
} else {
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s2, index) {
    var match4 = [];
    while (true) {
      var c2 = codePointAt(s2, index);
      if (c2 === void 0 || _isWhiteSpace(c2) || _isPatternSyntax(c2)) {
        break;
      }
      match4.push(c2);
      index += c2 >= 65536 ? 2 : 1;
    }
    return fromCodePoint.apply(void 0, match4);
  };
}
var IDENTIFIER_PREFIX_RE_1;
var Parser = (
  /** @class */
  function() {
    function Parser2(message, options) {
      if (options === void 0) {
        options = {};
      }
      this.message = message;
      this.position = { offset: 0, line: 1, column: 1 };
      this.ignoreTag = !!options.ignoreTag;
      this.locale = options.locale;
      this.requiresOtherClause = !!options.requiresOtherClause;
      this.shouldParseSkeletons = !!options.shouldParseSkeletons;
    }
    Parser2.prototype.parse = function() {
      if (this.offset() !== 0) {
        throw Error("parser can only be used once");
      }
      return this.parseMessage(0, "", false);
    };
    Parser2.prototype.parseMessage = function(nestingLevel, parentArgType, expectingCloseTag) {
      var elements = [];
      while (!this.isEOF()) {
        var char = this.char();
        if (char === 123) {
          var result = this.parseArgument(nestingLevel, expectingCloseTag);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        } else if (char === 125 && nestingLevel > 0) {
          break;
        } else if (char === 35 && (parentArgType === "plural" || parentArgType === "selectordinal")) {
          var position = this.clonePosition();
          this.bump();
          elements.push({
            type: TYPE.pound,
            location: createLocation(position, this.clonePosition())
          });
        } else if (char === 60 && !this.ignoreTag && this.peek() === 47) {
          if (expectingCloseTag) {
            break;
          } else {
            return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));
          }
        } else if (char === 60 && !this.ignoreTag && _isAlpha(this.peek() || 0)) {
          var result = this.parseTag(nestingLevel, parentArgType);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        } else {
          var result = this.parseLiteral(nestingLevel, parentArgType);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        }
      }
      return { val: elements, err: null };
    };
    Parser2.prototype.parseTag = function(nestingLevel, parentArgType) {
      var startPosition = this.clonePosition();
      this.bump();
      var tagName = this.parseTagName();
      this.bumpSpace();
      if (this.bumpIf("/>")) {
        return {
          val: {
            type: TYPE.literal,
            value: "<".concat(tagName, "/>"),
            location: createLocation(startPosition, this.clonePosition())
          },
          err: null
        };
      } else if (this.bumpIf(">")) {
        var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);
        if (childrenResult.err) {
          return childrenResult;
        }
        var children = childrenResult.val;
        var endTagStartPosition = this.clonePosition();
        if (this.bumpIf("</")) {
          if (this.isEOF() || !_isAlpha(this.char())) {
            return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
          }
          var closingTagNameStartPosition = this.clonePosition();
          var closingTagName = this.parseTagName();
          if (tagName !== closingTagName) {
            return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));
          }
          this.bumpSpace();
          if (!this.bumpIf(">")) {
            return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
          }
          return {
            val: {
              type: TYPE.tag,
              value: tagName,
              children,
              location: createLocation(startPosition, this.clonePosition())
            },
            err: null
          };
        } else {
          return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));
        }
      } else {
        return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));
      }
    };
    Parser2.prototype.parseTagName = function() {
      var startOffset = this.offset();
      this.bump();
      while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {
        this.bump();
      }
      return this.message.slice(startOffset, this.offset());
    };
    Parser2.prototype.parseLiteral = function(nestingLevel, parentArgType) {
      var start = this.clonePosition();
      var value2 = "";
      while (true) {
        var parseQuoteResult = this.tryParseQuote(parentArgType);
        if (parseQuoteResult) {
          value2 += parseQuoteResult;
          continue;
        }
        var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);
        if (parseUnquotedResult) {
          value2 += parseUnquotedResult;
          continue;
        }
        var parseLeftAngleResult = this.tryParseLeftAngleBracket();
        if (parseLeftAngleResult) {
          value2 += parseLeftAngleResult;
          continue;
        }
        break;
      }
      var location = createLocation(start, this.clonePosition());
      return {
        val: { type: TYPE.literal, value: value2, location },
        err: null
      };
    };
    Parser2.prototype.tryParseLeftAngleBracket = function() {
      if (!this.isEOF() && this.char() === 60 && (this.ignoreTag || // If at the opening tag or closing tag position, bail.
      !_isAlphaOrSlash(this.peek() || 0))) {
        this.bump();
        return "<";
      }
      return null;
    };
    Parser2.prototype.tryParseQuote = function(parentArgType) {
      if (this.isEOF() || this.char() !== 39) {
        return null;
      }
      switch (this.peek()) {
        case 39:
          this.bump();
          this.bump();
          return "'";
        case 123:
        case 60:
        case 62:
        case 125:
          break;
        case 35:
          if (parentArgType === "plural" || parentArgType === "selectordinal") {
            break;
          }
          return null;
        default:
          return null;
      }
      this.bump();
      var codePoints = [this.char()];
      this.bump();
      while (!this.isEOF()) {
        var ch = this.char();
        if (ch === 39) {
          if (this.peek() === 39) {
            codePoints.push(39);
            this.bump();
          } else {
            this.bump();
            break;
          }
        } else {
          codePoints.push(ch);
        }
        this.bump();
      }
      return fromCodePoint.apply(void 0, codePoints);
    };
    Parser2.prototype.tryParseUnquoted = function(nestingLevel, parentArgType) {
      if (this.isEOF()) {
        return null;
      }
      var ch = this.char();
      if (ch === 60 || ch === 123 || ch === 35 && (parentArgType === "plural" || parentArgType === "selectordinal") || ch === 125 && nestingLevel > 0) {
        return null;
      } else {
        this.bump();
        return fromCodePoint(ch);
      }
    };
    Parser2.prototype.parseArgument = function(nestingLevel, expectingCloseTag) {
      var openingBracePosition = this.clonePosition();
      this.bump();
      this.bumpSpace();
      if (this.isEOF()) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      if (this.char() === 125) {
        this.bump();
        return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
      var value2 = this.parseIdentifierIfPossible().value;
      if (!value2) {
        return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
      this.bumpSpace();
      if (this.isEOF()) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      switch (this.char()) {
        case 125: {
          this.bump();
          return {
            val: {
              type: TYPE.argument,
              // value does not include the opening and closing braces.
              value: value2,
              location: createLocation(openingBracePosition, this.clonePosition())
            },
            err: null
          };
        }
        case 44: {
          this.bump();
          this.bumpSpace();
          if (this.isEOF()) {
            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
          }
          return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value2, openingBracePosition);
        }
        default:
          return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
    };
    Parser2.prototype.parseIdentifierIfPossible = function() {
      var startingPosition = this.clonePosition();
      var startOffset = this.offset();
      var value2 = matchIdentifierAtIndex(this.message, startOffset);
      var endOffset = startOffset + value2.length;
      this.bumpTo(endOffset);
      var endPosition = this.clonePosition();
      var location = createLocation(startingPosition, endPosition);
      return { value: value2, location };
    };
    Parser2.prototype.parseArgumentOptions = function(nestingLevel, expectingCloseTag, value2, openingBracePosition) {
      var _a2;
      var typeStartPosition = this.clonePosition();
      var argType = this.parseIdentifierIfPossible().value;
      var typeEndPosition = this.clonePosition();
      switch (argType) {
        case "":
          return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
        case "number":
        case "date":
        case "time": {
          this.bumpSpace();
          var styleAndLocation = null;
          if (this.bumpIf(",")) {
            this.bumpSpace();
            var styleStartPosition = this.clonePosition();
            var result = this.parseSimpleArgStyleIfPossible();
            if (result.err) {
              return result;
            }
            var style = trimEnd(result.val);
            if (style.length === 0) {
              return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));
            }
            var styleLocation = createLocation(styleStartPosition, this.clonePosition());
            styleAndLocation = { style, styleLocation };
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          var location_1 = createLocation(openingBracePosition, this.clonePosition());
          if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, "::", 0)) {
            var skeleton = trimStart(styleAndLocation.style.slice(2));
            if (argType === "number") {
              var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);
              if (result.err) {
                return result;
              }
              return {
                val: { type: TYPE.number, value: value2, location: location_1, style: result.val },
                err: null
              };
            } else {
              if (skeleton.length === 0) {
                return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);
              }
              var dateTimePattern = skeleton;
              if (this.locale) {
                dateTimePattern = getBestPattern(skeleton, this.locale);
              }
              var style = {
                type: SKELETON_TYPE.dateTime,
                pattern: dateTimePattern,
                location: styleAndLocation.styleLocation,
                parsedOptions: this.shouldParseSkeletons ? parseDateTimeSkeleton(dateTimePattern) : {}
              };
              var type = argType === "date" ? TYPE.date : TYPE.time;
              return {
                val: { type, value: value2, location: location_1, style },
                err: null
              };
            }
          }
          return {
            val: {
              type: argType === "number" ? TYPE.number : argType === "date" ? TYPE.date : TYPE.time,
              value: value2,
              location: location_1,
              style: (_a2 = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a2 !== void 0 ? _a2 : null
            },
            err: null
          };
        }
        case "plural":
        case "selectordinal":
        case "select": {
          var typeEndPosition_1 = this.clonePosition();
          this.bumpSpace();
          if (!this.bumpIf(",")) {
            return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign({}, typeEndPosition_1)));
          }
          this.bumpSpace();
          var identifierAndLocation = this.parseIdentifierIfPossible();
          var pluralOffset = 0;
          if (argType !== "select" && identifierAndLocation.value === "offset") {
            if (!this.bumpIf(":")) {
              return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));
            }
            this.bumpSpace();
            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);
            if (result.err) {
              return result;
            }
            this.bumpSpace();
            identifierAndLocation = this.parseIdentifierIfPossible();
            pluralOffset = result.val;
          }
          var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);
          if (optionsResult.err) {
            return optionsResult;
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          var location_2 = createLocation(openingBracePosition, this.clonePosition());
          if (argType === "select") {
            return {
              val: {
                type: TYPE.select,
                value: value2,
                options: fromEntries(optionsResult.val),
                location: location_2
              },
              err: null
            };
          } else {
            return {
              val: {
                type: TYPE.plural,
                value: value2,
                options: fromEntries(optionsResult.val),
                offset: pluralOffset,
                pluralType: argType === "plural" ? "cardinal" : "ordinal",
                location: location_2
              },
              err: null
            };
          }
        }
        default:
          return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
      }
    };
    Parser2.prototype.tryParseArgumentClose = function(openingBracePosition) {
      if (this.isEOF() || this.char() !== 125) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      this.bump();
      return { val: true, err: null };
    };
    Parser2.prototype.parseSimpleArgStyleIfPossible = function() {
      var nestedBraces = 0;
      var startPosition = this.clonePosition();
      while (!this.isEOF()) {
        var ch = this.char();
        switch (ch) {
          case 39: {
            this.bump();
            var apostrophePosition = this.clonePosition();
            if (!this.bumpUntil("'")) {
              return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));
            }
            this.bump();
            break;
          }
          case 123: {
            nestedBraces += 1;
            this.bump();
            break;
          }
          case 125: {
            if (nestedBraces > 0) {
              nestedBraces -= 1;
            } else {
              return {
                val: this.message.slice(startPosition.offset, this.offset()),
                err: null
              };
            }
            break;
          }
          default:
            this.bump();
            break;
        }
      }
      return {
        val: this.message.slice(startPosition.offset, this.offset()),
        err: null
      };
    };
    Parser2.prototype.parseNumberSkeletonFromString = function(skeleton, location) {
      var tokens = [];
      try {
        tokens = parseNumberSkeletonFromString(skeleton);
      } catch (e2) {
        return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location);
      }
      return {
        val: {
          type: SKELETON_TYPE.number,
          tokens,
          location,
          parsedOptions: this.shouldParseSkeletons ? parseNumberSkeleton(tokens) : {}
        },
        err: null
      };
    };
    Parser2.prototype.tryParsePluralOrSelectOptions = function(nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {
      var _a2;
      var hasOtherClause = false;
      var options = [];
      var parsedSelectors = /* @__PURE__ */ new Set();
      var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;
      while (true) {
        if (selector.length === 0) {
          var startPosition = this.clonePosition();
          if (parentArgType !== "select" && this.bumpIf("=")) {
            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);
            if (result.err) {
              return result;
            }
            selectorLocation = createLocation(startPosition, this.clonePosition());
            selector = this.message.slice(startPosition.offset, this.offset());
          } else {
            break;
          }
        }
        if (parsedSelectors.has(selector)) {
          return this.error(parentArgType === "select" ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);
        }
        if (selector === "other") {
          hasOtherClause = true;
        }
        this.bumpSpace();
        var openingBracePosition = this.clonePosition();
        if (!this.bumpIf("{")) {
          return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));
        }
        var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);
        if (fragmentResult.err) {
          return fragmentResult;
        }
        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
        if (argCloseResult.err) {
          return argCloseResult;
        }
        options.push([
          selector,
          {
            value: fragmentResult.val,
            location: createLocation(openingBracePosition, this.clonePosition())
          }
        ]);
        parsedSelectors.add(selector);
        this.bumpSpace();
        _a2 = this.parseIdentifierIfPossible(), selector = _a2.value, selectorLocation = _a2.location;
      }
      if (options.length === 0) {
        return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));
      }
      if (this.requiresOtherClause && !hasOtherClause) {
        return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));
      }
      return { val: options, err: null };
    };
    Parser2.prototype.tryParseDecimalInteger = function(expectNumberError, invalidNumberError) {
      var sign = 1;
      var startingPosition = this.clonePosition();
      if (this.bumpIf("+")) {
      } else if (this.bumpIf("-")) {
        sign = -1;
      }
      var hasDigits = false;
      var decimal = 0;
      while (!this.isEOF()) {
        var ch = this.char();
        if (ch >= 48 && ch <= 57) {
          hasDigits = true;
          decimal = decimal * 10 + (ch - 48);
          this.bump();
        } else {
          break;
        }
      }
      var location = createLocation(startingPosition, this.clonePosition());
      if (!hasDigits) {
        return this.error(expectNumberError, location);
      }
      decimal *= sign;
      if (!isSafeInteger(decimal)) {
        return this.error(invalidNumberError, location);
      }
      return { val: decimal, err: null };
    };
    Parser2.prototype.offset = function() {
      return this.position.offset;
    };
    Parser2.prototype.isEOF = function() {
      return this.offset() === this.message.length;
    };
    Parser2.prototype.clonePosition = function() {
      return {
        offset: this.position.offset,
        line: this.position.line,
        column: this.position.column
      };
    };
    Parser2.prototype.char = function() {
      var offset = this.position.offset;
      if (offset >= this.message.length) {
        throw Error("out of bound");
      }
      var code = codePointAt(this.message, offset);
      if (code === void 0) {
        throw Error("Offset ".concat(offset, " is at invalid UTF-16 code unit boundary"));
      }
      return code;
    };
    Parser2.prototype.error = function(kind, location) {
      return {
        val: null,
        err: {
          kind,
          message: this.message,
          location
        }
      };
    };
    Parser2.prototype.bump = function() {
      if (this.isEOF()) {
        return;
      }
      var code = this.char();
      if (code === 10) {
        this.position.line += 1;
        this.position.column = 1;
        this.position.offset += 1;
      } else {
        this.position.column += 1;
        this.position.offset += code < 65536 ? 1 : 2;
      }
    };
    Parser2.prototype.bumpIf = function(prefix) {
      if (startsWith(this.message, prefix, this.offset())) {
        for (var i2 = 0; i2 < prefix.length; i2++) {
          this.bump();
        }
        return true;
      }
      return false;
    };
    Parser2.prototype.bumpUntil = function(pattern) {
      var currentOffset = this.offset();
      var index = this.message.indexOf(pattern, currentOffset);
      if (index >= 0) {
        this.bumpTo(index);
        return true;
      } else {
        this.bumpTo(this.message.length);
        return false;
      }
    };
    Parser2.prototype.bumpTo = function(targetOffset) {
      if (this.offset() > targetOffset) {
        throw Error("targetOffset ".concat(targetOffset, " must be greater than or equal to the current offset ").concat(this.offset()));
      }
      targetOffset = Math.min(targetOffset, this.message.length);
      while (true) {
        var offset = this.offset();
        if (offset === targetOffset) {
          break;
        }
        if (offset > targetOffset) {
          throw Error("targetOffset ".concat(targetOffset, " is at invalid UTF-16 code unit boundary"));
        }
        this.bump();
        if (this.isEOF()) {
          break;
        }
      }
    };
    Parser2.prototype.bumpSpace = function() {
      while (!this.isEOF() && _isWhiteSpace(this.char())) {
        this.bump();
      }
    };
    Parser2.prototype.peek = function() {
      if (this.isEOF()) {
        return null;
      }
      var code = this.char();
      var offset = this.offset();
      var nextCode = this.message.charCodeAt(offset + (code >= 65536 ? 2 : 1));
      return nextCode !== null && nextCode !== void 0 ? nextCode : null;
    };
    return Parser2;
  }()
);
function _isAlpha(codepoint) {
  return codepoint >= 97 && codepoint <= 122 || codepoint >= 65 && codepoint <= 90;
}
function _isAlphaOrSlash(codepoint) {
  return _isAlpha(codepoint) || codepoint === 47;
}
function _isPotentialElementNameChar(c2) {
  return c2 === 45 || c2 === 46 || c2 >= 48 && c2 <= 57 || c2 === 95 || c2 >= 97 && c2 <= 122 || c2 >= 65 && c2 <= 90 || c2 == 183 || c2 >= 192 && c2 <= 214 || c2 >= 216 && c2 <= 246 || c2 >= 248 && c2 <= 893 || c2 >= 895 && c2 <= 8191 || c2 >= 8204 && c2 <= 8205 || c2 >= 8255 && c2 <= 8256 || c2 >= 8304 && c2 <= 8591 || c2 >= 11264 && c2 <= 12271 || c2 >= 12289 && c2 <= 55295 || c2 >= 63744 && c2 <= 64975 || c2 >= 65008 && c2 <= 65533 || c2 >= 65536 && c2 <= 983039;
}
function _isWhiteSpace(c2) {
  return c2 >= 9 && c2 <= 13 || c2 === 32 || c2 === 133 || c2 >= 8206 && c2 <= 8207 || c2 === 8232 || c2 === 8233;
}
function _isPatternSyntax(c2) {
  return c2 >= 33 && c2 <= 35 || c2 === 36 || c2 >= 37 && c2 <= 39 || c2 === 40 || c2 === 41 || c2 === 42 || c2 === 43 || c2 === 44 || c2 === 45 || c2 >= 46 && c2 <= 47 || c2 >= 58 && c2 <= 59 || c2 >= 60 && c2 <= 62 || c2 >= 63 && c2 <= 64 || c2 === 91 || c2 === 92 || c2 === 93 || c2 === 94 || c2 === 96 || c2 === 123 || c2 === 124 || c2 === 125 || c2 === 126 || c2 === 161 || c2 >= 162 && c2 <= 165 || c2 === 166 || c2 === 167 || c2 === 169 || c2 === 171 || c2 === 172 || c2 === 174 || c2 === 176 || c2 === 177 || c2 === 182 || c2 === 187 || c2 === 191 || c2 === 215 || c2 === 247 || c2 >= 8208 && c2 <= 8213 || c2 >= 8214 && c2 <= 8215 || c2 === 8216 || c2 === 8217 || c2 === 8218 || c2 >= 8219 && c2 <= 8220 || c2 === 8221 || c2 === 8222 || c2 === 8223 || c2 >= 8224 && c2 <= 8231 || c2 >= 8240 && c2 <= 8248 || c2 === 8249 || c2 === 8250 || c2 >= 8251 && c2 <= 8254 || c2 >= 8257 && c2 <= 8259 || c2 === 8260 || c2 === 8261 || c2 === 8262 || c2 >= 8263 && c2 <= 8273 || c2 === 8274 || c2 === 8275 || c2 >= 8277 && c2 <= 8286 || c2 >= 8592 && c2 <= 8596 || c2 >= 8597 && c2 <= 8601 || c2 >= 8602 && c2 <= 8603 || c2 >= 8604 && c2 <= 8607 || c2 === 8608 || c2 >= 8609 && c2 <= 8610 || c2 === 8611 || c2 >= 8612 && c2 <= 8613 || c2 === 8614 || c2 >= 8615 && c2 <= 8621 || c2 === 8622 || c2 >= 8623 && c2 <= 8653 || c2 >= 8654 && c2 <= 8655 || c2 >= 8656 && c2 <= 8657 || c2 === 8658 || c2 === 8659 || c2 === 8660 || c2 >= 8661 && c2 <= 8691 || c2 >= 8692 && c2 <= 8959 || c2 >= 8960 && c2 <= 8967 || c2 === 8968 || c2 === 8969 || c2 === 8970 || c2 === 8971 || c2 >= 8972 && c2 <= 8991 || c2 >= 8992 && c2 <= 8993 || c2 >= 8994 && c2 <= 9e3 || c2 === 9001 || c2 === 9002 || c2 >= 9003 && c2 <= 9083 || c2 === 9084 || c2 >= 9085 && c2 <= 9114 || c2 >= 9115 && c2 <= 9139 || c2 >= 9140 && c2 <= 9179 || c2 >= 9180 && c2 <= 9185 || c2 >= 9186 && c2 <= 9254 || c2 >= 9255 && c2 <= 9279 || c2 >= 9280 && c2 <= 9290 || c2 >= 9291 && c2 <= 9311 || c2 >= 9472 && c2 <= 9654 || c2 === 9655 || c2 >= 9656 && c2 <= 9664 || c2 === 9665 || c2 >= 9666 && c2 <= 9719 || c2 >= 9720 && c2 <= 9727 || c2 >= 9728 && c2 <= 9838 || c2 === 9839 || c2 >= 9840 && c2 <= 10087 || c2 === 10088 || c2 === 10089 || c2 === 10090 || c2 === 10091 || c2 === 10092 || c2 === 10093 || c2 === 10094 || c2 === 10095 || c2 === 10096 || c2 === 10097 || c2 === 10098 || c2 === 10099 || c2 === 10100 || c2 === 10101 || c2 >= 10132 && c2 <= 10175 || c2 >= 10176 && c2 <= 10180 || c2 === 10181 || c2 === 10182 || c2 >= 10183 && c2 <= 10213 || c2 === 10214 || c2 === 10215 || c2 === 10216 || c2 === 10217 || c2 === 10218 || c2 === 10219 || c2 === 10220 || c2 === 10221 || c2 === 10222 || c2 === 10223 || c2 >= 10224 && c2 <= 10239 || c2 >= 10240 && c2 <= 10495 || c2 >= 10496 && c2 <= 10626 || c2 === 10627 || c2 === 10628 || c2 === 10629 || c2 === 10630 || c2 === 10631 || c2 === 10632 || c2 === 10633 || c2 === 10634 || c2 === 10635 || c2 === 10636 || c2 === 10637 || c2 === 10638 || c2 === 10639 || c2 === 10640 || c2 === 10641 || c2 === 10642 || c2 === 10643 || c2 === 10644 || c2 === 10645 || c2 === 10646 || c2 === 10647 || c2 === 10648 || c2 >= 10649 && c2 <= 10711 || c2 === 10712 || c2 === 10713 || c2 === 10714 || c2 === 10715 || c2 >= 10716 && c2 <= 10747 || c2 === 10748 || c2 === 10749 || c2 >= 10750 && c2 <= 11007 || c2 >= 11008 && c2 <= 11055 || c2 >= 11056 && c2 <= 11076 || c2 >= 11077 && c2 <= 11078 || c2 >= 11079 && c2 <= 11084 || c2 >= 11085 && c2 <= 11123 || c2 >= 11124 && c2 <= 11125 || c2 >= 11126 && c2 <= 11157 || c2 === 11158 || c2 >= 11159 && c2 <= 11263 || c2 >= 11776 && c2 <= 11777 || c2 === 11778 || c2 === 11779 || c2 === 11780 || c2 === 11781 || c2 >= 11782 && c2 <= 11784 || c2 === 11785 || c2 === 11786 || c2 === 11787 || c2 === 11788 || c2 === 11789 || c2 >= 11790 && c2 <= 11798 || c2 === 11799 || c2 >= 11800 && c2 <= 11801 || c2 === 11802 || c2 === 11803 || c2 === 11804 || c2 === 11805 || c2 >= 11806 && c2 <= 11807 || c2 === 11808 || c2 === 11809 || c2 === 11810 || c2 === 11811 || c2 === 11812 || c2 === 11813 || c2 === 11814 || c2 === 11815 || c2 === 11816 || c2 === 11817 || c2 >= 11818 && c2 <= 11822 || c2 === 11823 || c2 >= 11824 && c2 <= 11833 || c2 >= 11834 && c2 <= 11835 || c2 >= 11836 && c2 <= 11839 || c2 === 11840 || c2 === 11841 || c2 === 11842 || c2 >= 11843 && c2 <= 11855 || c2 >= 11856 && c2 <= 11857 || c2 === 11858 || c2 >= 11859 && c2 <= 11903 || c2 >= 12289 && c2 <= 12291 || c2 === 12296 || c2 === 12297 || c2 === 12298 || c2 === 12299 || c2 === 12300 || c2 === 12301 || c2 === 12302 || c2 === 12303 || c2 === 12304 || c2 === 12305 || c2 >= 12306 && c2 <= 12307 || c2 === 12308 || c2 === 12309 || c2 === 12310 || c2 === 12311 || c2 === 12312 || c2 === 12313 || c2 === 12314 || c2 === 12315 || c2 === 12316 || c2 === 12317 || c2 >= 12318 && c2 <= 12319 || c2 === 12320 || c2 === 12336 || c2 === 64830 || c2 === 64831 || c2 >= 65093 && c2 <= 65094;
}

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/manipulator.js
init_esm_shims();

// ../../node_modules/@formatjs/icu-messageformat-parser/lib/index.js
function pruneLocation(els) {
  els.forEach(function(el) {
    delete el.location;
    if (isSelectElement(el) || isPluralElement(el)) {
      for (var k in el.options) {
        delete el.options[k].location;
        pruneLocation(el.options[k].value);
      }
    } else if (isNumberElement(el) && isNumberSkeleton(el.style)) {
      delete el.style.location;
    } else if ((isDateElement(el) || isTimeElement(el)) && isDateTimeSkeleton(el.style)) {
      delete el.style.location;
    } else if (isTagElement(el)) {
      pruneLocation(el.children);
    }
  });
}
function parse(message, opts) {
  if (opts === void 0) {
    opts = {};
  }
  opts = __assign({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);
  var result = new Parser(message, opts).parse();
  if (result.err) {
    var error = SyntaxError(ErrorKind[result.err.kind]);
    error.location = result.err.location;
    error.originalMessage = result.err.message;
    throw error;
  }
  if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {
    pruneLocation(result.val);
  }
  return result.val;
}

// ../../node_modules/intl-messageformat/lib/src/formatters.js
init_esm_shims();

// ../../node_modules/intl-messageformat/lib/src/error.js
init_esm_shims();
init_tslib_es6();
var ErrorCode;
(function(ErrorCode2) {
  ErrorCode2["MISSING_VALUE"] = "MISSING_VALUE";
  ErrorCode2["INVALID_VALUE"] = "INVALID_VALUE";
  ErrorCode2["MISSING_INTL_API"] = "MISSING_INTL_API";
})(ErrorCode || (ErrorCode = {}));
var FormatError = (
  /** @class */
  function(_super) {
    __extends(FormatError2, _super);
    function FormatError2(msg, code, originalMessage) {
      var _this = _super.call(this, msg) || this;
      _this.code = code;
      _this.originalMessage = originalMessage;
      return _this;
    }
    FormatError2.prototype.toString = function() {
      return "[formatjs Error: ".concat(this.code, "] ").concat(this.message);
    };
    return FormatError2;
  }(Error)
);
var InvalidValueError = (
  /** @class */
  function(_super) {
    __extends(InvalidValueError2, _super);
    function InvalidValueError2(variableId, value2, options, originalMessage) {
      return _super.call(this, 'Invalid values for "'.concat(variableId, '": "').concat(value2, '". Options are "').concat(Object.keys(options).join('", "'), '"'), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueError2;
  }(FormatError)
);
var InvalidValueTypeError = (
  /** @class */
  function(_super) {
    __extends(InvalidValueTypeError2, _super);
    function InvalidValueTypeError2(value2, type, originalMessage) {
      return _super.call(this, 'Value for "'.concat(value2, '" must be of type ').concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueTypeError2;
  }(FormatError)
);
var MissingValueError = (
  /** @class */
  function(_super) {
    __extends(MissingValueError2, _super);
    function MissingValueError2(variableId, originalMessage) {
      return _super.call(this, 'The intl string context variable "'.concat(variableId, '" was not provided to the string "').concat(originalMessage, '"'), ErrorCode.MISSING_VALUE, originalMessage) || this;
    }
    return MissingValueError2;
  }(FormatError)
);

// ../../node_modules/intl-messageformat/lib/src/formatters.js
var PART_TYPE;
(function(PART_TYPE2) {
  PART_TYPE2[PART_TYPE2["literal"] = 0] = "literal";
  PART_TYPE2[PART_TYPE2["object"] = 1] = "object";
})(PART_TYPE || (PART_TYPE = {}));
function mergeLiteral(parts) {
  if (parts.length < 2) {
    return parts;
  }
  return parts.reduce(function(all, part) {
    var lastPart = all[all.length - 1];
    if (!lastPart || lastPart.type !== PART_TYPE.literal || part.type !== PART_TYPE.literal) {
      all.push(part);
    } else {
      lastPart.value += part.value;
    }
    return all;
  }, []);
}
function isFormatXMLElementFn(el) {
  return typeof el === "function";
}
function formatToParts(els, locales, formatters, formats, values, currentPluralValue, originalMessage) {
  if (els.length === 1 && isLiteralElement(els[0])) {
    return [
      {
        type: PART_TYPE.literal,
        value: els[0].value
      }
    ];
  }
  var result = [];
  for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {
    var el = els_1[_i];
    if (isLiteralElement(el)) {
      result.push({
        type: PART_TYPE.literal,
        value: el.value
      });
      continue;
    }
    if (isPoundElement(el)) {
      if (typeof currentPluralValue === "number") {
        result.push({
          type: PART_TYPE.literal,
          value: formatters.getNumberFormat(locales).format(currentPluralValue)
        });
      }
      continue;
    }
    var varName = el.value;
    if (!(values && varName in values)) {
      throw new MissingValueError(varName, originalMessage);
    }
    var value2 = values[varName];
    if (isArgumentElement(el)) {
      if (!value2 || typeof value2 === "string" || typeof value2 === "number") {
        value2 = typeof value2 === "string" || typeof value2 === "number" ? String(value2) : "";
      }
      result.push({
        type: typeof value2 === "string" ? PART_TYPE.literal : PART_TYPE.object,
        value: value2
      });
      continue;
    }
    if (isDateElement(el)) {
      var style = typeof el.style === "string" ? formats.date[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : void 0;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style).format(value2)
      });
      continue;
    }
    if (isTimeElement(el)) {
      var style = typeof el.style === "string" ? formats.time[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : formats.time.medium;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style).format(value2)
      });
      continue;
    }
    if (isNumberElement(el)) {
      var style = typeof el.style === "string" ? formats.number[el.style] : isNumberSkeleton(el.style) ? el.style.parsedOptions : void 0;
      if (style && style.scale) {
        value2 = value2 * (style.scale || 1);
      }
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getNumberFormat(locales, style).format(value2)
      });
      continue;
    }
    if (isTagElement(el)) {
      var children = el.children, value_1 = el.value;
      var formatFn = values[value_1];
      if (!isFormatXMLElementFn(formatFn)) {
        throw new InvalidValueTypeError(value_1, "function", originalMessage);
      }
      var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);
      var chunks = formatFn(parts.map(function(p) {
        return p.value;
      }));
      if (!Array.isArray(chunks)) {
        chunks = [chunks];
      }
      result.push.apply(result, chunks.map(function(c2) {
        return {
          type: typeof c2 === "string" ? PART_TYPE.literal : PART_TYPE.object,
          value: c2
        };
      }));
    }
    if (isSelectElement(el)) {
      var opt = el.options[value2] || el.options.other;
      if (!opt) {
        throw new InvalidValueError(el.value, value2, Object.keys(el.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));
      continue;
    }
    if (isPluralElement(el)) {
      var opt = el.options["=".concat(value2)];
      if (!opt) {
        if (!Intl.PluralRules) {
          throw new FormatError('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n', ErrorCode.MISSING_INTL_API, originalMessage);
        }
        var rule = formatters.getPluralRules(locales, { type: el.pluralType }).select(value2 - (el.offset || 0));
        opt = el.options[rule] || el.options.other;
      }
      if (!opt) {
        throw new InvalidValueError(el.value, value2, Object.keys(el.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value2 - (el.offset || 0)));
      continue;
    }
  }
  return mergeLiteral(result);
}

// ../../node_modules/intl-messageformat/lib/src/core.js
function mergeConfig(c1, c2) {
  if (!c2) {
    return c1;
  }
  return __assign(__assign(__assign({}, c1 || {}), c2 || {}), Object.keys(c1).reduce(function(all, k) {
    all[k] = __assign(__assign({}, c1[k]), c2[k] || {});
    return all;
  }, {}));
}
function mergeConfigs(defaultConfig, configs) {
  if (!configs) {
    return defaultConfig;
  }
  return Object.keys(defaultConfig).reduce(function(all, k) {
    all[k] = mergeConfig(defaultConfig[k], configs[k]);
    return all;
  }, __assign({}, defaultConfig));
}
function createFastMemoizeCache(store) {
  return {
    create: function() {
      return {
        get: function(key) {
          return store[key];
        },
        set: function(key, value2) {
          store[key] = value2;
        }
      };
    }
  };
}
function createDefaultFormatters(cache3) {
  if (cache3 === void 0) {
    cache3 = {
      number: {},
      dateTime: {},
      pluralRules: {}
    };
  }
  return {
    getNumberFormat: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.NumberFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache3.number),
      strategy: strategies.variadic
    }),
    getDateTimeFormat: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.DateTimeFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache3.dateTime),
      strategy: strategies.variadic
    }),
    getPluralRules: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.PluralRules).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache3.pluralRules),
      strategy: strategies.variadic
    })
  };
}
var IntlMessageFormat = (
  /** @class */
  function() {
    function IntlMessageFormat2(message, locales, overrideFormats, opts) {
      if (locales === void 0) {
        locales = IntlMessageFormat2.defaultLocale;
      }
      var _this = this;
      this.formatterCache = {
        number: {},
        dateTime: {},
        pluralRules: {}
      };
      this.format = function(values) {
        var parts = _this.formatToParts(values);
        if (parts.length === 1) {
          return parts[0].value;
        }
        var result = parts.reduce(function(all, part) {
          if (!all.length || part.type !== PART_TYPE.literal || typeof all[all.length - 1] !== "string") {
            all.push(part.value);
          } else {
            all[all.length - 1] += part.value;
          }
          return all;
        }, []);
        if (result.length <= 1) {
          return result[0] || "";
        }
        return result;
      };
      this.formatToParts = function(values) {
        return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, void 0, _this.message);
      };
      this.resolvedOptions = function() {
        var _a3;
        return {
          locale: ((_a3 = _this.resolvedLocale) === null || _a3 === void 0 ? void 0 : _a3.toString()) || Intl.NumberFormat.supportedLocalesOf(_this.locales)[0]
        };
      };
      this.getAst = function() {
        return _this.ast;
      };
      this.locales = locales;
      this.resolvedLocale = IntlMessageFormat2.resolveLocale(locales);
      if (typeof message === "string") {
        this.message = message;
        if (!IntlMessageFormat2.__parse) {
          throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");
        }
        var _a2 = opts || {}, formatters = _a2.formatters, parseOpts = __rest(_a2, ["formatters"]);
        this.ast = IntlMessageFormat2.__parse(message, __assign(__assign({}, parseOpts), { locale: this.resolvedLocale }));
      } else {
        this.ast = message;
      }
      if (!Array.isArray(this.ast)) {
        throw new TypeError("A message must be provided as a String or AST.");
      }
      this.formats = mergeConfigs(IntlMessageFormat2.formats, overrideFormats);
      this.formatters = opts && opts.formatters || createDefaultFormatters(this.formatterCache);
    }
    Object.defineProperty(IntlMessageFormat2, "defaultLocale", {
      get: function() {
        if (!IntlMessageFormat2.memoizedDefaultLocale) {
          IntlMessageFormat2.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;
        }
        return IntlMessageFormat2.memoizedDefaultLocale;
      },
      enumerable: false,
      configurable: true
    });
    IntlMessageFormat2.memoizedDefaultLocale = null;
    IntlMessageFormat2.resolveLocale = function(locales) {
      if (typeof Intl.Locale === "undefined") {
        return;
      }
      var supportedLocales = Intl.NumberFormat.supportedLocalesOf(locales);
      if (supportedLocales.length > 0) {
        return new Intl.Locale(supportedLocales[0]);
      }
      return new Intl.Locale(typeof locales === "string" ? locales : locales[0]);
    };
    IntlMessageFormat2.__parse = parse;
    IntlMessageFormat2.formats = {
      number: {
        integer: {
          maximumFractionDigits: 0
        },
        currency: {
          style: "currency"
        },
        percent: {
          style: "percent"
        }
      },
      date: {
        short: {
          month: "numeric",
          day: "numeric",
          year: "2-digit"
        },
        medium: {
          month: "short",
          day: "numeric",
          year: "numeric"
        },
        long: {
          month: "long",
          day: "numeric",
          year: "numeric"
        },
        full: {
          weekday: "long",
          month: "long",
          day: "numeric",
          year: "numeric"
        }
      },
      time: {
        short: {
          hour: "numeric",
          minute: "numeric"
        },
        medium: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric"
        },
        long: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        },
        full: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        }
      }
    };
    return IntlMessageFormat2;
  }()
);

// ../../node_modules/intl-messageformat/lib/index.js
var lib_default = IntlMessageFormat;

// ../../node_modules/i18next-icu/dist/es/index.js
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? arguments[i2] : {};
    if (i2 % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _defineProperty(obj, key, value2) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value: value2, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value2;
  }
  return obj;
}
function _classCallCheck(instance2, Constructor) {
  if (!(instance2 instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i2 = 0; i2 < props.length; i2++) {
    var descriptor = props[i2];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}
function getDefaults2() {
  return {
    memoize: true,
    memoizeFallback: false,
    bindI18n: "",
    bindI18nStore: "",
    parseErrorHandler: function parseErrorHandler(err, key, res, options) {
      return res;
    },
    parseLngForICU: function parseLngForICU(lng) {
      return lng;
    }
  };
}
var ICU = /* @__PURE__ */ function() {
  function ICU2(options) {
    _classCallCheck(this, ICU2);
    this.type = "i18nFormat";
    this.mem = {};
    this.init(null, options);
  }
  _createClass(ICU2, [{
    key: "init",
    value: function init2(i18next, options) {
      var _this = this;
      var i18nextOptions = i18next && i18next.options && i18next.options.i18nFormat || {};
      this.options = defaults(i18nextOptions, options, this.options || {}, getDefaults2());
      this.formats = this.options.formats;
      if (i18next) {
        var _this$options = this.options, bindI18n = _this$options.bindI18n, bindI18nStore = _this$options.bindI18nStore, memoize2 = _this$options.memoize;
        i18next.IntlMessageFormat = lib_default;
        i18next.ICU = this;
        if (memoize2) {
          if (bindI18n) {
            i18next.on(bindI18n, function() {
              return _this.clearCache();
            });
          }
          if (bindI18nStore) {
            i18next.store.on(bindI18nStore, function() {
              return _this.clearCache();
            });
          }
        }
      }
    }
  }, {
    key: "addUserDefinedFormats",
    value: function addUserDefinedFormats(formats) {
      this.formats = this.formats ? _objectSpread(_objectSpread({}, this.formats), formats) : formats;
    }
  }, {
    key: "parse",
    value: function parse2(res, options, lng, ns, key, info) {
      var hadSuccessfulLookup = info && info.resolved && info.resolved.res;
      var memKey = this.options.memoize && "".concat(lng, ".").concat(ns, ".").concat(key.replace(/\./g, "###"));
      var fc;
      if (this.options.memoize) {
        fc = getPath(this.mem, memKey);
      }
      try {
        if (!fc) {
          var transformedLng = this.options.parseLngForICU(lng);
          fc = new lib_default(res, transformedLng, this.formats, {
            ignoreTag: true
          });
          if (this.options.memoize && (this.options.memoizeFallback || !info || hadSuccessfulLookup)) setPath(this.mem, memKey, fc);
        }
        return fc.format(options);
      } catch (err) {
        return this.options.parseErrorHandler(err, key, res, options);
      }
    }
  }, {
    key: "addLookupKeys",
    value: function addLookupKeys(finalKeys, _key, _code, _ns, _options) {
      return finalKeys;
    }
  }, {
    key: "clearCache",
    value: function clearCache() {
      this.mem = {};
    }
  }]);
  return ICU2;
}();
ICU.type = "i18nFormat";
var es_default = ICU;

// ../../node_modules/i18next/dist/esm/i18next.js
init_esm_shims();
var isString2 = (obj) => typeof obj === "string";
var defer = () => {
  let res;
  let rej;
  const promise = new Promise((resolve, reject) => {
    res = resolve;
    rej = reject;
  });
  promise.resolve = res;
  promise.reject = rej;
  return promise;
};
var makeString = (object) => {
  if (object == null) return "";
  return "" + object;
};
var copy = (a2, s2, t3) => {
  a2.forEach((m) => {
    if (s2[m]) t3[m] = s2[m];
  });
};
var lastOfPathSeparatorRegExp = /###/g;
var cleanKey = (key) => key && key.indexOf("###") > -1 ? key.replace(lastOfPathSeparatorRegExp, ".") : key;
var canNotTraverseDeeper = (object) => !object || isString2(object);
var getLastOfPath2 = (object, path, Empty) => {
  const stack = !isString2(path) ? path : path.split(".");
  let stackIndex = 0;
  while (stackIndex < stack.length - 1) {
    if (canNotTraverseDeeper(object)) return {};
    const key = cleanKey(stack[stackIndex]);
    if (!object[key] && Empty) object[key] = new Empty();
    if (Object.prototype.hasOwnProperty.call(object, key)) {
      object = object[key];
    } else {
      object = {};
    }
    ++stackIndex;
  }
  if (canNotTraverseDeeper(object)) return {};
  return {
    obj: object,
    k: cleanKey(stack[stackIndex])
  };
};
var setPath2 = (object, path, newValue) => {
  const {
    obj,
    k
  } = getLastOfPath2(object, path, Object);
  if (obj !== void 0 || path.length === 1) {
    obj[k] = newValue;
    return;
  }
  let e2 = path[path.length - 1];
  let p = path.slice(0, path.length - 1);
  let last = getLastOfPath2(object, p, Object);
  while (last.obj === void 0 && p.length) {
    e2 = `${p[p.length - 1]}.${e2}`;
    p = p.slice(0, p.length - 1);
    last = getLastOfPath2(object, p, Object);
    if (last?.obj && typeof last.obj[`${last.k}.${e2}`] !== "undefined") {
      last.obj = void 0;
    }
  }
  last.obj[`${last.k}.${e2}`] = newValue;
};
var pushPath = (object, path, newValue, concat) => {
  const {
    obj,
    k
  } = getLastOfPath2(object, path, Object);
  obj[k] = obj[k] || [];
  obj[k].push(newValue);
};
var getPath2 = (object, path) => {
  const {
    obj,
    k
  } = getLastOfPath2(object, path);
  if (!obj) return void 0;
  if (!Object.prototype.hasOwnProperty.call(obj, k)) return void 0;
  return obj[k];
};
var getPathWithDefaults = (data, defaultData, key) => {
  const value2 = getPath2(data, key);
  if (value2 !== void 0) {
    return value2;
  }
  return getPath2(defaultData, key);
};
var deepExtend = (target, source, overwrite) => {
  for (const prop in source) {
    if (prop !== "__proto__" && prop !== "constructor") {
      if (prop in target) {
        if (isString2(target[prop]) || target[prop] instanceof String || isString2(source[prop]) || source[prop] instanceof String) {
          if (overwrite) target[prop] = source[prop];
        } else {
          deepExtend(target[prop], source[prop], overwrite);
        }
      } else {
        target[prop] = source[prop];
      }
    }
  }
  return target;
};
var regexEscape = (str) => str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
var _entityMap = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;",
  "/": "&#x2F;"
};
var escape2 = (data) => {
  if (isString2(data)) {
    return data.replace(/[&<>"'\/]/g, (s2) => _entityMap[s2]);
  }
  return data;
};
var RegExpCache = class {
  constructor(capacity) {
    this.capacity = capacity;
    this.regExpMap = /* @__PURE__ */ new Map();
    this.regExpQueue = [];
  }
  getRegExp(pattern) {
    const regExpFromCache = this.regExpMap.get(pattern);
    if (regExpFromCache !== void 0) {
      return regExpFromCache;
    }
    const regExpNew = new RegExp(pattern);
    if (this.regExpQueue.length === this.capacity) {
      this.regExpMap.delete(this.regExpQueue.shift());
    }
    this.regExpMap.set(pattern, regExpNew);
    this.regExpQueue.push(pattern);
    return regExpNew;
  }
};
var chars = [" ", ",", "?", "!", ";"];
var looksLikeObjectPathRegExpCache = new RegExpCache(20);
var looksLikeObjectPath = (key, nsSeparator, keySeparator) => {
  nsSeparator = nsSeparator || "";
  keySeparator = keySeparator || "";
  const possibleChars = chars.filter((c2) => nsSeparator.indexOf(c2) < 0 && keySeparator.indexOf(c2) < 0);
  if (possibleChars.length === 0) return true;
  const r2 = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map((c2) => c2 === "?" ? "\\?" : c2).join("|")})`);
  let matched = !r2.test(key);
  if (!matched) {
    const ki = key.indexOf(keySeparator);
    if (ki > 0 && !r2.test(key.substring(0, ki))) {
      matched = true;
    }
  }
  return matched;
};
var deepFind = function(obj, path) {
  let keySeparator = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ".";
  if (!obj) return void 0;
  if (obj[path]) {
    if (!Object.prototype.hasOwnProperty.call(obj, path)) return void 0;
    return obj[path];
  }
  const tokens = path.split(keySeparator);
  let current = obj;
  for (let i2 = 0; i2 < tokens.length; ) {
    if (!current || typeof current !== "object") {
      return void 0;
    }
    let next;
    let nextPath = "";
    for (let j = i2; j < tokens.length; ++j) {
      if (j !== i2) {
        nextPath += keySeparator;
      }
      nextPath += tokens[j];
      next = current[nextPath];
      if (next !== void 0) {
        if (["string", "number", "boolean"].indexOf(typeof next) > -1 && j < tokens.length - 1) {
          continue;
        }
        i2 += j - i2 + 1;
        break;
      }
    }
    current = next;
  }
  return current;
};
var getCleanedCode = (code) => code?.replace("_", "-");
var consoleLogger = {
  type: "logger",
  log(args) {
    this.output("log", args);
  },
  warn(args) {
    this.output("warn", args);
  },
  error(args) {
    this.output("error", args);
  },
  output(type, args) {
    console?.[type]?.apply?.(console, args);
  }
};
var Logger = class _Logger {
  constructor(concreteLogger) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.init(concreteLogger, options);
  }
  init(concreteLogger) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.prefix = options.prefix || "i18next:";
    this.logger = concreteLogger || consoleLogger;
    this.options = options;
    this.debug = options.debug;
  }
  log() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return this.forward(args, "log", "", true);
  }
  warn() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    return this.forward(args, "warn", "", true);
  }
  error() {
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }
    return this.forward(args, "error", "");
  }
  deprecate() {
    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }
    return this.forward(args, "warn", "WARNING DEPRECATED: ", true);
  }
  forward(args, lvl, prefix, debugOnly) {
    if (debugOnly && !this.debug) return null;
    if (isString2(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;
    return this.logger[lvl](args);
  }
  create(moduleName) {
    return new _Logger(this.logger, {
      ...{
        prefix: `${this.prefix}:${moduleName}:`
      },
      ...this.options
    });
  }
  clone(options) {
    options = options || this.options;
    options.prefix = options.prefix || this.prefix;
    return new _Logger(this.logger, options);
  }
};
var baseLogger = new Logger();
var EventEmitter = class {
  constructor() {
    this.observers = {};
  }
  on(events, listener) {
    events.split(" ").forEach((event) => {
      if (!this.observers[event]) this.observers[event] = /* @__PURE__ */ new Map();
      const numListeners = this.observers[event].get(listener) || 0;
      this.observers[event].set(listener, numListeners + 1);
    });
    return this;
  }
  off(event, listener) {
    if (!this.observers[event]) return;
    if (!listener) {
      delete this.observers[event];
      return;
    }
    this.observers[event].delete(listener);
  }
  emit(event) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    if (this.observers[event]) {
      const cloned = Array.from(this.observers[event].entries());
      cloned.forEach((_ref) => {
        let [observer, numTimesAdded] = _ref;
        for (let i2 = 0; i2 < numTimesAdded; i2++) {
          observer(...args);
        }
      });
    }
    if (this.observers["*"]) {
      const cloned = Array.from(this.observers["*"].entries());
      cloned.forEach((_ref2) => {
        let [observer, numTimesAdded] = _ref2;
        for (let i2 = 0; i2 < numTimesAdded; i2++) {
          observer.apply(observer, [event, ...args]);
        }
      });
    }
  }
};
var ResourceStore = class extends EventEmitter {
  constructor(data) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      ns: ["translation"],
      defaultNS: "translation"
    };
    super();
    this.data = data || {};
    this.options = options;
    if (this.options.keySeparator === void 0) {
      this.options.keySeparator = ".";
    }
    if (this.options.ignoreJSONStructure === void 0) {
      this.options.ignoreJSONStructure = true;
    }
  }
  addNamespaces(ns) {
    if (this.options.ns.indexOf(ns) < 0) {
      this.options.ns.push(ns);
    }
  }
  removeNamespaces(ns) {
    const index = this.options.ns.indexOf(ns);
    if (index > -1) {
      this.options.ns.splice(index, 1);
    }
  }
  getResource(lng, ns, key) {
    let options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    const keySeparator = options.keySeparator !== void 0 ? options.keySeparator : this.options.keySeparator;
    const ignoreJSONStructure = options.ignoreJSONStructure !== void 0 ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;
    let path;
    if (lng.indexOf(".") > -1) {
      path = lng.split(".");
    } else {
      path = [lng, ns];
      if (key) {
        if (Array.isArray(key)) {
          path.push(...key);
        } else if (isString2(key) && keySeparator) {
          path.push(...key.split(keySeparator));
        } else {
          path.push(key);
        }
      }
    }
    const result = getPath2(this.data, path);
    if (!result && !ns && !key && lng.indexOf(".") > -1) {
      lng = path[0];
      ns = path[1];
      key = path.slice(2).join(".");
    }
    if (result || !ignoreJSONStructure || !isString2(key)) return result;
    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);
  }
  addResource(lng, ns, key, value2) {
    let options = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
      silent: false
    };
    const keySeparator = options.keySeparator !== void 0 ? options.keySeparator : this.options.keySeparator;
    let path = [lng, ns];
    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);
    if (lng.indexOf(".") > -1) {
      path = lng.split(".");
      value2 = ns;
      ns = path[1];
    }
    this.addNamespaces(ns);
    setPath2(this.data, path, value2);
    if (!options.silent) this.emit("added", lng, ns, key, value2);
  }
  addResources(lng, ns, resources) {
    let options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {
      silent: false
    };
    for (const m in resources) {
      if (isString2(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {
        silent: true
      });
    }
    if (!options.silent) this.emit("added", lng, ns, resources);
  }
  addResourceBundle(lng, ns, resources, deep, overwrite) {
    let options = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {
      silent: false,
      skipCopy: false
    };
    let path = [lng, ns];
    if (lng.indexOf(".") > -1) {
      path = lng.split(".");
      deep = resources;
      resources = ns;
      ns = path[1];
    }
    this.addNamespaces(ns);
    let pack = getPath2(this.data, path) || {};
    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));
    if (deep) {
      deepExtend(pack, resources, overwrite);
    } else {
      pack = {
        ...pack,
        ...resources
      };
    }
    setPath2(this.data, path, pack);
    if (!options.silent) this.emit("added", lng, ns, resources);
  }
  removeResourceBundle(lng, ns) {
    if (this.hasResourceBundle(lng, ns)) {
      delete this.data[lng][ns];
    }
    this.removeNamespaces(ns);
    this.emit("removed", lng, ns);
  }
  hasResourceBundle(lng, ns) {
    return this.getResource(lng, ns) !== void 0;
  }
  getResourceBundle(lng, ns) {
    if (!ns) ns = this.options.defaultNS;
    return this.getResource(lng, ns);
  }
  getDataByLanguage(lng) {
    return this.data[lng];
  }
  hasLanguageSomeTranslations(lng) {
    const data = this.getDataByLanguage(lng);
    const n2 = data && Object.keys(data) || [];
    return !!n2.find((v) => data[v] && Object.keys(data[v]).length > 0);
  }
  toJSON() {
    return this.data;
  }
};
var postProcessor = {
  processors: {},
  addPostProcessor(module) {
    this.processors[module.name] = module;
  },
  handle(processors, value2, key, options, translator) {
    processors.forEach((processor) => {
      value2 = this.processors[processor]?.process(value2, key, options, translator) ?? value2;
    });
    return value2;
  }
};
var checkedLoadedFor = {};
var Translator = class _Translator extends EventEmitter {
  constructor(services) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    super();
    copy(["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], services, this);
    this.options = options;
    if (this.options.keySeparator === void 0) {
      this.options.keySeparator = ".";
    }
    this.logger = baseLogger.create("translator");
  }
  changeLanguage(lng) {
    if (lng) this.language = lng;
  }
  exists(key) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      interpolation: {}
    };
    if (key == null) {
      return false;
    }
    const resolved = this.resolve(key, options);
    return resolved?.res !== void 0;
  }
  extractFromKey(key, options) {
    let nsSeparator = options.nsSeparator !== void 0 ? options.nsSeparator : this.options.nsSeparator;
    if (nsSeparator === void 0) nsSeparator = ":";
    const keySeparator = options.keySeparator !== void 0 ? options.keySeparator : this.options.keySeparator;
    let namespaces = options.ns || this.options.defaultNS || [];
    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;
    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);
    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {
      const m = key.match(this.interpolator.nestingRegexp);
      if (m && m.length > 0) {
        return {
          key,
          namespaces: isString2(namespaces) ? [namespaces] : namespaces
        };
      }
      const parts = key.split(nsSeparator);
      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();
      key = parts.join(keySeparator);
    }
    return {
      key,
      namespaces: isString2(namespaces) ? [namespaces] : namespaces
    };
  }
  translate(keys, options, lastKey) {
    if (typeof options !== "object" && this.options.overloadTranslationOptionHandler) {
      options = this.options.overloadTranslationOptionHandler(arguments);
    }
    if (typeof options === "object") options = {
      ...options
    };
    if (!options) options = {};
    if (keys == null) return "";
    if (!Array.isArray(keys)) keys = [String(keys)];
    const returnDetails = options.returnDetails !== void 0 ? options.returnDetails : this.options.returnDetails;
    const keySeparator = options.keySeparator !== void 0 ? options.keySeparator : this.options.keySeparator;
    const {
      key,
      namespaces
    } = this.extractFromKey(keys[keys.length - 1], options);
    const namespace = namespaces[namespaces.length - 1];
    const lng = options.lng || this.language;
    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
    if (lng?.toLowerCase() === "cimode") {
      if (appendNamespaceToCIMode) {
        const nsSeparator = options.nsSeparator || this.options.nsSeparator;
        if (returnDetails) {
          return {
            res: `${namespace}${nsSeparator}${key}`,
            usedKey: key,
            exactUsedKey: key,
            usedLng: lng,
            usedNS: namespace,
            usedParams: this.getUsedParamsDetails(options)
          };
        }
        return `${namespace}${nsSeparator}${key}`;
      }
      if (returnDetails) {
        return {
          res: key,
          usedKey: key,
          exactUsedKey: key,
          usedLng: lng,
          usedNS: namespace,
          usedParams: this.getUsedParamsDetails(options)
        };
      }
      return key;
    }
    const resolved = this.resolve(keys, options);
    let res = resolved?.res;
    const resUsedKey = resolved?.usedKey || key;
    const resExactUsedKey = resolved?.exactUsedKey || key;
    const resType = Object.prototype.toString.apply(res);
    const noObject = ["[object Number]", "[object Function]", "[object RegExp]"];
    const joinArrays = options.joinArrays !== void 0 ? options.joinArrays : this.options.joinArrays;
    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;
    const handleAsObject = !isString2(res) && typeof res !== "boolean" && typeof res !== "number";
    if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(isString2(joinArrays) && Array.isArray(res))) {
      if (!options.returnObjects && !this.options.returnObjects) {
        if (!this.options.returnedObjectHandler) {
          this.logger.warn("accessing an object - but returnObjects options is not enabled!");
        }
        const r2 = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, {
          ...options,
          ns: namespaces
        }) : `key '${key} (${this.language})' returned an object instead of string.`;
        if (returnDetails) {
          resolved.res = r2;
          resolved.usedParams = this.getUsedParamsDetails(options);
          return resolved;
        }
        return r2;
      }
      if (keySeparator) {
        const resTypeIsArray = Array.isArray(res);
        const copy2 = resTypeIsArray ? [] : {};
        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;
        for (const m in res) {
          if (Object.prototype.hasOwnProperty.call(res, m)) {
            const deepKey = `${newKeyToUse}${keySeparator}${m}`;
            copy2[m] = this.translate(deepKey, {
              ...options,
              ...{
                joinArrays: false,
                ns: namespaces
              }
            });
            if (copy2[m] === deepKey) copy2[m] = res[m];
          }
        }
        res = copy2;
      }
    } else if (handleAsObjectInI18nFormat && isString2(joinArrays) && Array.isArray(res)) {
      res = res.join(joinArrays);
      if (res) res = this.extendTranslation(res, keys, options, lastKey);
    } else {
      let usedDefault = false;
      let usedKey = false;
      const needsPluralHandling = options.count !== void 0 && !isString2(options.count);
      const hasDefaultValue = _Translator.hasDefaultValue(options);
      const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : "";
      const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {
        ordinal: false
      }) : "";
      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;
      const defaultValue = needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] || options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;
      if (!this.isValidLookup(res) && hasDefaultValue) {
        usedDefault = true;
        res = defaultValue;
      }
      if (!this.isValidLookup(res)) {
        usedKey = true;
        res = key;
      }
      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;
      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? void 0 : res;
      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;
      if (usedKey || usedDefault || updateMissing) {
        this.logger.log(updateMissing ? "updateKey" : "missingKey", lng, namespace, key, updateMissing ? defaultValue : res);
        if (keySeparator) {
          const fk = this.resolve(key, {
            ...options,
            keySeparator: false
          });
          if (fk && fk.res) this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.");
        }
        let lngs = [];
        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);
        if (this.options.saveMissingTo === "fallback" && fallbackLngs && fallbackLngs[0]) {
          for (let i2 = 0; i2 < fallbackLngs.length; i2++) {
            lngs.push(fallbackLngs[i2]);
          }
        } else if (this.options.saveMissingTo === "all") {
          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);
        } else {
          lngs.push(options.lng || this.language);
        }
        const send = (l, k, specificDefaultValue) => {
          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;
          if (this.options.missingKeyHandler) {
            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);
          } else if (this.backendConnector?.saveMissing) {
            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);
          }
          this.emit("missingKey", l, namespace, k, res);
        };
        if (this.options.saveMissing) {
          if (this.options.saveMissingPlurals && needsPluralHandling) {
            lngs.forEach((language) => {
              const suffixes = this.pluralResolver.getSuffixes(language, options);
              if (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {
                suffixes.push(`${this.options.pluralSeparator}zero`);
              }
              suffixes.forEach((suffix) => {
                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);
              });
            });
          } else {
            send(lngs, key, defaultValue);
          }
        }
      }
      res = this.extendTranslation(res, keys, options, resolved, lastKey);
      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;
      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {
        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : void 0);
      }
    }
    if (returnDetails) {
      resolved.res = res;
      resolved.usedParams = this.getUsedParamsDetails(options);
      return resolved;
    }
    return res;
  }
  extendTranslation(res, key, options, resolved, lastKey) {
    var _this = this;
    if (this.i18nFormat?.parse) {
      res = this.i18nFormat.parse(res, {
        ...this.options.interpolation.defaultVariables,
        ...options
      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {
        resolved
      });
    } else if (!options.skipInterpolation) {
      if (options.interpolation) this.interpolator.init({
        ...options,
        ...{
          interpolation: {
            ...this.options.interpolation,
            ...options.interpolation
          }
        }
      });
      const skipOnVariables = isString2(res) && (options?.interpolation?.skipOnVariables !== void 0 ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);
      let nestBef;
      if (skipOnVariables) {
        const nb = res.match(this.interpolator.nestingRegexp);
        nestBef = nb && nb.length;
      }
      let data = options.replace && !isString2(options.replace) ? options.replace : options;
      if (this.options.interpolation.defaultVariables) data = {
        ...this.options.interpolation.defaultVariables,
        ...data
      };
      res = this.interpolator.interpolate(res, data, options.lng || this.language || resolved.usedLng, options);
      if (skipOnVariables) {
        const na = res.match(this.interpolator.nestingRegexp);
        const nestAft = na && na.length;
        if (nestBef < nestAft) options.nest = false;
      }
      if (!options.lng && resolved && resolved.res) options.lng = this.language || resolved.usedLng;
      if (options.nest !== false) res = this.interpolator.nest(res, function() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        if (lastKey?.[0] === args[0] && !options.context) {
          _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);
          return null;
        }
        return _this.translate(...args, key);
      }, options);
      if (options.interpolation) this.interpolator.reset();
    }
    const postProcess = options.postProcess || this.options.postProcess;
    const postProcessorNames = isString2(postProcess) ? [postProcess] : postProcess;
    if (res != null && postProcessorNames?.length && options.applyPostProcessor !== false) {
      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {
        i18nResolved: {
          ...resolved,
          usedParams: this.getUsedParamsDetails(options)
        },
        ...options
      } : options, this);
    }
    return res;
  }
  resolve(keys) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    let found;
    let usedKey;
    let exactUsedKey;
    let usedLng;
    let usedNS;
    if (isString2(keys)) keys = [keys];
    keys.forEach((k) => {
      if (this.isValidLookup(found)) return;
      const extracted = this.extractFromKey(k, options);
      const key = extracted.key;
      usedKey = key;
      let namespaces = extracted.namespaces;
      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);
      const needsPluralHandling = options.count !== void 0 && !isString2(options.count);
      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0;
      const needsContextHandling = options.context !== void 0 && (isString2(options.context) || typeof options.context === "number") && options.context !== "";
      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);
      namespaces.forEach((ns) => {
        if (this.isValidLookup(found)) return;
        usedNS = ns;
        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {
          checkedLoadedFor[`${codes[0]}-${ns}`] = true;
          this.logger.warn(`key "${usedKey}" for languages "${codes.join(", ")}" won't get resolved as namespace "${usedNS}" was not yet loaded`, "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
        }
        codes.forEach((code) => {
          if (this.isValidLookup(found)) return;
          usedLng = code;
          const finalKeys = [key];
          if (this.i18nFormat?.addLookupKeys) {
            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);
          } else {
            let pluralSuffix;
            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);
            const zeroSuffix = `${this.options.pluralSeparator}zero`;
            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;
            if (needsPluralHandling) {
              finalKeys.push(key + pluralSuffix);
              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {
                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));
              }
              if (needsZeroSuffixLookup) {
                finalKeys.push(key + zeroSuffix);
              }
            }
            if (needsContextHandling) {
              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;
              finalKeys.push(contextKey);
              if (needsPluralHandling) {
                finalKeys.push(contextKey + pluralSuffix);
                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {
                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));
                }
                if (needsZeroSuffixLookup) {
                  finalKeys.push(contextKey + zeroSuffix);
                }
              }
            }
          }
          let possibleKey;
          while (possibleKey = finalKeys.pop()) {
            if (!this.isValidLookup(found)) {
              exactUsedKey = possibleKey;
              found = this.getResource(code, ns, possibleKey, options);
            }
          }
        });
      });
    });
    return {
      res: found,
      usedKey,
      exactUsedKey,
      usedLng,
      usedNS
    };
  }
  isValidLookup(res) {
    return res !== void 0 && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === "");
  }
  getResource(code, ns, key) {
    let options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);
    return this.resourceStore.getResource(code, ns, key, options);
  }
  getUsedParamsDetails() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const optionsKeys = ["defaultValue", "ordinal", "context", "replace", "lng", "lngs", "fallbackLng", "ns", "keySeparator", "nsSeparator", "returnObjects", "returnDetails", "joinArrays", "postProcess", "interpolation"];
    const useOptionsReplaceForData = options.replace && !isString2(options.replace);
    let data = useOptionsReplaceForData ? options.replace : options;
    if (useOptionsReplaceForData && typeof options.count !== "undefined") {
      data.count = options.count;
    }
    if (this.options.interpolation.defaultVariables) {
      data = {
        ...this.options.interpolation.defaultVariables,
        ...data
      };
    }
    if (!useOptionsReplaceForData) {
      data = {
        ...data
      };
      for (const key of optionsKeys) {
        delete data[key];
      }
    }
    return data;
  }
  static hasDefaultValue(options) {
    const prefix = "defaultValue";
    for (const option in options) {
      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && void 0 !== options[option]) {
        return true;
      }
    }
    return false;
  }
};
var LanguageUtil = class {
  constructor(options) {
    this.options = options;
    this.supportedLngs = this.options.supportedLngs || false;
    this.logger = baseLogger.create("languageUtils");
  }
  getScriptPartFromCode(code) {
    code = getCleanedCode(code);
    if (!code || code.indexOf("-") < 0) return null;
    const p = code.split("-");
    if (p.length === 2) return null;
    p.pop();
    if (p[p.length - 1].toLowerCase() === "x") return null;
    return this.formatLanguageCode(p.join("-"));
  }
  getLanguagePartFromCode(code) {
    code = getCleanedCode(code);
    if (!code || code.indexOf("-") < 0) return code;
    const p = code.split("-");
    return this.formatLanguageCode(p[0]);
  }
  formatLanguageCode(code) {
    if (isString2(code) && code.indexOf("-") > -1) {
      let formattedCode;
      try {
        formattedCode = Intl.getCanonicalLocales(code)[0];
      } catch (e2) {
      }
      if (formattedCode && this.options.lowerCaseLng) {
        formattedCode = formattedCode.toLowerCase();
      }
      if (formattedCode) return formattedCode;
      if (this.options.lowerCaseLng) {
        return code.toLowerCase();
      }
      return code;
    }
    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;
  }
  isSupportedCode(code) {
    if (this.options.load === "languageOnly" || this.options.nonExplicitSupportedLngs) {
      code = this.getLanguagePartFromCode(code);
    }
    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;
  }
  getBestMatchFromCodes(codes) {
    if (!codes) return null;
    let found;
    codes.forEach((code) => {
      if (found) return;
      const cleanedLng = this.formatLanguageCode(code);
      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;
    });
    if (!found && this.options.supportedLngs) {
      codes.forEach((code) => {
        if (found) return;
        const lngOnly = this.getLanguagePartFromCode(code);
        if (this.isSupportedCode(lngOnly)) return found = lngOnly;
        found = this.options.supportedLngs.find((supportedLng) => {
          if (supportedLng === lngOnly) return supportedLng;
          if (supportedLng.indexOf("-") < 0 && lngOnly.indexOf("-") < 0) return;
          if (supportedLng.indexOf("-") > 0 && lngOnly.indexOf("-") < 0 && supportedLng.substring(0, supportedLng.indexOf("-")) === lngOnly) return supportedLng;
          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;
        });
      });
    }
    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];
    return found;
  }
  getFallbackCodes(fallbacks, code) {
    if (!fallbacks) return [];
    if (typeof fallbacks === "function") fallbacks = fallbacks(code);
    if (isString2(fallbacks)) fallbacks = [fallbacks];
    if (Array.isArray(fallbacks)) return fallbacks;
    if (!code) return fallbacks.default || [];
    let found = fallbacks[code];
    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];
    if (!found) found = fallbacks[this.formatLanguageCode(code)];
    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];
    if (!found) found = fallbacks.default;
    return found || [];
  }
  toResolveHierarchy(code, fallbackCode) {
    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);
    const codes = [];
    const addCode = (c2) => {
      if (!c2) return;
      if (this.isSupportedCode(c2)) {
        codes.push(c2);
      } else {
        this.logger.warn(`rejecting language code not found in supportedLngs: ${c2}`);
      }
    };
    if (isString2(code) && (code.indexOf("-") > -1 || code.indexOf("_") > -1)) {
      if (this.options.load !== "languageOnly") addCode(this.formatLanguageCode(code));
      if (this.options.load !== "languageOnly" && this.options.load !== "currentOnly") addCode(this.getScriptPartFromCode(code));
      if (this.options.load !== "currentOnly") addCode(this.getLanguagePartFromCode(code));
    } else if (isString2(code)) {
      addCode(this.formatLanguageCode(code));
    }
    fallbackCodes.forEach((fc) => {
      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));
    });
    return codes;
  }
};
var suffixesOrder = {
  zero: 0,
  one: 1,
  two: 2,
  few: 3,
  many: 4,
  other: 5
};
var dummyRule = {
  select: (count) => count === 1 ? "one" : "other",
  resolvedOptions: () => ({
    pluralCategories: ["one", "other"]
  })
};
var PluralResolver = class {
  constructor(languageUtils) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.languageUtils = languageUtils;
    this.options = options;
    this.logger = baseLogger.create("pluralResolver");
    this.pluralRulesCache = {};
  }
  addRule(lng, obj) {
    this.rules[lng] = obj;
  }
  clearCache() {
    this.pluralRulesCache = {};
  }
  getRule(code) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const cleanedCode = getCleanedCode(code === "dev" ? "en" : code);
    const type = options.ordinal ? "ordinal" : "cardinal";
    const cacheKey = JSON.stringify({
      cleanedCode,
      type
    });
    if (cacheKey in this.pluralRulesCache) {
      return this.pluralRulesCache[cacheKey];
    }
    let rule;
    try {
      rule = new Intl.PluralRules(cleanedCode, {
        type
      });
    } catch (err) {
      if (!Intl) {
        this.logger.error("No Intl support, please use an Intl polyfill!");
        return dummyRule;
      }
      if (!code.match(/-|_/)) return dummyRule;
      const lngPart = this.languageUtils.getLanguagePartFromCode(code);
      rule = this.getRule(lngPart, options);
    }
    this.pluralRulesCache[cacheKey] = rule;
    return rule;
  }
  needsPlural(code) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    let rule = this.getRule(code, options);
    if (!rule) rule = this.getRule("dev", options);
    return rule?.resolvedOptions().pluralCategories.length > 1;
  }
  getPluralFormsOfKey(code, key) {
    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    return this.getSuffixes(code, options).map((suffix) => `${key}${suffix}`);
  }
  getSuffixes(code) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    let rule = this.getRule(code, options);
    if (!rule) rule = this.getRule("dev", options);
    if (!rule) return [];
    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map((pluralCategory) => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ""}${pluralCategory}`);
  }
  getSuffix(code, count) {
    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    const rule = this.getRule(code, options);
    if (rule) {
      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ""}${rule.select(count)}`;
    }
    this.logger.warn(`no plural rule found for: ${code}`);
    return this.getSuffix("dev", count, options);
  }
};
var deepFindWithDefaults = function(data, defaultData, key) {
  let keySeparator = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : ".";
  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : true;
  let path = getPathWithDefaults(data, defaultData, key);
  if (!path && ignoreJSONStructure && isString2(key)) {
    path = deepFind(data, key, keySeparator);
    if (path === void 0) path = deepFind(defaultData, key, keySeparator);
  }
  return path;
};
var regexSafe = (val) => val.replace(/\$/g, "$$$$");
var Interpolator = class {
  constructor() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    this.logger = baseLogger.create("interpolator");
    this.options = options;
    this.format = options?.interpolation?.format || ((value2) => value2);
    this.init(options);
  }
  init() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!options.interpolation) options.interpolation = {
      escapeValue: true
    };
    const {
      escape: escape$1,
      escapeValue,
      useRawValueToEscape,
      prefix,
      prefixEscaped,
      suffix,
      suffixEscaped,
      formatSeparator,
      unescapeSuffix,
      unescapePrefix,
      nestingPrefix,
      nestingPrefixEscaped,
      nestingSuffix,
      nestingSuffixEscaped,
      nestingOptionsSeparator,
      maxReplaces,
      alwaysFormat
    } = options.interpolation;
    this.escape = escape$1 !== void 0 ? escape$1 : escape2;
    this.escapeValue = escapeValue !== void 0 ? escapeValue : true;
    this.useRawValueToEscape = useRawValueToEscape !== void 0 ? useRawValueToEscape : false;
    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || "{{";
    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || "}}";
    this.formatSeparator = formatSeparator || ",";
    this.unescapePrefix = unescapeSuffix ? "" : unescapePrefix || "-";
    this.unescapeSuffix = this.unescapePrefix ? "" : unescapeSuffix || "";
    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape("$t(");
    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(")");
    this.nestingOptionsSeparator = nestingOptionsSeparator || ",";
    this.maxReplaces = maxReplaces || 1e3;
    this.alwaysFormat = alwaysFormat !== void 0 ? alwaysFormat : false;
    this.resetRegExp();
  }
  reset() {
    if (this.options) this.init(this.options);
  }
  resetRegExp() {
    const getOrResetRegExp = (existingRegExp, pattern) => {
      if (existingRegExp?.source === pattern) {
        existingRegExp.lastIndex = 0;
        return existingRegExp;
      }
      return new RegExp(pattern, "g");
    };
    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);
    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);
    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);
  }
  interpolate(str, data, lng, options) {
    let match4;
    let value2;
    let replaces;
    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};
    const handleFormat = (key) => {
      if (key.indexOf(this.formatSeparator) < 0) {
        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);
        return this.alwaysFormat ? this.format(path, void 0, lng, {
          ...options,
          ...data,
          interpolationkey: key
        }) : path;
      }
      const p = key.split(this.formatSeparator);
      const k = p.shift().trim();
      const f = p.join(this.formatSeparator).trim();
      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {
        ...options,
        ...data,
        interpolationkey: k
      });
    };
    this.resetRegExp();
    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;
    const skipOnVariables = options?.interpolation?.skipOnVariables !== void 0 ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;
    const todos = [{
      regex: this.regexpUnescape,
      safeValue: (val) => regexSafe(val)
    }, {
      regex: this.regexp,
      safeValue: (val) => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)
    }];
    todos.forEach((todo) => {
      replaces = 0;
      while (match4 = todo.regex.exec(str)) {
        const matchedVar = match4[1].trim();
        value2 = handleFormat(matchedVar);
        if (value2 === void 0) {
          if (typeof missingInterpolationHandler === "function") {
            const temp = missingInterpolationHandler(str, match4, options);
            value2 = isString2(temp) ? temp : "";
          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {
            value2 = "";
          } else if (skipOnVariables) {
            value2 = match4[0];
            continue;
          } else {
            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);
            value2 = "";
          }
        } else if (!isString2(value2) && !this.useRawValueToEscape) {
          value2 = makeString(value2);
        }
        const safeValue = todo.safeValue(value2);
        str = str.replace(match4[0], safeValue);
        if (skipOnVariables) {
          todo.regex.lastIndex += value2.length;
          todo.regex.lastIndex -= match4[0].length;
        } else {
          todo.regex.lastIndex = 0;
        }
        replaces++;
        if (replaces >= this.maxReplaces) {
          break;
        }
      }
    });
    return str;
  }
  nest(str, fc) {
    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    let match4;
    let value2;
    let clonedOptions;
    const handleHasOptions = (key, inheritedOptions) => {
      const sep = this.nestingOptionsSeparator;
      if (key.indexOf(sep) < 0) return key;
      const c2 = key.split(new RegExp(`${sep}[ ]*{`));
      let optionsString = `{${c2[1]}`;
      key = c2[0];
      optionsString = this.interpolate(optionsString, clonedOptions);
      const matchedSingleQuotes = optionsString.match(/'/g);
      const matchedDoubleQuotes = optionsString.match(/"/g);
      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {
        optionsString = optionsString.replace(/'/g, '"');
      }
      try {
        clonedOptions = JSON.parse(optionsString);
        if (inheritedOptions) clonedOptions = {
          ...inheritedOptions,
          ...clonedOptions
        };
      } catch (e2) {
        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e2);
        return `${key}${sep}${optionsString}`;
      }
      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;
      return key;
    };
    while (match4 = this.nestingRegexp.exec(str)) {
      let formatters = [];
      clonedOptions = {
        ...options
      };
      clonedOptions = clonedOptions.replace && !isString2(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;
      clonedOptions.applyPostProcessor = false;
      delete clonedOptions.defaultValue;
      let doReduce = false;
      if (match4[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match4[1])) {
        const r2 = match4[1].split(this.formatSeparator).map((elem) => elem.trim());
        match4[1] = r2.shift();
        formatters = r2;
        doReduce = true;
      }
      value2 = fc(handleHasOptions.call(this, match4[1].trim(), clonedOptions), clonedOptions);
      if (value2 && match4[0] === str && !isString2(value2)) return value2;
      if (!isString2(value2)) value2 = makeString(value2);
      if (!value2) {
        this.logger.warn(`missed to resolve ${match4[1]} for nesting ${str}`);
        value2 = "";
      }
      if (doReduce) {
        value2 = formatters.reduce((v, f) => this.format(v, f, options.lng, {
          ...options,
          interpolationkey: match4[1].trim()
        }), value2.trim());
      }
      str = str.replace(match4[0], value2);
      this.regexp.lastIndex = 0;
    }
    return str;
  }
};
var parseFormatStr = (formatStr) => {
  let formatName = formatStr.toLowerCase().trim();
  const formatOptions = {};
  if (formatStr.indexOf("(") > -1) {
    const p = formatStr.split("(");
    formatName = p[0].toLowerCase().trim();
    const optStr = p[1].substring(0, p[1].length - 1);
    if (formatName === "currency" && optStr.indexOf(":") < 0) {
      if (!formatOptions.currency) formatOptions.currency = optStr.trim();
    } else if (formatName === "relativetime" && optStr.indexOf(":") < 0) {
      if (!formatOptions.range) formatOptions.range = optStr.trim();
    } else {
      const opts = optStr.split(";");
      opts.forEach((opt) => {
        if (opt) {
          const [key, ...rest] = opt.split(":");
          const val = rest.join(":").trim().replace(/^'+|'+$/g, "");
          const trimmedKey = key.trim();
          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;
          if (val === "false") formatOptions[trimmedKey] = false;
          if (val === "true") formatOptions[trimmedKey] = true;
          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);
        }
      });
    }
  }
  return {
    formatName,
    formatOptions
  };
};
var createCachedFormatter = (fn) => {
  const cache3 = {};
  return (val, lng, options) => {
    let optForCache = options;
    if (options && options.interpolationkey && options.formatParams && options.formatParams[options.interpolationkey] && options[options.interpolationkey]) {
      optForCache = {
        ...optForCache,
        [options.interpolationkey]: void 0
      };
    }
    const key = lng + JSON.stringify(optForCache);
    let formatter = cache3[key];
    if (!formatter) {
      formatter = fn(getCleanedCode(lng), options);
      cache3[key] = formatter;
    }
    return formatter(val);
  };
};
var Formatter = class {
  constructor() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    this.logger = baseLogger.create("formatter");
    this.options = options;
    this.formats = {
      number: createCachedFormatter((lng, opt) => {
        const formatter = new Intl.NumberFormat(lng, {
          ...opt
        });
        return (val) => formatter.format(val);
      }),
      currency: createCachedFormatter((lng, opt) => {
        const formatter = new Intl.NumberFormat(lng, {
          ...opt,
          style: "currency"
        });
        return (val) => formatter.format(val);
      }),
      datetime: createCachedFormatter((lng, opt) => {
        const formatter = new Intl.DateTimeFormat(lng, {
          ...opt
        });
        return (val) => formatter.format(val);
      }),
      relativetime: createCachedFormatter((lng, opt) => {
        const formatter = new Intl.RelativeTimeFormat(lng, {
          ...opt
        });
        return (val) => formatter.format(val, opt.range || "day");
      }),
      list: createCachedFormatter((lng, opt) => {
        const formatter = new Intl.ListFormat(lng, {
          ...opt
        });
        return (val) => formatter.format(val);
      })
    };
    this.init(options);
  }
  init(services) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      interpolation: {}
    };
    this.formatSeparator = options.interpolation.formatSeparator || ",";
  }
  add(name, fc) {
    this.formats[name.toLowerCase().trim()] = fc;
  }
  addCached(name, fc) {
    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);
  }
  format(value2, format, lng) {
    let options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    const formats = format.split(this.formatSeparator);
    if (formats.length > 1 && formats[0].indexOf("(") > 1 && formats[0].indexOf(")") < 0 && formats.find((f) => f.indexOf(")") > -1)) {
      const lastIndex = formats.findIndex((f) => f.indexOf(")") > -1);
      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);
    }
    const result = formats.reduce((mem, f) => {
      const {
        formatName,
        formatOptions
      } = parseFormatStr(f);
      if (this.formats[formatName]) {
        let formatted = mem;
        try {
          const valOptions = options?.formatParams?.[options.interpolationkey] || {};
          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;
          formatted = this.formats[formatName](mem, l, {
            ...formatOptions,
            ...options,
            ...valOptions
          });
        } catch (error) {
          this.logger.warn(error);
        }
        return formatted;
      } else {
        this.logger.warn(`there was no format function for ${formatName}`);
      }
      return mem;
    }, value2);
    return result;
  }
};
var removePending = (q, name) => {
  if (q.pending[name] !== void 0) {
    delete q.pending[name];
    q.pendingCount--;
  }
};
var Connector = class extends EventEmitter {
  constructor(backend, store, services) {
    let options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    super();
    this.backend = backend;
    this.store = store;
    this.services = services;
    this.languageUtils = services.languageUtils;
    this.options = options;
    this.logger = baseLogger.create("backendConnector");
    this.waitingReads = [];
    this.maxParallelReads = options.maxParallelReads || 10;
    this.readingCalls = 0;
    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;
    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;
    this.state = {};
    this.queue = [];
    this.backend?.init?.(services, options.backend, options);
  }
  queueLoad(languages, namespaces, options, callback) {
    const toLoad = {};
    const pending = {};
    const toLoadLanguages = {};
    const toLoadNamespaces = {};
    languages.forEach((lng) => {
      let hasAllNamespaces = true;
      namespaces.forEach((ns) => {
        const name = `${lng}|${ns}`;
        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {
          this.state[name] = 2;
        } else if (this.state[name] < 0) ;
        else if (this.state[name] === 1) {
          if (pending[name] === void 0) pending[name] = true;
        } else {
          this.state[name] = 1;
          hasAllNamespaces = false;
          if (pending[name] === void 0) pending[name] = true;
          if (toLoad[name] === void 0) toLoad[name] = true;
          if (toLoadNamespaces[ns] === void 0) toLoadNamespaces[ns] = true;
        }
      });
      if (!hasAllNamespaces) toLoadLanguages[lng] = true;
    });
    if (Object.keys(toLoad).length || Object.keys(pending).length) {
      this.queue.push({
        pending,
        pendingCount: Object.keys(pending).length,
        loaded: {},
        errors: [],
        callback
      });
    }
    return {
      toLoad: Object.keys(toLoad),
      pending: Object.keys(pending),
      toLoadLanguages: Object.keys(toLoadLanguages),
      toLoadNamespaces: Object.keys(toLoadNamespaces)
    };
  }
  loaded(name, err, data) {
    const s2 = name.split("|");
    const lng = s2[0];
    const ns = s2[1];
    if (err) this.emit("failedLoading", lng, ns, err);
    if (!err && data) {
      this.store.addResourceBundle(lng, ns, data, void 0, void 0, {
        skipCopy: true
      });
    }
    this.state[name] = err ? -1 : 2;
    if (err && data) this.state[name] = 0;
    const loaded = {};
    this.queue.forEach((q) => {
      pushPath(q.loaded, [lng], ns);
      removePending(q, name);
      if (err) q.errors.push(err);
      if (q.pendingCount === 0 && !q.done) {
        Object.keys(q.loaded).forEach((l) => {
          if (!loaded[l]) loaded[l] = {};
          const loadedKeys = q.loaded[l];
          if (loadedKeys.length) {
            loadedKeys.forEach((n2) => {
              if (loaded[l][n2] === void 0) loaded[l][n2] = true;
            });
          }
        });
        q.done = true;
        if (q.errors.length) {
          q.callback(q.errors);
        } else {
          q.callback();
        }
      }
    });
    this.emit("loaded", loaded);
    this.queue = this.queue.filter((q) => !q.done);
  }
  read(lng, ns, fcName) {
    let tried = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
    let wait = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : this.retryTimeout;
    let callback = arguments.length > 5 ? arguments[5] : void 0;
    if (!lng.length) return callback(null, {});
    if (this.readingCalls >= this.maxParallelReads) {
      this.waitingReads.push({
        lng,
        ns,
        fcName,
        tried,
        wait,
        callback
      });
      return;
    }
    this.readingCalls++;
    const resolver = (err, data) => {
      this.readingCalls--;
      if (this.waitingReads.length > 0) {
        const next = this.waitingReads.shift();
        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);
      }
      if (err && data && tried < this.maxRetries) {
        setTimeout(() => {
          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);
        }, wait);
        return;
      }
      callback(err, data);
    };
    const fc = this.backend[fcName].bind(this.backend);
    if (fc.length === 2) {
      try {
        const r2 = fc(lng, ns);
        if (r2 && typeof r2.then === "function") {
          r2.then((data) => resolver(null, data)).catch(resolver);
        } else {
          resolver(null, r2);
        }
      } catch (err) {
        resolver(err);
      }
      return;
    }
    return fc(lng, ns, resolver);
  }
  prepareLoading(languages, namespaces) {
    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    let callback = arguments.length > 3 ? arguments[3] : void 0;
    if (!this.backend) {
      this.logger.warn("No backend was added via i18next.use. Will not load resources.");
      return callback && callback();
    }
    if (isString2(languages)) languages = this.languageUtils.toResolveHierarchy(languages);
    if (isString2(namespaces)) namespaces = [namespaces];
    const toLoad = this.queueLoad(languages, namespaces, options, callback);
    if (!toLoad.toLoad.length) {
      if (!toLoad.pending.length) callback();
      return null;
    }
    toLoad.toLoad.forEach((name) => {
      this.loadOne(name);
    });
  }
  load(languages, namespaces, callback) {
    this.prepareLoading(languages, namespaces, {}, callback);
  }
  reload(languages, namespaces, callback) {
    this.prepareLoading(languages, namespaces, {
      reload: true
    }, callback);
  }
  loadOne(name) {
    let prefix = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
    const s2 = name.split("|");
    const lng = s2[0];
    const ns = s2[1];
    this.read(lng, ns, "read", void 0, void 0, (err, data) => {
      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);
      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);
      this.loaded(name, err, data);
    });
  }
  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {
    let options = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
    let clb = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : () => {
    };
    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {
      this.logger.warn(`did not save key "${key}" as the namespace "${namespace}" was not yet loaded`, "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
      return;
    }
    if (key === void 0 || key === null || key === "") return;
    if (this.backend?.create) {
      const opts = {
        ...options,
        isUpdate
      };
      const fc = this.backend.create.bind(this.backend);
      if (fc.length < 6) {
        try {
          let r2;
          if (fc.length === 5) {
            r2 = fc(languages, namespace, key, fallbackValue, opts);
          } else {
            r2 = fc(languages, namespace, key, fallbackValue);
          }
          if (r2 && typeof r2.then === "function") {
            r2.then((data) => clb(null, data)).catch(clb);
          } else {
            clb(null, r2);
          }
        } catch (err) {
          clb(err);
        }
      } else {
        fc(languages, namespace, key, fallbackValue, clb, opts);
      }
    }
    if (!languages || !languages[0]) return;
    this.store.addResource(languages[0], namespace, key, fallbackValue);
  }
};
var get = () => ({
  debug: false,
  initAsync: true,
  ns: ["translation"],
  defaultNS: ["translation"],
  fallbackLng: ["dev"],
  fallbackNS: false,
  supportedLngs: false,
  nonExplicitSupportedLngs: false,
  load: "all",
  preload: false,
  simplifyPluralSuffix: true,
  keySeparator: ".",
  nsSeparator: ":",
  pluralSeparator: "_",
  contextSeparator: "_",
  partialBundledLanguages: false,
  saveMissing: false,
  updateMissing: false,
  saveMissingTo: "fallback",
  saveMissingPlurals: true,
  missingKeyHandler: false,
  missingInterpolationHandler: false,
  postProcess: false,
  postProcessPassResolved: false,
  returnNull: false,
  returnEmptyString: true,
  returnObjects: false,
  joinArrays: false,
  returnedObjectHandler: false,
  parseMissingKeyHandler: false,
  appendNamespaceToMissingKey: false,
  appendNamespaceToCIMode: false,
  overloadTranslationOptionHandler: (args) => {
    let ret = {};
    if (typeof args[1] === "object") ret = args[1];
    if (isString2(args[1])) ret.defaultValue = args[1];
    if (isString2(args[2])) ret.tDescription = args[2];
    if (typeof args[2] === "object" || typeof args[3] === "object") {
      const options = args[3] || args[2];
      Object.keys(options).forEach((key) => {
        ret[key] = options[key];
      });
    }
    return ret;
  },
  interpolation: {
    escapeValue: true,
    format: (value2) => value2,
    prefix: "{{",
    suffix: "}}",
    formatSeparator: ",",
    unescapePrefix: "-",
    nestingPrefix: "$t(",
    nestingSuffix: ")",
    nestingOptionsSeparator: ",",
    maxReplaces: 1e3,
    skipOnVariables: true
  }
});
var transformOptions = (options) => {
  if (isString2(options.ns)) options.ns = [options.ns];
  if (isString2(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];
  if (isString2(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];
  if (options.supportedLngs?.indexOf?.("cimode") < 0) {
    options.supportedLngs = options.supportedLngs.concat(["cimode"]);
  }
  if (typeof options.initImmediate === "boolean") options.initAsync = options.initImmediate;
  return options;
};
var noop4 = () => {
};
var bindMemberFunctions = (inst) => {
  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));
  mems.forEach((mem) => {
    if (typeof inst[mem] === "function") {
      inst[mem] = inst[mem].bind(inst);
    }
  });
};
var I18n = class _I18n extends EventEmitter {
  constructor() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    let callback = arguments.length > 1 ? arguments[1] : void 0;
    super();
    this.options = transformOptions(options);
    this.services = {};
    this.logger = baseLogger;
    this.modules = {
      external: []
    };
    bindMemberFunctions(this);
    if (callback && !this.isInitialized && !options.isClone) {
      if (!this.options.initAsync) {
        this.init(options, callback);
        return this;
      }
      setTimeout(() => {
        this.init(options, callback);
      }, 0);
    }
  }
  init() {
    var _this = this;
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    let callback = arguments.length > 1 ? arguments[1] : void 0;
    this.isInitializing = true;
    if (typeof options === "function") {
      callback = options;
      options = {};
    }
    if (options.defaultNS == null && options.ns) {
      if (isString2(options.ns)) {
        options.defaultNS = options.ns;
      } else if (options.ns.indexOf("translation") < 0) {
        options.defaultNS = options.ns[0];
      }
    }
    const defOpts = get();
    this.options = {
      ...defOpts,
      ...this.options,
      ...transformOptions(options)
    };
    this.options.interpolation = {
      ...defOpts.interpolation,
      ...this.options.interpolation
    };
    if (options.keySeparator !== void 0) {
      this.options.userDefinedKeySeparator = options.keySeparator;
    }
    if (options.nsSeparator !== void 0) {
      this.options.userDefinedNsSeparator = options.nsSeparator;
    }
    const createClassOnDemand = (ClassOrObject) => {
      if (!ClassOrObject) return null;
      if (typeof ClassOrObject === "function") return new ClassOrObject();
      return ClassOrObject;
    };
    if (!this.options.isClone) {
      if (this.modules.logger) {
        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);
      } else {
        baseLogger.init(null, this.options);
      }
      let formatter;
      if (this.modules.formatter) {
        formatter = this.modules.formatter;
      } else {
        formatter = Formatter;
      }
      const lu = new LanguageUtil(this.options);
      this.store = new ResourceStore(this.options.resources, this.options);
      const s2 = this.services;
      s2.logger = baseLogger;
      s2.resourceStore = this.store;
      s2.languageUtils = lu;
      s2.pluralResolver = new PluralResolver(lu, {
        prepend: this.options.pluralSeparator,
        simplifyPluralSuffix: this.options.simplifyPluralSuffix
      });
      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {
        s2.formatter = createClassOnDemand(formatter);
        s2.formatter.init(s2, this.options);
        this.options.interpolation.format = s2.formatter.format.bind(s2.formatter);
      }
      s2.interpolator = new Interpolator(this.options);
      s2.utils = {
        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
      };
      s2.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s2.resourceStore, s2, this.options);
      s2.backendConnector.on("*", function(event) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        _this.emit(event, ...args);
      });
      if (this.modules.languageDetector) {
        s2.languageDetector = createClassOnDemand(this.modules.languageDetector);
        if (s2.languageDetector.init) s2.languageDetector.init(s2, this.options.detection, this.options);
      }
      if (this.modules.i18nFormat) {
        s2.i18nFormat = createClassOnDemand(this.modules.i18nFormat);
        if (s2.i18nFormat.init) s2.i18nFormat.init(this);
      }
      this.translator = new Translator(this.services, this.options);
      this.translator.on("*", function(event) {
        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }
        _this.emit(event, ...args);
      });
      this.modules.external.forEach((m) => {
        if (m.init) m.init(this);
      });
    }
    this.format = this.options.interpolation.format;
    if (!callback) callback = noop4;
    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
      if (codes.length > 0 && codes[0] !== "dev") this.options.lng = codes[0];
    }
    if (!this.services.languageDetector && !this.options.lng) {
      this.logger.warn("init: no languageDetector is used and no lng is defined");
    }
    const storeApi = ["getResource", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"];
    storeApi.forEach((fcName) => {
      this[fcName] = function() {
        return _this.store[fcName](...arguments);
      };
    });
    const storeApiChained = ["addResource", "addResources", "addResourceBundle", "removeResourceBundle"];
    storeApiChained.forEach((fcName) => {
      this[fcName] = function() {
        _this.store[fcName](...arguments);
        return _this;
      };
    });
    const deferred = defer();
    const load = () => {
      const finish = (err, t3) => {
        this.isInitializing = false;
        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn("init: i18next is already initialized. You should call init just once!");
        this.isInitialized = true;
        if (!this.options.isClone) this.logger.log("initialized", this.options);
        this.emit("initialized", this.options);
        deferred.resolve(t3);
        callback(err, t3);
      };
      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));
      this.changeLanguage(this.options.lng, finish);
    };
    if (this.options.resources || !this.options.initAsync) {
      load();
    } else {
      setTimeout(load, 0);
    }
    return deferred;
  }
  loadResources(language) {
    let callback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop4;
    let usedCallback = callback;
    const usedLng = isString2(language) ? language : this.language;
    if (typeof language === "function") usedCallback = language;
    if (!this.options.resources || this.options.partialBundledLanguages) {
      if (usedLng?.toLowerCase() === "cimode" && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();
      const toLoad = [];
      const append = (lng) => {
        if (!lng) return;
        if (lng === "cimode") return;
        const lngs = this.services.languageUtils.toResolveHierarchy(lng);
        lngs.forEach((l) => {
          if (l === "cimode") return;
          if (toLoad.indexOf(l) < 0) toLoad.push(l);
        });
      };
      if (!usedLng) {
        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
        fallbacks.forEach((l) => append(l));
      } else {
        append(usedLng);
      }
      this.options.preload?.forEach?.((l) => append(l));
      this.services.backendConnector.load(toLoad, this.options.ns, (e2) => {
        if (!e2 && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);
        usedCallback(e2);
      });
    } else {
      usedCallback(null);
    }
  }
  reloadResources(lngs, ns, callback) {
    const deferred = defer();
    if (typeof lngs === "function") {
      callback = lngs;
      lngs = void 0;
    }
    if (typeof ns === "function") {
      callback = ns;
      ns = void 0;
    }
    if (!lngs) lngs = this.languages;
    if (!ns) ns = this.options.ns;
    if (!callback) callback = noop4;
    this.services.backendConnector.reload(lngs, ns, (err) => {
      deferred.resolve();
      callback(err);
    });
    return deferred;
  }
  use(module) {
    if (!module) throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");
    if (!module.type) throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");
    if (module.type === "backend") {
      this.modules.backend = module;
    }
    if (module.type === "logger" || module.log && module.warn && module.error) {
      this.modules.logger = module;
    }
    if (module.type === "languageDetector") {
      this.modules.languageDetector = module;
    }
    if (module.type === "i18nFormat") {
      this.modules.i18nFormat = module;
    }
    if (module.type === "postProcessor") {
      postProcessor.addPostProcessor(module);
    }
    if (module.type === "formatter") {
      this.modules.formatter = module;
    }
    if (module.type === "3rdParty") {
      this.modules.external.push(module);
    }
    return this;
  }
  setResolvedLanguage(l) {
    if (!l || !this.languages) return;
    if (["cimode", "dev"].indexOf(l) > -1) return;
    for (let li = 0; li < this.languages.length; li++) {
      const lngInLngs = this.languages[li];
      if (["cimode", "dev"].indexOf(lngInLngs) > -1) continue;
      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {
        this.resolvedLanguage = lngInLngs;
        break;
      }
    }
  }
  changeLanguage(lng, callback) {
    var _this2 = this;
    this.isLanguageChangingTo = lng;
    const deferred = defer();
    this.emit("languageChanging", lng);
    const setLngProps = (l) => {
      this.language = l;
      this.languages = this.services.languageUtils.toResolveHierarchy(l);
      this.resolvedLanguage = void 0;
      this.setResolvedLanguage(l);
    };
    const done = (err, l) => {
      if (l) {
        setLngProps(l);
        this.translator.changeLanguage(l);
        this.isLanguageChangingTo = void 0;
        this.emit("languageChanged", l);
        this.logger.log("languageChanged", l);
      } else {
        this.isLanguageChangingTo = void 0;
      }
      deferred.resolve(function() {
        return _this2.t(...arguments);
      });
      if (callback) callback(err, function() {
        return _this2.t(...arguments);
      });
    };
    const setLng = (lngs) => {
      if (!lng && !lngs && this.services.languageDetector) lngs = [];
      const l = isString2(lngs) ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);
      if (l) {
        if (!this.language) {
          setLngProps(l);
        }
        if (!this.translator.language) this.translator.changeLanguage(l);
        this.services.languageDetector?.cacheUserLanguage?.(l);
      }
      this.loadResources(l, (err) => {
        done(err, l);
      });
    };
    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {
      setLng(this.services.languageDetector.detect());
    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {
      if (this.services.languageDetector.detect.length === 0) {
        this.services.languageDetector.detect().then(setLng);
      } else {
        this.services.languageDetector.detect(setLng);
      }
    } else {
      setLng(lng);
    }
    return deferred;
  }
  getFixedT(lng, ns, keyPrefix) {
    var _this3 = this;
    const fixedT = function(key, opts) {
      let options;
      if (typeof opts !== "object") {
        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
          rest[_key3 - 2] = arguments[_key3];
        }
        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));
      } else {
        options = {
          ...opts
        };
      }
      options.lng = options.lng || fixedT.lng;
      options.lngs = options.lngs || fixedT.lngs;
      options.ns = options.ns || fixedT.ns;
      if (options.keyPrefix !== "") options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;
      const keySeparator = _this3.options.keySeparator || ".";
      let resultKey;
      if (options.keyPrefix && Array.isArray(key)) {
        resultKey = key.map((k) => `${options.keyPrefix}${keySeparator}${k}`);
      } else {
        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;
      }
      return _this3.t(resultKey, options);
    };
    if (isString2(lng)) {
      fixedT.lng = lng;
    } else {
      fixedT.lngs = lng;
    }
    fixedT.ns = ns;
    fixedT.keyPrefix = keyPrefix;
    return fixedT;
  }
  t() {
    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }
    return this.translator?.translate(...args);
  }
  exists() {
    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
      args[_key5] = arguments[_key5];
    }
    return this.translator?.exists(...args);
  }
  setDefaultNamespace(ns) {
    this.options.defaultNS = ns;
  }
  hasLoadedNamespace(ns) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!this.isInitialized) {
      this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages);
      return false;
    }
    if (!this.languages || !this.languages.length) {
      this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages);
      return false;
    }
    const lng = options.lng || this.resolvedLanguage || this.languages[0];
    const fallbackLng = this.options ? this.options.fallbackLng : false;
    const lastLng = this.languages[this.languages.length - 1];
    if (lng.toLowerCase() === "cimode") return true;
    const loadNotPending = (l, n2) => {
      const loadState = this.services.backendConnector.state[`${l}|${n2}`];
      return loadState === -1 || loadState === 0 || loadState === 2;
    };
    if (options.precheck) {
      const preResult = options.precheck(this, loadNotPending);
      if (preResult !== void 0) return preResult;
    }
    if (this.hasResourceBundle(lng, ns)) return true;
    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;
    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;
    return false;
  }
  loadNamespaces(ns, callback) {
    const deferred = defer();
    if (!this.options.ns) {
      if (callback) callback();
      return Promise.resolve();
    }
    if (isString2(ns)) ns = [ns];
    ns.forEach((n2) => {
      if (this.options.ns.indexOf(n2) < 0) this.options.ns.push(n2);
    });
    this.loadResources((err) => {
      deferred.resolve();
      if (callback) callback(err);
    });
    return deferred;
  }
  loadLanguages(lngs, callback) {
    const deferred = defer();
    if (isString2(lngs)) lngs = [lngs];
    const preloaded = this.options.preload || [];
    const newLngs = lngs.filter((lng) => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));
    if (!newLngs.length) {
      if (callback) callback();
      return Promise.resolve();
    }
    this.options.preload = preloaded.concat(newLngs);
    this.loadResources((err) => {
      deferred.resolve();
      if (callback) callback(err);
    });
    return deferred;
  }
  dir(lng) {
    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);
    if (!lng) return "rtl";
    const rtlLngs = ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ug", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam", "ckb"];
    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());
    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf("-arab") > 1 ? "rtl" : "ltr";
  }
  static createInstance() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    let callback = arguments.length > 1 ? arguments[1] : void 0;
    return new _I18n(options, callback);
  }
  cloneInstance() {
    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    let callback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop4;
    const forkResourceStore = options.forkResourceStore;
    if (forkResourceStore) delete options.forkResourceStore;
    const mergedOptions = {
      ...this.options,
      ...options,
      ...{
        isClone: true
      }
    };
    const clone = new _I18n(mergedOptions);
    if (options.debug !== void 0 || options.prefix !== void 0) {
      clone.logger = clone.logger.clone(options);
    }
    const membersToCopy = ["store", "services", "language"];
    membersToCopy.forEach((m) => {
      clone[m] = this[m];
    });
    clone.services = {
      ...this.services
    };
    clone.services.utils = {
      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)
    };
    if (forkResourceStore) {
      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {
        prev[l] = {
          ...this.store.data[l]
        };
        return Object.keys(prev[l]).reduce((acc, n2) => {
          acc[n2] = {
            ...prev[l][n2]
          };
          return acc;
        }, {});
      }, {});
      clone.store = new ResourceStore(clonedData, mergedOptions);
      clone.services.resourceStore = clone.store;
    }
    clone.translator = new Translator(clone.services, mergedOptions);
    clone.translator.on("*", function(event) {
      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
        args[_key6 - 1] = arguments[_key6];
      }
      clone.emit(event, ...args);
    });
    clone.init(mergedOptions, callback);
    clone.translator.options = mergedOptions;
    clone.translator.backendConnector.services.utils = {
      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)
    };
    return clone;
  }
  toJSON() {
    return {
      options: this.options,
      store: this.store,
      language: this.language,
      languages: this.languages,
      resolvedLanguage: this.resolvedLanguage
    };
  }
};
var instance = I18n.createInstance();
instance.createInstance = I18n.createInstance;
var createInstance = instance.createInstance;
var dir = instance.dir;
var init = instance.init;
var loadResources = instance.loadResources;
var reloadResources = instance.reloadResources;
var use = instance.use;
var changeLanguage = instance.changeLanguage;
var getFixedT = instance.getFixedT;
var t2 = instance.t;
var exists = instance.exists;
var setDefaultNamespace = instance.setDefaultNamespace;
var hasLoadedNamespace2 = instance.hasLoadedNamespace;
var loadNamespaces2 = instance.loadNamespaces;
var loadLanguages2 = instance.loadLanguages;

// ../cli-i18n/src/create-i18n.ts
function createI18n(messages) {
  const config = {
    lng: "en",
    resources: { en: { translation: messages } },
    keySeparator: false,
    react: {
      // @ts-expect-error - missing type
      defaultTransParent: Text2
    }
  };
  const icu = new es_default();
  const i18nInstance2 = instance.createInstance(config);
  i18nInstance2.use(icu);
  i18nInstance2.use(initReactI18next);
  void i18nInstance2.init();
  return i18nInstance2;
}

// ../cli-i18n/src/I18nProvider.tsx
var I18nProvider = ({
  children,
  messages,
  i18n: initialI18n
}) => {
  const [i18n] = (0, import_react60.useState)(() => initialI18n ?? createI18n(messages));
  return /* @__PURE__ */ import_react60.default.createElement(I18nextProvider, { i18n }, children);
};

// ../cli-i18n/src/index.ts
init_esm_shims();

export {
  require_react,
  Box_default,
  Newline,
  use_input_default,
  UnorderedList,
  Text2 as Text,
  ConfirmInput,
  TextInput2 as TextInput,
  Alert,
  Badge,
  Key,
  terminalLink,
  Link,
  Spinner2 as Spinner,
  ErrorDetails,
  Notification,
  useExit,
  useAsync2 as useAsync,
  useAsyncCallback3 as useAsyncCallback,
  render2 as render,
  renderSync,
  renderErrorSync,
  Trans2 as Trans,
  useTranslation,
  createI18n,
  I18nProvider
};
/*! Bundled license information:

react/cjs/react.production.min.js:
  (**
   * @license React
   * react.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.production.min.js:
  (**
   * @license React
   * scheduler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-reconciler/cjs/react-reconciler.production.min.js:
  (**
   * @license React
   * react-reconciler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-reconciler/cjs/react-reconciler-constants.production.min.js:
  (**
   * @license React
   * react-reconciler-constants.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=chunk-OH3G6JMX.js.map