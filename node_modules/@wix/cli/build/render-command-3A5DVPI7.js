import { createRequire as _createRequire } from 'node:module';
const require = _createRequire(import.meta.url);
import {
  messages_default
} from "./chunk-F6VUNTGD.js";
import {
  reportCommandStartEvent
} from "./chunk-GXQQXURF.js";
import "./chunk-KWG4MUE3.js";
import {
  BiProvider,
  ErrorReporterProvider
} from "./chunk-7VND5WMC.js";
import "./chunk-WN3D6AOY.js";
import {
  I18nProvider,
  render,
  require_react
} from "./chunk-OH3G6JMX.js";
import "./chunk-W423UTD3.js";
import "./chunk-2K5KKUL3.js";
import "./chunk-YU54OBFT.js";
import "./chunk-XMTHMR2B.js";
import "./chunk-VSMZTFUW.js";
import "./chunk-2CPXK3HU.js";
import "./chunk-F6DVF5WQ.js";
import "./chunk-GNB7T7J7.js";
import "./chunk-CVJG3VZM.js";
import {
  __toESM,
  init_esm_shims
} from "./chunk-PYIAC2GK.js";

// src/commands/render-command.tsx
init_esm_shims();
var import_react = __toESM(require_react(), 1);
async function renderCommand(command, { biLogger, errorReporter }, tree) {
  await runCommand(command, { biLogger, errorReporter }, async () => {
    await render(
      /* @__PURE__ */ import_react.default.createElement(BiProvider, { value: biLogger }, /* @__PURE__ */ import_react.default.createElement(ErrorReporterProvider, { value: errorReporter }, /* @__PURE__ */ import_react.default.createElement(I18nProvider, { messages: messages_default }, tree)))
    );
  });
}
async function runCommand(command, services, commandFn) {
  const commandStatus = reportCommandStartEvent(services.biLogger, command);
  try {
    await commandFn();
    commandStatus.succeed();
  } catch (e) {
    commandStatus.failed(e);
    throw e;
  }
}
export {
  renderCommand
};
//# sourceMappingURL=render-command-3A5DVPI7.js.map