{"version":3,"sources":["../../cli-data-dir/src/index.ts","../../cli-fs/src/index.ts","../../cli-fs/src/schemas.ts"],"sourcesContent":["import { mkdir } from 'node:fs/promises';\nimport { resolve } from 'node:path';\nimport { homedir } from 'node:os';\nimport { getTestOverrides } from '@wix/cli-test-overrides';\n\nexport function getDataDirPath() {\n  return getTestOverrides().dataDir ?? resolve(homedir(), '.wix');\n}\n\nexport async function ensureDataDirExists() {\n  await mkdir(getDataDirPath(), { recursive: true });\n}\n","import {\n  access,\n  readFile as fsReadFile,\n  writeFile,\n  mkdir,\n} from 'node:fs/promises';\nimport { dirname, join, relative } from 'node:path';\nimport { EOL } from 'node:os';\nimport { CliError, CliErrorCode } from '@wix/cli-error';\nimport { packageJsonSchema } from './schemas.js';\nimport type { PackageJson } from './schemas.js';\n\nexport function toJsonString(object: unknown, opts?: { spaces: number }) {\n  return JSON.stringify(object, null, opts?.spaces).concat(EOL);\n}\n\nexport async function writeJson(\n  filePath: string,\n  object: unknown,\n  opts?: { spaces: number }\n) {\n  const str = toJsonString(object, opts);\n  await outputDir(dirname(filePath));\n\n  try {\n    await writeFile(filePath, str, 'utf-8');\n  } catch (e) {\n    throw new CliError({\n      code: CliErrorCode.FailedToWriteJson({ filePath }),\n      cause: e,\n    });\n  }\n}\n\nexport async function readJson(file: string): Promise<unknown> {\n  let content = null;\n  try {\n    content = await fsReadFile(file, 'utf-8');\n  } catch (e) {\n    throw new CliError({\n      code: CliErrorCode.FailedToReadJson({ filePath: file }),\n      cause: e,\n    });\n  }\n\n  try {\n    return JSON.parse(content);\n  } catch (e) {\n    throw new CliError({\n      code: CliErrorCode.InvalidJsonFile({ filePath: file }),\n      cause: e,\n    });\n  }\n}\n\nexport async function readFile(file: string): Promise<Buffer>;\nexport async function readFile(\n  file: string,\n  encoding: 'utf-8'\n): Promise<string>;\nexport async function readFile(file: string, encoding?: 'utf-8') {\n  try {\n    return await fsReadFile(file, encoding);\n  } catch (e) {\n    throw new CliError({\n      code: CliErrorCode.FailedToReadFile({ filePath: file }),\n      cause: e,\n    });\n  }\n}\n\nexport function pathExists(path: string) {\n  return access(path)\n    .then(() => true)\n    .catch(() => false);\n}\n\nexport async function outputFile(file: string, content: string) {\n  await outputDir(dirname(file));\n\n  try {\n    await writeFile(file, content, 'utf-8');\n  } catch (e) {\n    throw new CliError({\n      code: CliErrorCode.FailedToWriteFile({ filePath: file }),\n      cause: e,\n    });\n  }\n}\n\nexport async function outputDir(dir: string) {\n  try {\n    await mkdir(dir, { recursive: true });\n  } catch (e) {\n    throw new CliError({\n      code: CliErrorCode.FailedToCreateDir({ dirPath: dir }),\n      cause: e,\n    });\n  }\n}\n\nexport async function readPackageJson(projectFolder: string) {\n  const packageJsonPath = join(projectFolder, 'package.json');\n\n  const json = await readJson(packageJsonPath);\n  const parsedPackageJson = await packageJsonSchema.safeParseAsync(json);\n\n  if (!parsedPackageJson.success) {\n    throw new CliError({\n      code: CliErrorCode.InvalidConfigSchemaError({\n        configPath: packageJsonPath,\n        zodError: parsedPackageJson.error,\n      }),\n      cause: parsedPackageJson.error,\n    });\n  }\n\n  /**\n   * Returning original json because zod clone object and change the order of keys.\n   * It's safe to return the original json because we already validated it.\n   */\n  return json as PackageJson;\n}\n\nexport function readPackageJsonContent(projectFolder: string) {\n  return readFile(join(projectFolder, 'package.json'), 'utf-8');\n}\n\nexport async function writePackageJson(\n  projectFolder: string,\n  packageJson: PackageJson\n) {\n  const packageJsonPath = join(projectFolder, 'package.json');\n\n  await writeJson(packageJsonPath, packageJson, { spaces: 2 });\n}\n\nexport function relativeFolderName(rootFolder: string, filePath: string) {\n  return relative(rootFolder, dirname(filePath));\n}\n\nexport { type PackageJson } from './schemas.js';\n","import { z } from 'zod';\n\nexport const packageJsonSchema = z.object({\n  dependencies: z.record(z.string()).optional(),\n  devDependencies: z.record(z.string()).optional(),\n  peerDependencies: z.record(z.string()).optional(),\n});\n\nexport type PackageJson = z.infer<typeof packageJsonSchema>;\n"],"mappings":"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","names":[]}