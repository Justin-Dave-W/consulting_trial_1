import { createRequire as _createRequire } from 'node:module';
const require = _createRequire(import.meta.url);
import {
  veloConfigSchema
} from "./chunk-IBISICD2.js";
import {
  WIX_CONFIG_FILENAME,
  getWixConfigFilePath
} from "./chunk-2CPXK3HU.js";
import {
  readJson,
  writeJson
} from "./chunk-F6DVF5WQ.js";
import {
  CliError,
  CliErrorCode
} from "./chunk-CVJG3VZM.js";
import {
  init_esm_shims
} from "./chunk-PYIAC2GK.js";

// ../cli-site-old/src/model.ts
init_esm_shims();

// ../cli-site-old/src/files/velo.config.ts
init_esm_shims();
async function saveVeloConfig(projectFolder, config) {
  await writeJson(getWixConfigFilePath(projectFolder), config, {
    spaces: 2
  });
}
async function loadVeloConfig(projectFolder) {
  const configFile = await readJson(getWixConfigFilePath(projectFolder));
  try {
    return veloConfigSchema.parse(configFile);
  } catch (e) {
    throw new CliError({
      code: CliErrorCode.InvalidVeloConfigJson({
        configFilename: WIX_CONFIG_FILENAME
      }),
      cause: e
    });
  }
}

// ../cli-site-old/src/model.ts
async function loadProjectModel(projectFolder) {
  const config = await loadVeloConfig(projectFolder);
  return {
    projectFolder,
    metaSiteId: config.siteId,
    revision: config.uiVersion
  };
}
async function saveProjectModel(model) {
  const config = {
    siteId: model.metaSiteId,
    uiVersion: model.revision
  };
  await saveVeloConfig(model.projectFolder, config);
}

export {
  loadProjectModel,
  saveProjectModel
};
//# sourceMappingURL=chunk-KU7XWHFR.js.map